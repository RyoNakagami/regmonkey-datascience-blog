---
title: "CSSで使う単位"
author: "Ryo Nakagami"
date: "2025-04-30"
listing_category: development
categories: [html, quarto]
comments:
  utterances:
       repo: RyoNakagami/regmonkey-datascience-blog
       label: discussion
       issue-term: title
---




<!--::: {.callout-note collapse="true" icon=false}-->
::: {.callout-note collapse="false" icon=false}

## CSSで使用する単位一覧

:::: {.columns}
::: {.column width="50%"}

<strong > &#9654;&nbsp; 相対単位</strong>

::: {.custom-table style="width: 95%"}

|||
|---|---|
|px|モニターの画素(ピクセル)を1とする単位|
|%|%で割合を指定|
|em|親要素の大文字Mのフォントサイズを1とする単位|
|ex|親要素の小文字xフォントサイズを1とする単位|
|rem|ルート要素の大文字のフォントサイズを1とする単位|

: {tbl-colwidths="[5,50]"}

:::

:::

::: {.column width="50%"}

<strong > &#9654;&nbsp; 絶対単位</strong>

::: {.custom-table style="width: 95%"}

|||
|---|---|
|pt|1/72インチを1とする単位|
|pc|12ptを1とする単位|
|mm|ミリメートル基準|
|cm|センチメートル基準|
|in|インチを1とする単位|

: {tbl-colwidths="[5,50]"}

:::


:::
::::

:::


<strong > &#9654;&nbsp; emの使いどころ</strong>

ユーザー環境によってフォントのサイズが変わってしまうWebデザインにおいて，

- 1文字分余白を開ける
- 行間の文字を高さの1.5倍にする

といったその時々のフォントサイズに応じたサイズ指定を試みたい場合に，親要素の文字の大きさを単位とする`em`が役に立ちます．

```{=html}
 <style>
    .example {
      font-family: 'Meiryo', sans-serif;
      font-size: 40px;
      line-height: 1; /* 1.5 × 16px = 24px line height */
      background-color: #f0f8ff;
      border: 1px dashed #999;
      padding-top: 0.5em;
      padding-bottom: 0.5em;
      position: relative;
    }

    .example::before {
      content: '↕ this is padding-top: 0.5em';
      position: absolute;
      top: 0;
      left: 0;
      font-size: 0.5em;
      color: #d33;
      background: rgba(255, 220, 220, 0.8);
      padding: 2px 6px;
    }

    .example::after {
      content: '↕ this is padding-top: 0.5em';
      position: absolute;
      bottom: 0;
      left: 0;
      font-size: 0.5em;
      color: #d33;
      background: rgba(255, 220, 220, 0.8);
      padding: 2px 6px;
    }

    .line-through {
      font-family: 'Meiryo', sans-serif;
      position: relative;
      display: inline-block;
      color: black;
    }

    .annotation {
      font-size: 0.5em;
      vertical-align: middle;
      color: gray;
      padding-bottom: 0.5em;
    }

    
</style>

<div class="example">
    <span class="line-through">Meiryo</span><span style="color: gray;">↕</span></span><span class="annotation">inline-height 1em</span>
</div>
```
<br>

## emとremの違い

emもremも相対単位となりますが，remは常に最上位のルート要素のフォントサイズを規準に計算されるという特徴があります．活用例として，remは要素が入れ子になるような場合に，意図せずサイズが変更されるようなリスクを低減することができます．

:::: {.columns}


<!--::: {.callout-note collapse="true" icon=false}-->
::: {.callout-note collapse="true" icon=false}
## html code example

```{.html}
<style>
  html {
    font-size: 16px; /* 1rem = 16px */
  }

  li.em-example {
    font-size: 1.5em; /* 1.5 × 20px = 30px */
    color: steelblue;
  }

  li.rem-example {
    font-size: 1.5rem; /* 1.5 × 16px = 24px */
    color: darkorange;
  }
</style>

<ul>
    <li class="em-example">This text uses <code>1.5em</code> font size</li>
    <li class="em-example">This text uses <code>1.5em</code> font size
        <ul>
            <li class="em-example">This text uses <code>1.5em</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
    </li>
</ul>


<ul>
    <li class="rem-example">This text uses <code>1.5rem</code> font size</li>
    <li class="rem-example">This text uses <code>1.5rem</code> font size
        <ul>
            <li class="rem-example">This text uses <code>1.5rem</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
        </ul>
    </li>
</ul>
```

:::


::: {.column width="45%"}

<strong > &#9654;&nbsp; emの挙動</strong>


```{=html}
<style>
  html {
    font-size: 16px; /* 1rem = 16px */
  }

  li.em-example {
    font-size: 1.5em; /* 1.5 × 20px = 30px */
    color: steelblue;
  }
</style>

<ul>
    <li class="em-example">This text uses <code>1.5em</code> font size</li>
    <li class="em-example">This text uses <code>1.5em</code> font size
        <ul>
            <li class="em-example">This text uses <code>1.5em</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
    </li>
  </ul>
```

:::
::: {.column width="50%"}

<strong > &#9654;&nbsp; remの挙動</strong>


```{=html}
<style>
  html {
    font-size: 16px; /* 1rem = 16px */
  }

  li.rem-example {
    font-size: 1.5rem; /* 1.5 × 16px = 24px */
    color: darkorange;
  }
</style>

<ul>
    <li class="rem-example">This text uses <code>1.5rem</code> font size</li>
    <li class="rem-example">This text uses <code>1.5rem</code> font size
        <ul>
            <li class="rem-example">This text uses <code>1.5rem</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
        </ul>
    </li>
  </ul>
```

:::

:::{.callout-note}
## key takeaways

- `em`では入れ子構造となってる`<li>`セクションについて，直前のフォントサイズ 1.5emにたいして更に 1.5em でフォントサイズを計算している 
- `rem`では入れ子構造となってる`<li>`セクションでも，ルート要素フォントサイズ16pxを参照して, 1.5remを計算している

:::


::::
