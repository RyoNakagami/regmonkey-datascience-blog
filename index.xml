<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>regmonkey datascience blog</title>
<link>https://ryonakagami.github.io/regmonkey-datascience-blog/</link>
<atom:link href="https://ryonakagami.github.io/regmonkey-datascience-blog/index.xml" rel="self" type="application/rss+xml"/>
<description>日々の徒然勉強日記</description>
<generator>quarto-1.8.25</generator>
<lastBuildDate>Thu, 30 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Git Flow–based branch strategy</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-30-branch-strategy/</link>
  <description><![CDATA[ 






<section id="branch-strategy" class="level2">
<h2 class="anchored" data-anchor-id="branch-strategy">1. Branch Strategy</h2>
<ul>
<li>Git Flow をベースにしたブランチ戦略を採用</li>
<li>リリース系列ブランチ，<code>develop</code>を統合ブランチとするが，Issue規模・リリース運用の実態に合わせて，Issue用の統合ブランチを活用</li>
</ul>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">%%{ init: {
    'theme': 'default',
    'themeVariables': {
        'fontFamily': 'Meiryo'
    },
    'gitGraph': {
        'orientation': 'LR',
        'nodeSpacing': 150,
        'mainBranchName': 'main'
    }
} }%%

gitGraph
   commit id: "" tag: "v1.0.0"

   branch hotfix
   checkout hotfix
   commit id: "BUGFIX"

   checkout main
   branch develop
   checkout develop
   commit id: "開発開始"

   branch feature/0001/login
   checkout feature/0001/login
   commit id: ""

   checkout main
   merge hotfix tag: "v1.0.1"

   checkout develop
   merge hotfix
   commit id: "incorporate hotfix"

   checkout develop
   merge feature/0001/login
   commit id: "ログイン機能実装"

   branch release/1.1.x
   checkout release/1.1.x
   commit id: "リリース準備"
   commit id: "bugfix"

   checkout develop
   merge release/1.1.x

   checkout main
   merge release/1.1.x  tag: "v1.1.0"

   checkout develop
   commit id: "FEATURE"
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="ブランチの種類" class="level2">
<h2 class="anchored" data-anchor-id="ブランチの種類">2. ブランチの種類</h2>
<section id="basic-syntax" class="level3">
<h3 class="anchored" data-anchor-id="basic-syntax">Basic Syntax</h3>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;branch-type&gt;/&lt;issue-number&gt;/&lt;task-description&gt;</span></span></code></pre></div></div>
<p>release 系列ブランチや hotfix ブランチなど，Issue番号を含まない場合もあります．その場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">release/&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">hotfix/&lt;task-description&gt;</span></span></code></pre></div></div>
</section>
<section id="命名規則" class="level3">
<h3 class="anchored" data-anchor-id="命名規則">命名規則</h3>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 40%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th>ブランチ種別</th>
<th>命名規則</th>
<th>目的</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>本番用</strong></td>
<td><code>main</code></td>
<td>本番デプロイ可能な安定版コード．常にリリース済みの状態を保持</td>
</tr>
<tr class="even">
<td><strong>開発用</strong></td>
<td><code>develop</code></td>
<td>全機能・修正の統合先（メイン開発ブランチ）</td>
</tr>
<tr class="odd">
<td><strong>機能追加</strong></td>
<td><code>feature/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>新機能開発や改善タスク．小規模IssueはこのままdevelopへPR</td>
</tr>
<tr class="even">
<td><strong>機能改善</strong></td>
<td><code>enhancement/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>既存機能の改善タスク．UX改善・処理最適化など</td>
</tr>
<tr class="odd">
<td><strong>バグ修正</strong></td>
<td><code>bugfix/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>不具合修正用ブランチ．テスト後developへ統合</td>
</tr>
<tr class="even">
<td><strong>Issue統合</strong></td>
<td><code>issue/&lt;issue番号&gt;</code></td>
<td><strong>中〜大規模Issueの場合のみ</strong>作成．複数サブタスクを統合するための統合ブランチ</td>
</tr>
<tr class="odd">
<td><strong>リリース系列</strong></td>
<td><code>release/&lt;major&gt;.&lt;minor&gt;.x</code></td>
<td>特定マイナー系列（例: 1.1.x）の安定維持・軽微修正対応用（長寿命）</td>
</tr>
<tr class="even">
<td><strong>リリース準備</strong></td>
<td><code>release/&lt;version&gt;/create-release-note</code></td>
<td>リリースノート作成・バージョン確定・タグ準備用（短命）</td>
</tr>
<tr class="odd">
<td><strong>緊急修正</strong></td>
<td><code>hotfix/&lt;issue番号&gt;</code></td>
<td>本番環境向けの即時修正．修正後 main / develop 両方に反映</td>
</tr>
<tr class="even">
<td><strong>テスト検証用</strong></td>
<td><code>test/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>一時的なテストコード・検証用ブランチ．検証完了後削除</td>
</tr>
<tr class="odd">
<td><strong>ドキュメント整備</strong></td>
<td><code>docs/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>ドキュメント・ガイド・README更新などのためのブランチ</td>
</tr>
<tr class="even">
<td><strong>リファクタリング</strong></td>
<td><code>refactor/&lt;issue番号&gt;/&lt;タスク&gt;</code></td>
<td>挙動を変えずに内部構造を改善するためのブランチ</td>
</tr>
<tr class="odd">
<td><strong>検証・試作用</strong></td>
<td><code>sandbox/&lt;タスク&gt;</code></td>
<td>新しいアイデアやPoCを試すための実験的ブランチ（非公式）．安定版にマージしない前提</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="命名例" class="level3">
<h3 class="anchored" data-anchor-id="命名例">命名例</h3>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 40%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>ブランチ名</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>feature/0123-add-login</code></td>
<td>新機能</td>
</tr>
<tr class="even">
<td><code>bugfix/0123-fix-login-error</code></td>
<td>修正</td>
</tr>
<tr class="odd">
<td><code>issue/0123</code></td>
<td>複数サブタスクを含むIssue統合</td>
</tr>
<tr class="even">
<td><code>release/1.1.x</code></td>
<td>1.1 系列のリリース維持</td>
</tr>
<tr class="odd">
<td><code>release/1.1.1/create-release-note</code></td>
<td>1.1.1 リリース準備</td>
</tr>
<tr class="even">
<td><code>hotfix/0145-critical-fix</code></td>
<td>緊急対応</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="開発フロー" class="level2">
<h2 class="anchored" data-anchor-id="開発フロー">3. 開発フロー</h2>
<section id="step-1.-サブタスク開発" class="level3">
<h3 class="anchored" data-anchor-id="step-1.-サブタスク開発">Step 1. サブタスク開発</h3>
<p>各Issueに対して、必要なサブタスクごとにブランチを切ります．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch develop</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> feature/0123/add-login</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bugfix/0123/fix-login-error</span></code></pre></div></div>
<ul>
<li>小規模Issueなら、このまま develop に直接PR(Step3へ)</li>
<li>中〜大規模Issueなら，Issue統合ブランチを作成し，サブタスクをまとめる (Step 2へ)</li>
</ul>
</section>
<section id="step-2.-中大規模issueの統合ブランチ任意" class="level3">
<h3 class="anchored" data-anchor-id="step-2.-中大規模issueの統合ブランチ任意">Step 2. 中〜大規模Issueの統合ブランチ（任意）</h3>
<p>複数のサブタスクをまとめてレビューしたい場合にのみ作成します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch develop</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> issue/0123</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge feature/0123/add-login</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge bugfix/0123/fix-login-error</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin issue/0123</span></code></pre></div></div>
<ul>
<li>統合PRを作成：<code>issue/0123</code> → <code>develop</code></li>
<li>チーム単位でまとめてレビュー／テストを実施</li>
</ul>
</section>
<section id="step-3.-developへの統合" class="level3">
<h3 class="anchored" data-anchor-id="step-3.-developへの統合">Step 3. developへの統合</h3>
<ul>
<li>Issue単位またはサブタスク単位で <code>develop</code> にPR作成</li>
<li>ローカルで実行する場合は <code>git merge --no-ff</code> で対応</li>
</ul>
</section>
<section id="step-4.-リリース系列ブランチ作成" class="level3">
<h3 class="anchored" data-anchor-id="step-4.-リリース系列ブランチ作成">Step 4. リリース系列ブランチ作成</h3>
<ul>
<li>開発が安定したタイミングでマイナー系列ブランチを作成</li>
<li>ブランチ作成は開発規模に応じて，<code>git switch -c</code> または GitHub Actionsで実施</li>
</ul>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch develop</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> release/1.1.x</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin release/1.1.x</span></code></pre></div></div>
</section>
<section id="step-5.-リリース準備ブランチ" class="level3">
<h3 class="anchored" data-anchor-id="step-5.-リリース準備ブランチ">Step 5. リリース準備ブランチ</h3>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch release/1.1.x</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> release/1.1.1/0130/create-release-note</span></code></pre></div></div>
<ul>
<li>作業内容例:
<ul>
<li>リリースノート更新</li>
<li>バージョン番号更新 (<code>__version__.py</code> など)</li>
<li>最終テスト、修正</li>
</ul></li>
<li>PR作成：<code>release/1.1.1/create-release-note</code> → <code>release/1.1.x</code></li>
</ul>
</section>
<section id="step-6.-リリース確定" class="level3">
<h3 class="anchored" data-anchor-id="step-6.-リリース確定">Step 6. リリース確定</h3>
<ul>
<li>GitHub Release ページに正式リリースノートを公開</li>
<li>git タグを付与し，<code>main</code> ブランチにマージ</li>
</ul>
</section>
<section id="step-7.-main-develop-への反映" class="level3">
<h3 class="anchored" data-anchor-id="step-7.-main-develop-への反映">Step 7. main / develop への反映</h3>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 本番用</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch main</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ff</span> release/1.1.x</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin main</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 開発用</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch develop</span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ff</span> release/1.1.x</span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin develop</span></code></pre></div></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>運用ポイント
</div>
</div>
<div class="callout-body-container callout-body">
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 18%">
<col style="width: 24%">
<col style="width: 24%">
<col style="width: 24%">
</colgroup>
<thead>
<tr class="header">
<th>対象</th>
<th>ブランチ命名規則</th>
<th>用途・対象範囲</th>
<th>運用方針</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>小規模 Issue</strong></td>
<td><code>feature/&lt;issue番号&gt;-&lt;タスク&gt;</code></td>
<td>小規模な新機能・修正 <br> <code>develop</code> に直接 PR</td>
<td>単一タスク・軽微修正に適用</td>
</tr>
<tr class="even">
<td><strong>中〜大規模 Issue</strong></td>
<td><code>issue/&lt;issue番号&gt;</code></td>
<td>複数サブタスクを統合</td>
<td>サブタスクを統合して <code>develop</code> に PR <br> <code>feature</code> / <code>bugfix</code> をまとめてレビュー</td>
</tr>
<tr class="odd">
<td><strong>リリース系列ブランチ</strong></td>
<td><code>release/&lt;major&gt;.&lt;minor&gt;.x</code></td>
<td>特定マイナー系列（例: 1.1.x）</td>
<td>安定版維持・軽微修正対応 <br> 長寿命ブランチ．保守・検証に利用</td>
</tr>
<tr class="even">
<td><strong>リリース準備ブランチ</strong></td>
<td><code>release/&lt;version&gt;/&lt;subtask&gt;</code></td>
<td>各パッチリリース（例: 1.1.1）</td>
<td>リリースノート作成・バージョン確定・PR作成など <br> 短命ブランチ．完了後削除</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</section>
</section>
<section id="ブランチ削除ポリシー" class="level2">
<h2 class="anchored" data-anchor-id="ブランチ削除ポリシー">4. ブランチ削除ポリシー</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 35%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th>ブランチ種別</th>
<th>削除タイミング</th>
<th>備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>feature</code> / <code>bugfix</code> / <code>issue</code></td>
<td>develop マージ後</td>
<td>即削除（必要ならタグで履歴追跡）</td>
</tr>
<tr class="even">
<td><code>release/&lt;version&gt;/&lt;subtask&gt;</code></td>
<td>main・develop 反映後</td>
<td>削除</td>
</tr>
<tr class="odd">
<td><code>release/&lt;series&gt;.x</code></td>
<td>次マイナー系列発足時</td>
<td>継続保守中は残す</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="注意事項" class="level2">
<h2 class="anchored" data-anchor-id="注意事項">5. 注意事項</h2>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Important</span>Rule 1: 小文字とハイフンを使用する
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>ブランチ名は常に小文字で記述</li>
<li>大文字を含めると，ファイルシステムが大文字・小文字を区別する環境がある</li>
<li>単語の区切りにはハイフン（<code>-</code>）を使用</li>
</ul>
</div>
</div>
<p><strong>📘 Example</strong></p>
<ul>
<li>✅ Good: <code>feature/user-login</code></li>
<li>❌ Avoid: <code>Feature_UserLogin</code>, <code>FeatUserLogin</code></li>
</ul>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Important</span>Rule 2: 明確なトークンからブランチ名を開始する
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>各ブランチ名は、目的を示すカテゴリトークンから始めます。</li>
<li>トークンの例：
<ul>
<li><code>feature</code>（新機能開発）</li>
<li><code>bugfix</code>（バグ修正）</li>
<li><code>docs</code>（ドキュメント更新）</li>
</ul></li>
<li>トークンと説明文はスラッシュ（<code>/</code>）で区切る</li>
</ul>
</div>
</div>
<p><strong>📘 Example</strong></p>
<ul>
<li>✅ Example: <code>bugfix/payment-timeout</code></li>
<li>❌ Avoid: <code>payment-timeout</code> (purpose unclear)</li>
</ul>
<p><strong>活用例</strong></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Listing branches by token</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--list</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"feature/*"</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pushing or mapping branches with tokens</span></span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git push origin <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refs/heads/feature/*'</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Deleting multiple branches by token</span></span>
<span id="cb8-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-D</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--list</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"feature/*"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div></div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Important</span>Rule 3: ブランチ名は簡潔・明確に
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>意図を説明できる範囲で，長すぎる名前は避ける</li>
<li>長すぎるブランチ名は，ログ表示の一行に収まらず，可視性が下がるため</li>
</ul>
</div>
</div>
<p><strong>📘 Example</strong></p>
<ul>
<li>✅ 良い例: <code>refactor/api-headers</code></li>
<li>❌ 悪い例: <code>refactor/update-the-way-we-handle-request-headers-in-api</code></li>
</ul>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Important</span>Rule 4: 衝突を生む可能性のあるブランチは作らない
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>git switch -c feature</code> のように意図が不明瞭な名前や既存ブランチと衝突する可能性のある名前は避ける</li>
<li>Gitは内部的に ブランチ名をパス（ディレクトリ構造）として管理しているため，<code>feature</code> が作成されていると <code>feature/login-v2</code> が名前衝突して作成できなくなってしまう
<ul>
<li>同じ階層にファイルとディレクトリを同時に作れないため</li>
</ul></li>
</ul>
</div>
</div>
<p><strong>📘 Example</strong></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bugfix/0123/fix-login-error</span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Switched</span> to a new branch <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bugfix/0123/fix-login-error'</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ls .git/refs/heads/bugfix/0123</span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fix-login-error</span></span></code></pre></div></div>
</section>
<section id="appendix-なぜbranchは名前衝突するのか" class="level2">
<h2 class="anchored" data-anchor-id="appendix-なぜbranchは名前衝突するのか">Appendix: なぜbranchは名前衝突するのか？</h2>
<p><span class="mini-section">Commit Object</span></p>
<p>Gitのコアの部分はシンプルなキー・バリュー型データストアです．Gitで追跡されているファイル(blob)はディレクトリの状態（ツリー）と合わせて圧縮された <code>.git/objects</code> にオブジェクトファイルとして保存されます． <code>git commit</code> を実行すると，commit時点でのその状態をスナップショットとして</p>
<ul>
<li>誰が(<code>user.name</code>, <code>user.email</code>)</li>
<li>いつ(現在のタイムスタンプ)</li>
<li>どんなメッセージを残して</li>
<li>どのcommitのあとに（=親コミット情報）</li>
<li>コミットが作成された時点のスナップショットのトップレベルのツリー</li>
</ul>
<p>を記録します．これが<span class="regmonkey-bold">コミットオブジェクト</span>です．このコミットオブジェクトをvalueとすると，それに対応するSHA-1ハッシュ値がキーとなります．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb10-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">.git/HEAD</span></span>
<span id="cb10-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    │</span></span>
<span id="cb10-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    └─ ref: refs/heads/main</span></span>
<span id="cb10-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">           │</span></span>
<span id="cb10-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">           └─ SHA-1 commit object (latest commit)</span></span>
<span id="cb10-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">                  │</span></span>
<span id="cb10-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">                  ├─ tree object</span></span>
<span id="cb10-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">                  │     ├─ blob (file1)</span></span>
<span id="cb10-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">                  │     └─ blob (file2)</span></span>
<span id="cb10-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">                  └─ parent commit(s)</span></span></code></pre></div></div>
<p><span class="mini-section">ブランチはポインター</span></p>
<p>各ブランチはブランチ自体が実体を持っているのではなく，どのcommit objectを参照しているか？で状態が管理されています．ここで登場するのが <code>refs/heads/&lt;branch-name&gt;</code> です． <code>main</code> ブランチが参照するCommit Objectは <code>.git/refs/heads/main</code> に記録されており</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat .git/refs/heads/main</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">35f61422e59fb8b34bf3a85f82a71669c1eeec30</span></span></code></pre></div></div>
<p><code>git add</code> &amp; <code>git commit</code> を実行すると，この値が新たなCommit Objectへの参照へと書き換わります．</p>
<p><span class="mini-section">なぜブランチは名前衝突するのか？</span></p>
<p>上記のようにブランチの情報は <code>.git/refs/heads/&lt;branch-name&gt;</code> で管理されています．<code>git switch -c develop</code> とすると</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> develop</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Switched</span> to a new branch <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'develop'</span></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat .git/refs/heads/develop</span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">35f61422e59fb8b34bf3a85f82a71669c1eeec30</span></span></code></pre></div></div>
<p>とファイルが生成されます．しかし，ブランチ名に <code>/</code> を含む場合だと</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bugfix/0001/test</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Switched</span> to a new branch <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bugfix/0001/test'</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> tree .git/refs/heads/</span>
<span id="cb13-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.git/refs/heads/</span></span>
<span id="cb13-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> bugfix</span>
<span id="cb13-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── 0001</span>
<span id="cb13-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       └── test</span>
<span id="cb13-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> develop</span>
<span id="cb13-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> main</span></code></pre></div></div>
<p>と <code>bugfix/0001/test</code> の<code>/</code>(スラッシュ)がディレクトリ区切りと解釈されてしまします．<code>develop</code>ブランチがある状態で <code>develop/test</code> を作成しようとすると， <code>.git/refs/heads/develop/</code> ディレクトリを作成してから，その下に <code>test</code> ファイルを作成しようとしますが，すでに<code>develop</code> ファイルが存在する = 同姓同名のディレクトリを同じ層では作成できないという状態が発生します</p>
<p>そのため，</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> develop/test</span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fatal:</span> cannot lock ref <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refs/heads/develop/test'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refs/heads/develop'</span> exists<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cannot</span> create <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refs/heads/develop/test'</span></span></code></pre></div></div>
<p>というエラーが発生します．</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://git-scm.com/book/ja/v2/Git%E3%81%AE%E5%86%85%E5%81%B4-Git%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88">10.2 Gitの内側 - Gitオブジェクト</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>git</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-30-branch-strategy/</guid>
  <pubDate>Thu, 30 Oct 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Zshインタラクティブモードでコメントアウトを使用する</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-10-zsh-inline-comment/</link>
  <description><![CDATA[ 






<section id="interactive_comments-option" class="level2">
<h2 class="anchored" data-anchor-id="interactive_comments-option"><code>INTERACTIVE_COMMENTS</code> option</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">INTERACTIVE_COMMENTS</span></p>
<p><a href="https://zsh.sourceforge.io/Doc/Release/Shell-Grammar.html#Comments">Zsh sourceforge &gt; 6.7 Comments</a>に以下のように定義されています</p>
<blockquote class="blockquote">
<p>In non-interactive shells, or in interactive shells with the INTERACTIVE_COMMENTS option set, a word beginning with the third character of the histchars parameter (‘#’ by default) causes that word and all the following characters up to a newline to be ignored.</p>
</blockquote>
</div>
<p><code>INTERACTIVE_COMMENTS</code> を有効にすると，<code>histchars</code> の3番目の文字（デフォルトは <code>#</code>）で始まる文字列について，その単語とその後の改行までの文字列がコメント扱いになり無視されるようになります．</p>
<p><span class="mini-section"><code>histchars</code></span></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> echo <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$histchars</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!^#</span></span></code></pre></div></div>
<p><code>#</code> が三番目の文字であることがわかります．</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>histchars</code> 特殊変数の設定は絶対変えないこと</li>
</ul>
</div>
</div>
<p><span class="mini-section">設定方法</span></p>
<p>current sessionでのみ有効化したい場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> setopt INTERACTIVE_COMMENTS</span></code></pre></div></div>
<p>を実行します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 設定していない場合</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> echo hello <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#world            </span></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hello</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#world</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## setopt INTERACTIVE_COMMENTS実行後</span></span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> echo hello <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#world          </span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hello</span></span></code></pre></div></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>インタラクティブシェル全般用の設定
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>インタラクティブシェル全般でコメントアウト機能Onにしたい場合は，<code>.zshrc</code> に記載します</li>
</ul>
</div>
</div>
<p><span class="mini-section">設定の解除</span></p>
<p>設定の解除は以下のコマンドを実行します</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> unsetopt INTERACTIVE_COMMENTS</span></code></pre></div></div>
</section>
<section id="コメントアウトのユースケース紹介" class="level2">
<h2 class="anchored" data-anchor-id="コメントアウトのユースケース紹介">コメントアウトのユースケース紹介</h2>
<p>zsh では <code>ctrl</code> + <code>R</code> でreverse history searchが実行できます．過去の実行コマンドを検索したい場合，コメントアウト機能と組み合わせると簡単に目的コマンドを探せるのでとても便利です．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>seach word</th>
<th>expected command</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>poetry-preview</code></td>
<td><code>poetry run quarto preview</code></td>
</tr>
<tr class="even">
<td><code>quarto vanilla preview</code></td>
<td><code>quarto preview</code></td>
</tr>
<tr class="odd">
<td><code>apt-update</code></td>
<td><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></td>
</tr>
</tbody>
</table>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>zsh</category>
  <category>shell</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-10-zsh-inline-comment/</guid>
  <pubDate>Fri, 10 Oct 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Google Cloud Project命名規則</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-06-google-project-name/</link>
  <description><![CDATA[ 






<section id="project識別子" class="level2">
<h2 class="anchored" data-anchor-id="project識別子">Project識別子</h2>
<p>Google Cloud Projectの識別子は以下の３つがあります</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 35%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 15%">
</colgroup>
<thead>
<tr class="header">
<th>識別子</th>
<th>説明</th>
<th>形式</th>
<th>事後編集可能性</th>
<th>重複可能性</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Project Name</td>
<td>人が読めるプロジェクト名</td>
<td>alphanumeric</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr class="even">
<td>Project ID</td>
<td>グローバルに一意のプロジェクト ID</td>
<td>alphanumeric</td>
<td>❌</td>
<td>❌</td>
</tr>
<tr class="odd">
<td>Project Number</td>
<td>自動生成される一意のプロジェクト識別子</td>
<td>digits</td>
<td>❌</td>
<td>❌</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">確認方法</span></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> gcloud projects list</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PROJECT_ID</span>               NAME                    PROJECT_NUMBER</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">digital-twin-2025</span>        Digital Twin            104567892123</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">regmonkey-blog</span>           regmonkey-blog          103998721045</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test-lab-ml</span>              ML Experiment Sandbox   105432109876</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">old-project</span>              Old Internal Tool       101234567890</span></code></pre></div></div>
<p><span class="mini-section">Project IDは公開されるのか？</span></p>
<ul>
<li><span class="regmonkey-bold">Answer</span>
<ul>
<li>プロジェクトや関連するリソースを参照すると、プロジェクト ID とリソース名が公開されます</li>
<li>例: URL(<code>https://console.cloud.google.com/bigquery?project=regmonkey-blogdata</code>)</li>
</ul></li>
</ul>
<p><span class="mini-section">Projectの削除</span></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> gcloud projects delete <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>project ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Your</span> project will be deleted.</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Do</span> you want to continue <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Y/n</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">?</span>  y</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Deleted</span> [https://cloudresourcemanager.googleapis.com/v1/projects/<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>project ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>].</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">You</span> can undo this operation for a limited period by running the command below.</span>
<span id="cb2-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> gcloud projects undelete <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>project ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">See</span> https://cloud.google.com/resource-manager/docs/creating-managing-projects for information on shutting down projects.</span></code></pre></div></div>
</section>
<section id="google-cloud-naming-convention" class="level2">
<h2 class="anchored" data-anchor-id="google-cloud-naming-convention">Google Cloud Naming Convention</h2>
<section id="編集ルールfaq" class="level3">
<h3 class="anchored" data-anchor-id="編集ルールfaq">❓ 編集ルールFAQ</h3>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">Project Name/ID/Numberは設定時に編集可能か？</span></p>
<ul>
<li><span class="regmonkey-bold">Answer</span>:
<ul>
<li>Project Name: 編集可能</li>
<li>Project ID: 編集可能</li>
<li>Project Number: 編集不可</li>
</ul></li>
</ul>
<p><span class="mini-section">Project Name作成要件</span></p>
<ul>
<li>4~30文字にする必要があり</li>
<li>大文字を含めた英数字，シングルクォート，ハイフン，スペース，<code>!</code> が使用可能</li>
</ul>
<p><span class="mini-section">Project ID作成要件</span></p>
<ul>
<li>6～30 文字にする必要があり</li>
<li>小文字、数字、ハイフンのみ</li>
<li>先頭は英文字でなければならない</li>
<li>末尾にハイフンは使用できない</li>
<li>使用中または以前に使用された ID は指定できない（削除済みのプロジェクトも含む）</li>
<li><code>google</code> や <code>ssl</code> などの制限付き文字列を含めることはできない</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-06-google-project-name/google-cloud-setup.png" class="img-fluid figure-img"></p>
<figcaption>Projectの新規作成例</figcaption>
</figure>
</div>
</section>
<section id="tips" class="level3">
<h3 class="anchored" data-anchor-id="tips">📘 Tips</h3>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>① Project Nameの可読性
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>誰でも理解できる短く分かりやすい名前</li>
<li>個人情報（PII）や機密情報を含めない</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>② Project IDとProject Nameのアライン
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Project IDとProject Nameは異なっていてもよいが，管理容易性の観点からは似たような名前であることが望ましい</li>
<li>Project IDとProject Name共通の命名規則持つのが良い</li>
</ul>
<p>参考例として</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{サービス識別子}-{環境識別子(staging / production)}-{企業識別子} </span></span></code></pre></div></div>
</div>
</div>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## simple</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> gcloud projects create scm-staging-regmonkey</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 別にProject Nameをつける場合</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> gcloud projects create scm-staging-regmonkey <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> unko</span></code></pre></div></div>
<p>と<code>gcloud</code>コマンドベースでProjectを作成するとき <code>create scm-staging-regmonkey</code> は Project IDとなります．<code>--name</code> オプションを利用することでProject Nameも別に指定することができますが， デフォルトでは Google Project ID = Project Nameという処理が実行されます．</p>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>③ 環境識別子の明示
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>staging/dev/production</code>を明示することで，誤操作リスクを減らす</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>④ インデックスを使う場合はゼロ埋めする
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>数値・インデックスを使う場合はゼロ埋め(<code>001</code>, <code>002</code>)するとソートしやすくなる</li>
</ul>
</div>
</div>
</section>
</section>
<section id="refereneces" class="level2">
<h2 class="anchored" data-anchor-id="refereneces">Refereneces</h2>
<ul>
<li><a href="https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=ja">Google Cloud Document &gt; プロジェクトの作成と管理</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>google cloud</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-06-google-project-name/</guid>
  <pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Research PapaerにおけるAbstractの書き方</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-02-how-to-write-an-abstract/</link>
  <description><![CDATA[ 






<section id="abtractとは" class="level2">
<h2 class="anchored" data-anchor-id="abtractとは">🎯 Abtractとは？</h2>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>Abstractとは分析レポートの簡潔なサマリー
</div>
</div>
<div class="callout-body-container callout-body">
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>Abstractとは読者に「<strong>研究の全体像を理解</strong>」させるための簡潔なサマリー文章のこと．必要条件として以下の要件を満たす必要があります</p>
<ul class="task-list">
<li><label><input type="checkbox">研究の目的・問い・方法・主要分析結果・意義を抑えていること</label></li>
<li><label><input type="checkbox">self-contained(自己完結的)な文章であること(=本文を読まなくても，研究の目的・方法・結果・意義がわかる)</label></li>
</ul>
</div>
</div>
<p><span class="mini-section">Descriptive Abstract vs Informative Abstract</span></p>
<p>状況に応じるが，基本的には分析レポートについてのAbstractは<strong>Informative Abstract</strong>であるべきとされます．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 27%">
<col style="width: 36%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">種類</th>
<th style="text-align: left;">特徴</th>
<th style="text-align: left;">構成内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><strong>Informative Abstract</strong></td>
<td style="text-align: left;">研究の <strong>目的・問い・方法・主要分析結果・意義</strong> をすべて含み，論文のエッセンスを要約する</td>
<td style="text-align: left;">背景・目的 / 問い / 方法 / 結果 / 結論（5要素すべて）</td>
</tr>
<tr class="even">
<td style="text-align: left;"><strong>Descriptive Abstract</strong></td>
<td style="text-align: left;">論文の主な<strong>構成やテーマの概要</strong>を述べるだけで，結果や結論を含まない</td>
<td style="text-align: left;">研究の範囲・主題・目的・手法の概要のみ（具体的な結果・結論は書かない）</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>論文の主な構成は「Introduction」で記載すれば良い</li>
<li>後述の「Selection」「Indexing」機能を享受したいのであるならば， <strong>目的・問い・方法・主要分析結果・意義</strong> をすべて含むのが良い</li>
</ul>
</section>
<section id="abtractの機能-selectionとindexing" class="level2">
<h2 class="anchored" data-anchor-id="abtractの機能-selectionとindexing">Abtractの機能: SelectionとIndexing</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">機能</th>
<th style="text-align: left;">内容</th>
<th style="text-align: left;">読者にとっての意味</th>
<th style="text-align: left;">執筆者にとってのポイント</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><strong>1. Selection Function</strong></td>
<td style="text-align: left;">研究の目的・方法・主要結果・意義を簡潔に伝える</td>
<td style="text-align: left;">- 論文を読む・引用する・購読するかを判断できる<br>- 自分の研究テーマとの関連性を素早く評価できる</td>
<td style="text-align: left;">- 読者に「読む理由」を与えるように設計する<br>- 特徴的な結果や新規性を明確に打ち出す</td>
</tr>
<tr class="even">
<td style="text-align: left;"><strong>2. Indexing Function</strong></td>
<td style="text-align: left;">論文データベース（例：arXiv）などで論文が適切に検索・分類されるようにする</td>
<td style="text-align: left;">- 検索キーワードや要約から論文を発見できる</td>
<td style="text-align: left;">- 適切な専門用語・キーワードをAbstract内に自然に含める<br>- 分野標準の表現・語彙を用いる</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="abtractの5つの構成要素" class="level2">
<h2 class="anchored" data-anchor-id="abtractの5つの構成要素">✅ Abtractの5つの構成要素</h2>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>① Reason for writing（研究を行う理由）
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>なぜこの研究が必要なのか（問題意識・背景・意義）を簡潔に述べる</li>
<li>読者が「なぜこのテーマが重要か」を理解できるようにする</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>② Problem / Research Question（研究課題・研究質問）
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>解決すべき問題（gap）</strong>，または検証すべき<strong>問い（question）</strong>を明示する</li>
<li>「何を明らかにしようとしているのか」を一文で言い切る</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>③ Method / Approach（方法・手法）
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>どのようなデータ・モデル・実験・分析を用いたかを簡潔に説明する</li>
<li>詳細よりも「方法の枠組み」を明確にする</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>④ Results / Findings（結果）
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>得られた成果・検証結果を簡潔にまとめる</li>
<li>できるだけ具体的な改善・効果・発見を述べる</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>⑤ Conclusion / Implication（結論・意義）
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>得られた結果がどのような意義・貢献をもつかを示す</li>
<li>結果を踏まえた上で，実証/理論分野における今後の展望などを1〜2文でまとめる</li>
</ul>
</div>
</div>


</section>

 ]]></description>
  <category>方法論</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-02-how-to-write-an-abstract/</guid>
  <pubDate>Thu, 02 Oct 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Research Proposalの書き方</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-01-how-to-write-a-research-proposal/</link>
  <description><![CDATA[ 






<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">✅ TL:DR</h2>
<ul class="task-list">
<li><label><input type="checkbox">分析アイデア概要を記述する</label></li>
<li><label><input type="checkbox">Research Questionを定義する</label></li>
<li><label><input type="checkbox">Research Questionの重要性 / 分析のAim（目的）を記述する</label>
<ul>
<li>可能であれば，今回の分析提案が既存の既存研究のどこに位置づくのかを示す</li>
<li>独自性がどこにあるかを過去の知識の積み重ねの中で示す</li>
</ul></li>
<li><label><input type="checkbox">期待される成果物を記述する</label></li>
<li><label><input type="checkbox">分析アプローチと手法を記述する</label></li>
<li><label><input type="checkbox">分析に必要なリソースについて記述する</label></li>
<li><label><input type="checkbox">分析の実現可能性について記述する</label></li>
<li><label><input type="checkbox">分析タイムラインを記述する</label></li>
</ul>
</section>
<section id="research-proposalとは" class="level2">
<h2 class="anchored" data-anchor-id="research-proposalとは">📘 Research Proposalとは？</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">Research Proposal</span></p>
<p>Research Proposalとは，分析における<span class="regmonkey-bold">What</span>と<span class="regmonkey-bold">Why</span>と<span class="regmonkey-bold">When</span>と<span class="regmonkey-bold">How</span>を明確に示す文書:</p>
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 90%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="regmonkey-bold">What</span></td>
<td>研究アイデアやResearch Question，期待される成果物を明確かつ具体的に提示する</td>
</tr>
<tr class="even">
<td><span class="regmonkey-bold">Why</span></td>
<td>提示したResearch Questionがなぜ重要なのか？どのような価値をもたらすのか？分析のAim（目的）はなにか？を記載する</td>
</tr>
<tr class="odd">
<td><span class="regmonkey-bold">When</span></td>
<td>分析スケジュールやタイムラインを明示する</td>
</tr>
<tr class="even">
<td><span class="regmonkey-bold">How</span></td>
<td>分析アプローチ，研究手法，必要なリソースや実現可能性について記載する</td>
</tr>
</tbody>
</table>
</div>
<p>Questionに対するAnswerはResearch Proposalには記載しません．記載できるということは，すでに答えが分かっている問いになってしまうので，解く価値がないResearch Questionになってしまいます．</p>
<p><span class="mini-section">分析の目的(Aim)の記述</span></p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">Aim</span></p>
<p>Aimとは，研究が最終的に目指す目的を明確に述べるもの．例として以下，</p>
<ul>
<li>既存の分析に存在するギャップに取り組むのか？</li>
<li>ある理論を深く検証するのか，</li>
<li>何かを証明／反証しようとしているのか</li>
<li>研究が成功した場合に得られる成果を記述する</li>
</ul>
</div>
<p>記述にあたって，焦点を絞った簡潔なステートメントであることが求められます．</p>
<p><span class="mini-section">分析アプローチとObjectives(目標)</span></p>
<p>Objectives（目標）とは，Aimを達成するための具体的なステップを示すものとここでは定義します．その上で，分析アプローチはObjectivesベースでまず言語化することを目指します．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>Objectivesベースでの分析アプローチ言語化観点例
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Aimと照らし合わせて，何をどのような順序で達成すべきなのかを整理する</li>
<li>各Objectiveに対して適切な手法や分析手順を対応させる</li>
<li>データ収集や前処理，モデル構築・評価などの具体的タスクを明示する</li>
<li>Objectiveの達成順序に従い，分析のフローやスケジュールを設計する</li>
<li>可能なリスクや実現可能性についても併せて検討する</li>
</ul>
</div>
</div>
<p><span class="mini-section">分析方法の記述の観点</span></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>分析手法(methodology)の検討項目
</div>
</div>
<div class="callout-body-container callout-body">
<ul class="task-list">
<li><label><input type="checkbox">なぜその特定の方法論を選んだのか？</label></li>
<li><label><input type="checkbox">なぜ他の方法が適さないのか？</label></li>
<li><label><input type="checkbox">予想される制約や限界はなにか？</label></li>
</ul>
<p>というポイントを抑えとくことが重要です．</p>
</div>
</div>
<p><span class="mini-section">分析リソースの記述</span></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>必要なリソースの内容例
</div>
</div>
<div class="callout-body-container callout-body">
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>カテゴリ</th>
<th>内容例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>1. データ関連</strong></td>
<td>- 利用可能なデータセット（一次データ or 二次データ）<br>- データの量・質（サンプルサイズ，欠損の有無，信頼性）<br>- データ取得方法（センサー，API，公開DB，実験・調査）</td>
</tr>
<tr class="even">
<td><strong>2. 計算環境</strong></td>
<td>- 計算リソース（PC，GPU，クラウド環境）<br>- 必要なストレージ容量<br>- ソフトウェア環境（Python, R, SQL, TensorFlow, PyTorchなど）</td>
</tr>
<tr class="odd">
<td><strong>3. 人的リソース</strong></td>
<td>- 分析を行う研究者・データサイエンティスト<br>- ドメイン知識を持つ専門家（例：HVACなら熱工学や設備の専門家）<br>- コラボレーターや分析メンター</td>
</tr>
<tr class="even">
<td><strong>4. 時間的リソース</strong></td>
<td>- データ収集にかかる時間<br>- モデル開発・実験・検証に必要な期間<br>- 論文や報告書執筆のための期間</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p><span class="mini-section">参考文献整理のすすめ</span></p>
<p>ビジネス提案書では参考文献を明示することは少ないかもしれないですが，社内内部的になぜこの提案に至ったのか？を上長へ説得するする際や引きスムーズな継ぎ時を実現するために整理することは有用です． クライアント向けに提示する際と合わせて，参考文献整理のメリットを以下で整理します</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 26%">
<col style="width: 37%">
<col style="width: 37%">
</colgroup>
<thead>
<tr class="header">
<th>ポイント</th>
<th>内容</th>
<th>具体例・補足</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1. <strong>研究・分析の背景を示す</strong></td>
<td>過去の分析や公開データ，既存の手法・モデルに基づき，自分の分析の位置付けを示す</td>
<td>「なぜこの問題を解く必要があるか」「既存研究では何が不十分か」を裏付ける</td>
</tr>
<tr class="even">
<td>2. <strong>信頼性の担保</strong></td>
<td>データや手法の選定理由を文献に基づき説明することで，提案内容の説得力を増す</td>
<td>評価者に「検討や調査に基づいている」と安心感を与える</td>
</tr>
<tr class="odd">
<td>3. <strong>方法論の妥当性を示す</strong></td>
<td>過去に用いられた分析手法やモデルの参考文献を挙げ，方法論の正当性を示す</td>
<td>比較研究や改善の視点で，手法選定の根拠を示す</td>
</tr>
<tr class="even">
<td>4. <strong>独自性・新規性の強調</strong></td>
<td>既存分析との差分やギャップを示すことで，自分の分析の新規性・意義を明確にする</td>
<td>研究の独自性や学問的貢献を評価者に伝える</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://www.sydney.edu.au/study/help/advice/how-to-write-a-research-proposal.html">How to write a research proposal &gt; A guide to preparing a strong research proposal.</a></li>
</ul>


</section>

 ]]></description>
  <category>方法論</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-10-01-how-to-write-a-research-proposal/</guid>
  <pubDate>Wed, 01 Oct 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>ネットワークトラブルの切り分け</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-26-network-connection-trouble/</link>
  <description><![CDATA[ 






<section id="トラブル" class="level2">
<h2 class="anchored" data-anchor-id="トラブル">⚠️ トラブル</h2>
<ul>
<li>Ubuntu 24.04 LTSにて，S3 storage <code>s3.amazonaws.com</code> にある日突然接続できなくなった</li>
</ul>
</section>
<section id="トラブルシューティングフローチャート" class="level2">
<h2 class="anchored" data-anchor-id="トラブルシューティングフローチャート">🔍 トラブルシューティングフローチャート</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">---
config:
  layout: elk
---
flowchart LR
    A["ネットワークに問題発生"] --&gt; B["ping ホスト名を実行"]
    B --&gt; C{"応答あり？"}
    C -- YES --&gt; D["名前解決 &amp;amp; 通信OK"]
    C -- NO --&gt; E["ping IPアドレスを実行"]
    E --&gt; F{"応答あり？"}
    F -- YES --&gt; G["名前解決の問題&lt;br&gt;DNS設定確認"]
    F -- NO --&gt; H["ネットワーク未接続&lt;br&gt;ケーブル/ルータ確認"]

    %% フォントサイズをノードごとに指定
    style A font-size:1.2em
    style B font-size:1.2em
    style C font-size:1.2em
    style D font-size:1.2em
    style E font-size:1.2em
    style F font-size:1.2em
    style G font-size:1.2em
    style H font-size:1.1em
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>今回のトラブルでは，掃除のタイミングでケーブルを抜いており，物理的にケーブルが刺さっていませんでした．．．</p>
<section id="pingコマンド" class="level3">
<h3 class="anchored" data-anchor-id="pingコマンド">pingコマンド</h3>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">pingコマンド</span></p>
<ul>
<li>pingコマンドは指定したホストとの間でネットワークが疎通しているかどうかを調べるコマンド</li>
<li><code>ping ホスト名</code>を実行すると，サイズの小さなパケットを相手に送信して，その応答を調べる</li>
<li><code>ping6</code> は <code>/usr/bin/ping6 -&gt; ping*</code> とシンボリックリンクになっている</li>
</ul>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ping</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">option</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> destination</span></code></pre></div></div>
</div>
<p><code>ping</code>コマンドは相手のコンピューターに対してICMPメッセージ(ネットワーク層のプロトコル)を送信し，その応答で通信状況を判断します．以下の例ではグローバルIPアドレスに対してですが， プライベートIPアドレスに対して送信することも可能です．</p>
<div id="fig-plot-ping" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-ping-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant PC as ユーザー端末
    participant Router as ルーター
    participant Target as 宛先サーバー (例: google.com)

    %% ICMP Echo Request
    PC -&gt;&gt; Router: ICMP Echo Request
    Router -&gt;&gt; Target: ICMP Echo Request

    %% ICMP Echo Reply
    Target --&gt;&gt; Router: ICMP Echo Reply
    Router --&gt;&gt; PC: ICMP Echo Reply

    %% Note
    Note over PC,Target: PCは応答を受け取ってRTT（Round-Trip Time，往復時間）を計測
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-plot-ping-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <strong>ping出力</strong> <br></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> ping 8.8.8.8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> 3</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">PING</span> 8.8.8.8 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(8.8.8.8)</span> 56<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(84)</span> bytes of data.</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">64</span> bytes from 8.8.8.8: icmp_seq=1 ttl=117 time=7.46 ms</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">64</span> bytes from 8.8.8.8: icmp_seq=2 ttl=117 time=17.9 ms</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">64</span> bytes from 8.8.8.8: icmp_seq=3 ttl=117 time=14.1 ms</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">---</span> 8.8.8.8 ping statistics <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3</span> packets transmitted, 3 received, 0% packet loss, time 2003ms</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rtt</span> min/avg/max/mdev <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> 7.463/13.149/17.850/4.297 ms</span></code></pre></div></div>
<ul>
<li><code>8.8.8.8</code>: Google Public DNS</li>
<li><code>ttl</code>: time to live, パケットがネットワーク上を通過できる最大ホップ数を指定する値</li>
</ul>
</div>
<hr>
<p><span class="mini-section">Options</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 70%">
</colgroup>
<thead>
<tr class="header">
<th>オプション</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>-4</code></td>
<td>IPv4を使用する（pingコマンドのデフォルト）</td>
</tr>
<tr class="even">
<td><code>-6</code></td>
<td>IPv6を使用する（ping6コマンドのデフォルト）</td>
</tr>
<tr class="odd">
<td><code>-c 回数</code></td>
<td>パケットを送る回数</td>
</tr>
<tr class="even">
<td><code>-i 秒数</code></td>
<td>個々の送信の後に待つ秒数（デフォルトは1秒）</td>
</tr>
<tr class="odd">
<td><code>-w 秒数</code></td>
<td>状況を問わず、pingコマンドの実行を指定した秒数で終了</td>
</tr>
<tr class="even">
<td><code>-n</code></td>
<td>数値出力のみを行う（IPアドレスからホスト名を検索しない）</td>
</tr>
<tr class="odd">
<td><code>-q</code></td>
<td>開始と終了時の要約のみで他は表示しない（quiet）</td>
</tr>
<tr class="even">
<td><code>-v</code></td>
<td>詳細な出力を行う（verbose）</td>
</tr>
<tr class="odd">
<td><code>-p パターン</code></td>
<td>送出するパケットを埋める値をパターンで指定（例: <code>-p ff</code> で全て 1 で埋めたパケット）</td>
</tr>
<tr class="even">
<td><code>-s サイズ</code></td>
<td>送出するパケットのサイズを指定（デフォルト 56バイト＋ICMPヘッダ8バイト＝合計64バイト）</td>
</tr>
<tr class="odd">
<td><code>-R</code></td>
<td>経路を記録する</td>
</tr>
<tr class="even">
<td><code>-r</code></td>
<td>通常のルーティングを無視して接続する</td>
</tr>
<tr class="odd">
<td><code>-I インタフェース</code></td>
<td>指定したインタフェースからマルチキャストパケットを送る</td>
</tr>
<tr class="even">
<td><code>-L</code></td>
<td>マルチキャストパケットのループバックを抑制する</td>
</tr>
<tr class="odd">
<td><code>-t TTL値</code></td>
<td>Time To Liveを設定する</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">pingコマンドを用いた問題の切り分け</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 15%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>テスト内容</th>
<th>コマンド例</th>
<th>結果</th>
<th>考えられる原因 / 対策</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>IPv4 外部接続</td>
<td><code>ping 8.8.8.8</code></td>
<td>✅ 応答あり</td>
<td>IPv4経路は正常</td>
</tr>
<tr class="even">
<td>IPv4 外部接続</td>
<td><code>ping 8.8.8.8</code></td>
<td>❌ 応答なし</td>
<td>IPv4経路問題（ルーティング・ファイアウォール等）</td>
</tr>
<tr class="odd">
<td>IPv6 外部接続</td>
<td><code>ping -6 2001:4860:4860::8888</code></td>
<td>✅ 応答あり</td>
<td>IPv6経路は正常</td>
</tr>
<tr class="even">
<td>IPv6 外部接続</td>
<td><code>ping -6 2001:4860:4860::8888</code></td>
<td>❌ 応答なし</td>
<td>IPv6経路問題（ルーティング・ICMPv6制限・ISP未対応）</td>
</tr>
<tr class="odd">
<td>特定インターフェース経由</td>
<td><code>ping -I eno1 8.8.8.8</code></td>
<td>✅ / ❌</td>
<td>インターフェース選択による疎通確認、VPN/物理NIC切替の検証</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="ネットワークインターフェース一覧の確認" class="level3">
<h3 class="anchored" data-anchor-id="ネットワークインターフェース一覧の確認">ネットワークインターフェース一覧の確認</h3>
<p>インターフェース一覧のみを出力する場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ip</span> link show</span></code></pre></div></div>
<p>を実行します．実行結果例として</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 ...</span></span>
<span id="cb4-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">2: eno1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 ...</span></span>
<span id="cb4-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 ...</span></span>
<span id="cb4-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">4: tailscale0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 ...</span></span></code></pre></div></div>
<p>または</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ls /sys/class/net/</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker0@</span>  eno1@  lo@  tailscale0@</span></code></pre></div></div>
<p>でも確認することができます．</p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <strong>ネットワークインターフェース例</strong> <br></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 22%">
<col style="width: 20%">
<col style="width: 57%">
</colgroup>
<thead>
<tr class="header">
<th>インターフェース名</th>
<th>種類</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>lo</code></td>
<td>ループバック</td>
<td>ローカル内部通信専用．自分自身との通信に使用される（<code>127.0.0.1 / ::1</code>）．</td>
</tr>
<tr class="even">
<td><code>eno1</code></td>
<td>有線LAN（Ethernet）</td>
<td>物理 NIC．Onboard NIC．マザーボード直付けのポート 1</td>
</tr>
<tr class="odd">
<td><code>enp6s0</code></td>
<td>有線LAN（Ethernet）</td>
<td>物理 NIC．複数NIC構成の場合の追加ポート．</td>
</tr>
<tr class="even">
<td><code>wlp13s0</code></td>
<td>無線LAN（Wi-Fi）</td>
<td>Wi-Fi接続用の物理 NIC．無線ネットワークに接続される．</td>
</tr>
<tr class="odd">
<td><code>docker0</code></td>
<td>仮想ブリッジ</td>
<td>Docker が作成する仮想ネットワーク．コンテナ間通信やホスト通信に使用．</td>
</tr>
<tr class="even">
<td><code>br-xxxxxxxxxxx</code></td>
<td>仮想ブリッジ</td>
<td>Docker などが作成するカスタムブリッジ．コンテナ専用ネットワーク用．</td>
</tr>
<tr class="odd">
<td><code>tailscale0</code></td>
<td>VPN仮想NIC</td>
<td>Tailscale VPN用の仮想インターフェース．VPN経由の通信に使用．</td>
</tr>
</tbody>
</table>
</div>
<p>基本的には</p>
<ul>
<li><code>wl</code>から始まる: ワイヤレス</li>
<li><code>en</code>から始まる: 有線LAN</li>
</ul>
<p>という命名規則になっています．また<code>p6</code>や<code>s0</code>といった数値はPCIバス番号とスロット番号に対応しています</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>部分</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>wl</code></td>
<td>ワイヤレス（Wireless LAN）デバイス</td>
</tr>
<tr class="even">
<td><code>p13</code></td>
<td>PCI バス番号（このデバイスが接続されているバスの位置）</td>
</tr>
<tr class="odd">
<td><code>s0</code></td>
<td>スロット番号（同じバス内でのスロット位置）</td>
</tr>
</tbody>
</table>
</div>
</div>
<hr>
</section>
</section>
<section id="appendix-icmp" class="level2">
<h2 class="anchored" data-anchor-id="appendix-icmp">Appendix: ICMP</h2>
<p>IPはUDP(トランスポート層プロトコル)と同じコネクションレス型の通信を行うため，データが相手に届いたかどうかについては感知しません． IPデータグラムの通信状況を確認するためのネットワーク層プロトコルとして，ICMP(Internet Control Message Protocol)という仕組みが考案されました．</p>
<p>主に<code>ping</code>コマンドや<code>traceroute</code>コマンドで使用されます．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>ICMPはあくまでIPの補助
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>ICMPメッセージは単独で送られることはなく，IPのヘッダが付与されて送られる</li>
<li>あくまでも「IPを助けるプロトコル」</li>
<li>IPデータグラムは，IPヘッダがついたデータ（トランスポート層でのセグメントに対応）のこと．</li>
</ul>
</div>
</div>
<p><span class="mini-section">ICMPヘッダ</span></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">block-beta
  columns 3
  A["&lt;strong&gt;タイプ(8bit)&lt;/strong&gt;&lt;br&gt;メッセージの種類を表す"]:1
  B["&lt;strong&gt;コード(8bit)&lt;/strong&gt;&lt;br&gt;エラー原因などを示す"]:1
  C["&lt;strong&gt;チェックサム(16 bit)&lt;/strong&gt;&lt;br&gt;データが無事かどうかを確認"]:2
  
  style A fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style B fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style C fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p><span class="mini-section">主なタイプ一覧</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 25%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>ICMP Type</th>
<th>NICMPv6 Type</th>
<th>種類</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>129</td>
<td>Echo Reply</td>
<td>メッセージが無事に届きました</td>
</tr>
<tr class="even">
<td>3</td>
<td>1</td>
<td>Destination Unreachable</td>
<td>宛先に到達できませんでした</td>
</tr>
<tr class="odd">
<td>5</td>
<td>137</td>
<td>Redirect</td>
<td>ルーティング経路の変更通知</td>
</tr>
<tr class="even">
<td>8</td>
<td>128</td>
<td>Echo Request</td>
<td>このメッセージが届いたら，返事をください</td>
</tr>
<tr class="odd">
<td>11</td>
<td>3</td>
<td>Time Exceeded</td>
<td>TTLやフラグメント再構築時間超過</td>
</tr>
</tbody>
</table>
</div>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant PC as 自端末 (Type 8)
    participant Router as ルーター
    participant Target as 宛先ホスト (Type 0)

    %% ICMP Echo Request
    PC -&gt;&gt; Router: ICMP Echo Request (Type 8)
    Router -&gt;&gt; Target: ICMP Echo Request (Type 8)

    %% ICMP Echo Reply
    Target --&gt;&gt; Router: ICMP Echo Reply (Type 0)
    Router --&gt;&gt; PC: ICMP Echo Reply (Type 0)

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="appendix-pppoe方式" class="level2">
<h2 class="anchored" data-anchor-id="appendix-pppoe方式">Appendix: PPPoE方式</h2>
<p>IPv4ではPPPoE接続方式が使用されています．一方，IPv6ではPPPoE接続方式に加えて，IPoE方式が利用できます．ここでは従来のPPPoE方式を解説します．</p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">Point-to-Point Protocol(PPP)</span></p>
<ul>
<li>2点間で1対1の通信を行ためのデータリンク層プロトコル</li>
<li>データをPPPフレームにカプセル化して伝送</li>
<li>1対1の通信なのでMACアドレスは基本的には使わない</li>
</ul>
</div>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant A as Computer A
    participant B as Computer B

    A -&gt;&gt; B: 通信をしたいときは，&lt;br&gt;通信要求を相手に送信
    B -&gt;&gt; A: 接続する資格を持ったユーザーか確認&lt;br&gt;(ユーザー認証)
    B -&gt;&gt; A: 通信条件について，相談
    B -&gt;&gt; A: 通信を開始

    %% 接続
    Note over A,B: 接続が確立した状態
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2
</figcaption>
</figure>
</div>
<p><span class="mini-section">PPPフレーム</span></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">block-beta
  columns 2
  A["&lt;strong&gt;開始符号(8bit)&lt;/strong&gt;&lt;br&gt;01111110が入る"]:1
  B["&lt;strong&gt;アドレス(8bit)&lt;/strong&gt;&lt;br&gt;固定値(11111111)が入る"]:1
  C["&lt;strong&gt;制御部(8 bit)&lt;/strong&gt;&lt;br&gt;伝送を制御するための情報"]:1
  D["&lt;strong&gt;プロトコル部(8 bit)&lt;/strong&gt;&lt;br&gt;上位層のプロトコルを指定"]:1
  E["&lt;strong&gt;データ&lt;/strong&gt;&lt;br&gt;カプセル化されたIPヘッダ/TCPヘッダ/アプリケーションヘッダ/データが入る"]:2
  F["&lt;strong&gt;FCS(Frane Check Sequence) (32bit)&lt;/strong&gt;&lt;br&gt;フレームが壊れていないかどうかを調べる値"]:2
  G["&lt;strong&gt;終了符号(8bit)&lt;/strong&gt;&lt;br&gt;01111110が入る"]:2

  style A fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style B fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style C fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style D fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style E fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style F fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
  style G fill:#fff,stroke:#000,stroke-width:2px,font-size:1.5em
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3</strong></span> <span class="def-title">PPPoE</span></p>
<ul>
<li>イーサネットフレーム上にPPPフレームをカプセル化するための通信プロトコル</li>
<li>PPPoEを用いることで，イーサネット上にある2台のコンピューター間で認証を行える</li>
<li>光回線を使ってアクセスサーバー経由でインターネットに接続するときに使う</li>
</ul>
</div>
<p>PPPoEは，PPPの昨日をEthernet上で利用するためのプロトコルです．PPPoEはLAN上においてもユーザ認証が可能で，IPアドレスの割当も可能という特徴があります．</p>
<p><span class="mini-section">PPPoEフレーム</span></p>
<p>PPPoEフレームは，Ethernetフレームに包まれて運ばれていきます．PPPoEフレームの構成は以下</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">block-beta
  columns 4
  A["version(4 bit)&lt;br&gt;PPPoEのバージョン情報"]:1
  B["タイプ(4 bit)&lt;br&gt;PPPoEのタイプ情報"]:1
  C["コードビット(8 bit)&lt;br&gt;PPPoEのパケットの種類"]:2
  D["Session ID(16 bit)&lt;br&gt;PPPoEを使った通信を行うための固有値"]:4
  E["データ長(16 bit)&lt;br&gt;最大64KB"]:4
  F["データ&lt;br&gt;PPPヘッダが入る"]:4
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p><span class="mini-section">IP通信確立までのステップ</span></p>
<p>PPPoE接続を行ってIP通信ができるようになるまでには，DiscoveryステージとPPPセッションステージの2つのステップを踏む必要があります．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 27%">
<col style="width: 72%">
</colgroup>
<thead>
<tr class="header">
<th>ステージ</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Discoveryステージ</strong></td>
<td>最初にPPPoEセッションをはるまで(=PPPoEセッションIDの割り当てを行うまで)</td>
</tr>
<tr class="even">
<td><strong>PPPセッションステージ</strong></td>
<td>PPP通信による認証実施ステージ(IPアドレス割当まで)</td>
</tr>
</tbody>
</table>
</div>
<p>PPPoE接続が上手くいかない場合，一般的には「PPPセッションステージ」での認証トラブルが多いです．</p>
<div id="fig-plot-ppp" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-ppp-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant C as PPPoEクライアント (PC)
    participant S as PPPoEサーバー (ISP AC)
    participant R as RADIUSサーバー
    participant G as 接続先 (google.com)

    %% --- Discovery Stage ---
    C -&gt;&gt; S: PADI (接続要求ブロードキャスト)
    S -&gt;&gt; C: PADO (サービス提供応答)
    C -&gt;&gt; S: PADR (AC選択 → 接続要求)
    S -&gt;&gt; C: PADS (セッション確立・Session ID付与)

    Note over C,S: PPPoE セッション確立

    %% --- PPP Session Stage (LCP + 認証) ---
    C -&gt;&gt; S: LCPネゴシエーション
    S -&gt;&gt; C: 認証要求 (PAP/CHAP)
    C -&gt;&gt; S: 認証応答

    %% --- 認証処理 (RADIUS連携) ---
    S -&gt;&gt; R: Access-Request (ユーザー名/パスワード)
    R -&gt;&gt; S: Access-Accept (認証成功, 属性情報[IP割当等])

    S -&gt;&gt; C: 認証成功通知 + IPアドレス割当

    Note over C,S: PPP セッション確立 (グローバルIP付与)

    %% --- IP通信 Stage ---
    C -&gt;&gt; G: HTTPリクエスト (例: https://google.com)
    G -&gt;&gt; C: HTTPレスポンス (Googleページ返却)

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-plot-ppp-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3
</figcaption>
</figure>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://atmarkit.itmedia.co.jp/ait/articles/1709/14/news018.html">【 ping 】コマンド／【 ping6 】コマンド――通信相手にパケットを送って応答を調べる</a></li>
<li><a href="https://superuser.com/questions/1053003/what-is-the-difference-between-eth1-and-eno1">StackExchange &gt; what is the difference between eth1 and eno1?</a></li>
<li><a href="https://ip6.me/">ip6.me</a></li>
</ul>


</section>

 ]]></description>
  <category>network</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-26-network-connection-trouble/</guid>
  <pubDate>Fri, 26 Sep 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>QuartoコンテンツをTailnetで公開する</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-23-quarto-preview-with-tailscale/</link>
  <description><![CDATA[ 






<div class="callout callout-style-default callout-note no-icon callout-titled" style="font-size:1.1em">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>📘 解説内容
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>quarto preview</code> をバックグラウンドプロセスとして実行する方法</li>
<li><code>quarto preview</code> の内容をtailnet内で公開する方法</li>
</ul>
</div>
</div>
<section id="quarto-preview-as-background-process" class="level2">
<h2 class="anchored" data-anchor-id="quarto-preview-as-background-process">Quarto Preview as background process</h2>
<p>バックグラウンドで<code>quarto preview</code>を実行する場合は以下のコマンドとなります</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nohup</span> quarto preview <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/.var/quarto.log  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span></span></code></pre></div></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>要素</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>nohup</code></td>
<td>ターミナルを閉じてもプロセスを終了させない</td>
</tr>
<tr class="even">
<td><code>quarto preview</code></td>
<td>Quarto プロジェクトをプレビューするコマンド</td>
</tr>
<tr class="odd">
<td><code>&gt;</code></td>
<td>標準出力 (stdout) のリダイレクト</td>
</tr>
<tr class="even">
<td><code>~/.var/quarto.log</code></td>
<td>ログ出力先ファイル</td>
</tr>
<tr class="odd">
<td><code>2&gt;&amp;1</code></td>
<td>標準エラー (stderr) を標準出力に結合(=stdout と stderr を同じファイルにまとめる)</td>
</tr>
<tr class="even">
<td><code>&amp;</code></td>
<td>コマンドをバックグラウンドで実行</td>
</tr>
</tbody>
</table>
</div>
<section id="バックグラウンドプロセスをkillする" class="level3">
<h3 class="anchored" data-anchor-id="バックグラウンドプロセスをkillする">バックグラウンドプロセスをkillする</h3>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<p><span class="mini-section">① 起動シェルと同じシェルでkillする場合</span></p>
<p>バックグラウンドジョブを起動したシェルと同じシェルでジョブをkillしたい場合は <code>jobs</code> コマンドで該当ジョブを検索することができます</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> jobs</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[1]</span>  + running    nohup quarto preview <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/.var/quarto.log <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div></div>
<p>このプロセスをkillする場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> kill %1</span></code></pre></div></div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">② 別のシェルでkillする場合</span></p>
<p><code>ps aux</code>で該当プロセスを検索して，<code>kill</code>という手順になりjます．実行すると</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ps aux <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto"</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kirby+</span> 1710278  0.0  0.0   9940  3608 pts/8    SN   19:57   0:00 bash /usr/local/bin/quarto preview</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">kirby+</span> 1710301 14.3  0.5 46064208 164504 pts/8 SNl  19:57   0:02 /opt/quarto/bin/tools/x86_64/deno run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--unstable-ffi</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--unstable-kv</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-config</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-lock</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cached-only</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--allow-all</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-check</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--v8-flags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>--enable-experimental-regexp-engine,--max-old-space-size=8192,--max-heap-size=8192 /opt/quarto/bin/quarto.js preview</span></code></pre></div></div>
<p>となりますが，このとき <code>kill</code> するのは後者となります．つまり，</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> kill 1710301</span></code></pre></div></div>
<p><code>nohup quarto preview &gt; ~/.var/quarto.log  2&gt;&amp;1 &amp;</code> を実施すると</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[1]</span> 1710278</span></code></pre></div></div>
<p>のようにジョブ番号に対応したPIDが表示されますが，この番号は <code>quarto preview</code> ラッパーのPIDであって，実際に止めるべきは <code>/opt/quarto/bin/tools/x86_64/deno</code> の方となります．</p>
</section>
</section>
<section id="tailscale-serve-を使ったローカルサービス公開" class="level2">
<h2 class="anchored" data-anchor-id="tailscale-serve-を使ったローカルサービス公開">Tailscale Serve を使ったローカルサービス公開</h2>
<p><code>tailscale serve</code> を用いることでlocalhostで動いているサービスを自分の Tailnet内（Tailscale VPN 内）のみでアクセスできるように公開できます． Tailscale アカウントで認証した端末だけアクセス可能なので，セキュアなサービス公開となります．</p>
<p>TCPフォワーディングを用いて，外部からのアクセスをlocalの8998 Portへ転送しています．クライアントとサーバーが直接 TCP で通信する形になり，セキュリティや暗号化はサービス側に任すことになります．</p>
<p><strong> ▶&nbsp; 実行例</strong></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ポート4200のサービスを公開</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo tailscale serve 4200</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Available</span> within your tailnet:</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://xxxxxx.tailxxxxx.ts.net/</span></span>
<span id="cb7-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> proxy http://127.0.0.1:4200</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Press</span> Ctrl+C to exit.</span></code></pre></div></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 35%">
<col style="width: 65%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>tailscale serve 4200</code></td>
<td>ローカルマシンの <code>127.0.0.1:4200</code> で動いているサービスを Tailscale 経由で公開するコマンド．</td>
</tr>
<tr class="even">
<td><code>https://xxxxxx.tailxxxxx.ts.net/</code></td>
<td>Tailscale が自動で割り当てた対象端末専用のサブドメイン．Tailnet 内の認証済みデバイスからのみアクセス可能．</td>
</tr>
</tbody>
</table>
</div>
<section id="serving-in-background" class="level3">
<h3 class="anchored" data-anchor-id="serving-in-background">Serving in Background</h3>
<p>backgroundプロセスでserviceをtailnet内で公開したい場合は <code>--bg</code> フラグを付与して<code>tailscale serve</code>を実行します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 現在の公開状況を確認</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tailscale serve status</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ポート4200のサービスを公開</span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tailscale serve <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bg</span> 4200</span></code></pre></div></div>
<p>公開を停止したい場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tailscale serve off</span></code></pre></div></div>
</section>
<section id="https-リバースプロキシ経由公開する" class="level3">
<h3 class="anchored" data-anchor-id="https-リバースプロキシ経由公開する">HTTPS リバースプロキシ経由公開する</h3>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tailscale serve <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--https</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>4200 4200</span></code></pre></div></div>
<p>とすると，外部から <code>https://&lt;マシン名&gt;.&lt;tailnet&gt;.ts.net:4200</code> にアクセスするとローカルの <code>http://127.0.0.1:4200</code> に転送されます．</p>
<ul>
<li>HTTPS (TLS) が自動で有効</li>
<li>複数のサービスをポートを分けて同時に公開することができる</li>
</ul>
<p>というメリットがあります．Killしたい場合は</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tailscale serve <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--https</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>4200 off</span></code></pre></div></div>
<p>で完了です．</p>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://www.reddit.com/r/Tailscale/comments/14gccua/funnel_serve_multiple_ports/">Funnel serve multiple ports?</a></li>
</ul>


</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-23-quarto-preview-with-tailscale/</guid>
  <pubDate>Tue, 23 Sep 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Sony WH-1000XM4をUbuntu 24.04 LTSで使う</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/</link>
  <description><![CDATA[ 






<section id="goals" class="level2">
<h2 class="anchored" data-anchor-id="goals">🎯 Goals</h2>
<ul>
<li>Ubuntu 24.04 LTSに対するLDAC利用可能な状態でのWH-1000XM4接続設定</li>
<li>EasyEffectsを用いたWH-1000XM4用Equalizerの設定</li>
</ul>
<p><span class="mini-section">Package Requirements</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>カテゴリ</th>
<th>パッケージ</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Bluetooth LDAC</strong></td>
<td><code>libldacbt-abr-dev</code></td>
<td>LDAC の ABR (Adaptive Bitrate) ライブラリ（開発用）</td>
</tr>
<tr class="even">
<td></td>
<td><code>libldacbt-enc-dev</code></td>
<td>LDAC エンコーダライブラリ（開発用）</td>
</tr>
<tr class="odd">
<td><strong>Bluetooth 管理</strong></td>
<td><code>blueman</code></td>
<td>Bluetooth デバイス管理用 GUI</td>
</tr>
<tr class="even">
<td><strong>オーディオ基盤</strong></td>
<td><code>pipewire</code></td>
<td>オーディオサーバ（PulseAudio 互換）</td>
</tr>
<tr class="odd">
<td></td>
<td><code>pipewire-pulse</code></td>
<td>PulseAudio アプリ互換サーバ</td>
</tr>
<tr class="even">
<td></td>
<td><code>wireplumber</code></td>
<td>PipeWire のsession / policy manager</td>
</tr>
<tr class="odd">
<td><strong>音質補正</strong></td>
<td><code>easyeffects</code></td>
<td>音響補正ツール(Equalizerなど)</td>
</tr>
</tbody>
</table>
<p>今回はPipewire環境での接続設定となります．</p>
</section>
<section id="実行環境" class="level2">
<h2 class="anchored" data-anchor-id="実行環境">💻 実行環境</h2>
<section id="ubuntu" class="level3">
<h3 class="anchored" data-anchor-id="ubuntu">Ubuntu</h3>
<p><span class="mini-section">Distribution</span></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> lsb_release <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">No</span> LSB modules are available.</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Distributor</span> ID: Ubuntu</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Description:</span>    Ubuntu 24.04.3 LTS</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Release:</span>    24.04</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Codename:</span>   noble</span></code></pre></div></div>
<p><span class="mini-section">Linux kernel</span></p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> uname <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-srpo</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Linux</span> 6.14.0-29-generic x86_64 GNU/Linux</span></code></pre></div></div>
</section>
<section id="sony-wh-1000xm4のスペック" class="level3">
<h3 class="anchored" data-anchor-id="sony-wh-1000xm4のスペック">🎧 Sony WH-1000XM4のスペック</h3>
<p><span class="mini-section">ワイヤレス機能</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 69%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Bluetoothバージョン</td>
<td>Ver.5.0 / Class 1</td>
</tr>
<tr class="even">
<td>連続再生時間</td>
<td>最大30時間（NC ON時） / 最大38時間（NC OFF時）</td>
</tr>
<tr class="odd">
<td>充電時間</td>
<td>約3時間</td>
</tr>
<tr class="even">
<td>対応コーデック</td>
<td>SBC / AAC / LDAC</td>
</tr>
<tr class="odd">
<td>NFC</td>
<td>○</td>
</tr>
<tr class="even">
<td>TWS Plus対応</td>
<td>☓</td>
</tr>
<tr class="odd">
<td>マルチペアリング対応</td>
<td>○</td>
</tr>
<tr class="even">
<td>マルチポイント対応</td>
<td>○</td>
</tr>
</tbody>
</table>
<p><span class="mini-section">機能</span></p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>重量</td>
<td>254g</td>
</tr>
<tr class="even">
<td>ノイズキャンセリング</td>
<td>○</td>
</tr>
<tr class="odd">
<td>ハイレゾ</td>
<td>○</td>
</tr>
<tr class="even">
<td>マイク</td>
<td>○</td>
</tr>
<tr class="odd">
<td>外音取り込み</td>
<td>○</td>
</tr>
<tr class="even">
<td>音質調整</td>
<td>○</td>
</tr>
<tr class="odd">
<td>防水・防塵性能</td>
<td>☓</td>
</tr>
<tr class="even">
<td>リモコン操作</td>
<td>○</td>
</tr>
<tr class="odd">
<td>折りたたみ</td>
<td>○</td>
</tr>
<tr class="even">
<td>サラウンド</td>
<td>☓</td>
</tr>
<tr class="odd">
<td>AIアシスタント搭載</td>
<td>Google アシスタント / Amazon Alexa</td>
</tr>
<tr class="even">
<td>AIアシスタント呼び出し機能</td>
<td>○</td>
</tr>
</tbody>
</table>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Caution</span>マルチポイント接続の注意点
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>WH-1000XM4ではマルチポイント接続設定OnにするとLDACが使用できなくなります</li>
<li>WH-1000XM5以降ではこの点は改善されています</li>
</ul>
</div>
</div>
<p><span class="mini-section">LDACとは？</span></p>
<p>LDACとはSony が開発した Bluetoothオーディオコーデックです．Bluetoothのコーデックとは，スマホや音楽再生プレイヤーなどのデバイスからワイヤレスイヤホンやヘッドホンなどに無線で音楽のデータを送る際の符号化の規格です． 圧縮の規格でもあるので元の音楽データを圧縮エンコードしBluetoothで飛ばし，受信デバイスのイヤホンなどでデコードすることで音楽の再生をしています．そのため，コーデックの違いにより，音質や遅延に違いが出ます．</p>
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 85%">
</colgroup>
<thead>
<tr class="header">
<th>特性項目</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>コーデック名</td>
<td><strong>LDAC</strong></td>
</tr>
<tr class="even">
<td>特徴</td>
<td>ハイレゾ対応の最高音質 Bluetooth コーデック（Sony 開発）</td>
</tr>
<tr class="odd">
<td>主な採用機器</td>
<td>ハイレゾ対応 Android / iOS / Windows / Mac / Linux (PipeWire)</td>
</tr>
<tr class="even">
<td>サンプリング周波数</td>
<td>最大 <strong>96 kHz</strong></td>
</tr>
<tr class="odd">
<td>量子化ビット数</td>
<td>最大 <strong>24 bit</strong></td>
</tr>
<tr class="even">
<td>ビットレートモード</td>
<td><strong>330 kbps / 660 kbps / 990 kbps</strong> の 3 段階（ABRで自動調整可）</td>
</tr>
<tr class="odd">
<td>遅延</td>
<td>SBC / AAC より大きめ（高音質優先のため）</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="wh-1000xm4接続設定" class="level2">
<h2 class="anchored" data-anchor-id="wh-1000xm4接続設定">🔨 WH-1000XM4接続設定</h2>
<div class="cell" data-layout-align="default">
<details class="code-fold">
<summary>Code</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">---</span>
<span id="cb3-2">config:</span>
<span id="cb3-3">  theme: redux</span>
<span id="cb3-4">  themeVariables:</span>
<span id="cb3-5">    fontFamily: '"Meiryo"'</span>
<span id="cb3-6">    fontSize: 1.1em</span>
<span id="cb3-7">    lineHeight: 1.4</span>
<span id="cb3-8">---</span>
<span id="cb3-9">timeline</span>
<span id="cb3-10">    title WH-1000XM4接続設定手順</span>
<span id="cb3-11">    section ① Bluetooth 接続確認</span>
<span id="cb3-12">        Bluetooth Manager&lt;br&gt;のインストール</span>
<span id="cb3-13">            : Blueman&lt;br&gt;のインストール</span>
<span id="cb3-14">        LDAC サポート確認</span>
<span id="cb3-15">            : LDAC encoding toolのインストール</span>
<span id="cb3-16">            : Adaptive bit rate tooのインストール</span>
<span id="cb3-17">    section ② Config調整</span>
<span id="cb3-18">        Pipewire設定</span>
<span id="cb3-19">            : sampling frequencyの設定</span>
<span id="cb3-20">        Wireplumber設定</span>
<span id="cb3-21">            : LDAC encoding qualityの設定</span>
<span id="cb3-22">    section ③ WH-1000MX4動作確認</span>
<span id="cb3-23">        Bluetooth ペアリング : Bluemanで WH-1000XM4 を接続</span>
<span id="cb3-24">        接続確認</span>
<span id="cb3-25">            : 周波数確認</span>
<span id="cb3-26">            : Codec確認</span>
<span id="cb3-27">            : LDAC bit rate確認</span></code></pre></div></div>
</details>
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">---
config:
  theme: redux
  themeVariables:
    fontFamily: '"Meiryo"'
    fontSize: 1.1em
    lineHeight: 1.4
---
timeline
    title WH-1000XM4接続設定手順
    section ① Bluetooth 接続確認
        Bluetooth Manager&lt;br&gt;のインストール
            : Blueman&lt;br&gt;のインストール
        LDAC サポート確認
            : LDAC encoding toolのインストール
            : Adaptive bit rate tooのインストール
    section ② Config調整
        Pipewire設定
            : sampling frequencyの設定
        Wireplumber設定
            : LDAC encoding qualityの設定
    section ③ WH-1000MX4動作確認
        Bluetooth ペアリング : Bluemanで WH-1000XM4 を接続
        接続確認
            : 周波数確認
            : Codec確認
            : LDAC bit rate確認

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p><span class="mini-section">Bluetooth Managerのインストール</span></p>
<p>まずBluetooth デバイス管理ツール Blueman をインストールします． Ubuntu 24.04 LTSにはデフォルトでBluetooth Managerが入っているので「接続して音を出す」だけならばインストール不要です．</p>
<p>一方，接続プロファイルやcodecの選択といった制御がしやすいので今回導入します．</p>
<pre class="{bash}"><code>sudo apt install blueman</code></pre>
<p><span class="mini-section">LDAC codecの設定</span></p>
<p>Ubuntu 24.04 のデフォルトの Bluetooth ManagerだとLDACは使用できないので，以下のパッケージをインストールします</p>
<ul>
<li><code>libldacbt-enc-dev</code>: LDACエンコーディング処理用パッケージ</li>
<li><code>libldacbt-abr-dev</code>: Adaptive Bit Rateに対応するための開発ライブラリ</li>
</ul>
<p><code>-dev</code> suffixが無いものでも良いような気がしますが，今後ビルドとかするかもなので大は小を兼ねるとして開発用ライブラリをインストール． インストールコマンドは以下</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install libldacbt-abr-dev libldacbt-enc-dev</span></code></pre></div></div>
<p><span class="mini-section">Bluetooth接続確認</span></p>
<p>Bluetooth Managerを起動して，WH-1000XM4をペアリング接続します．このとき，LDAC codecを指定するのを忘れずに</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/connection.png" class="img-fluid figure-img"></p>
<figcaption>Bluetooth初期接続</figcaption>
</figure>
</div>
<p>次に <code>pactl list sinks</code> コマンドを用いて接続状態を確認してみます．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 74%">
</colgroup>
<thead>
<tr class="header">
<th>構成要素</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>pactl</strong></td>
<td>PulseAudio の制御ツール．サウンドデバイスの状態取得や操作のコマンド．</td>
</tr>
<tr class="even">
<td><strong>list sinks</strong></td>
<td>出力デバイス（<code>sink</code>＝スピーカーやBluetoothイヤホンなど）の一覧を表示するサブコマンド</td>
</tr>
</tbody>
</table>
</div>
<p>Bluetoothデバイスは <code>Name: bluez</code> というsink名になります．これらを踏まえて状態を確認してみます</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pactl list sinks <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> 20 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name: bluez'</span></span>
<span id="cb6-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Name:</span> bluez_output.xx_xx_xx_xx_xx_xx.1</span>
<span id="cb6-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Description:</span> WH-1000XM4</span>
<span id="cb6-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Driver:</span> PipeWire</span>
<span id="cb6-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Sample</span> Specification: float32le 2ch 48000Hz</span>
<span id="cb6-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span> Map: front-left,front-right</span>
<span id="cb6-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Owner</span> Module: 4294967295</span>
<span id="cb6-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Mute:</span> no</span>
<span id="cb6-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Volume:</span> front-left: 28382 /  43% / <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-21.81</span> dB,   front-right: 28382 /  43% / <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-21.81</span> dB</span>
<span id="cb6-10">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">balance</span> 0.00</span>
<span id="cb6-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Base</span> Volume: 65536 / 100% / 0.00 dB</span>
<span id="cb6-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Monitor</span> Source: bluez_output.xx_xx_xx_xx_xx_xx.1.monitor</span>
<span id="cb6-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Latency:</span> 0 usec, configured 0 usec</span>
<span id="cb6-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Flags:</span> HARDWARE HW_VOLUME_CTRL DECIBEL_VOLUME LATENCY </span>
<span id="cb6-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Properties:</span></span>
<span id="cb6-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.address</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xx:xx:xx:xx:xx:xx"</span></span>
<span id="cb6-17">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.codec</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ldac"</span></span>
<span id="cb6-18">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.profile</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a2dp-sink"</span></span>
<span id="cb6-19">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.transport</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb6-20">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">card.profile.device</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span>
<span id="cb6-21">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">device.id</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"179"</span></span>
<span id="cb6-22">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">device.routes</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span></code></pre></div></div>
<p>ここから，Bluetooth コーデックとサンプリングレートの確認ができます．</p>
<p>以下のようにcodecは問題なくLDACの認識となってます</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">  api.bluez5.codec </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "ldac"</span></span>
<span id="cb7-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">  api.bluez5.profile </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> "a2dp-sink"</span></span></code></pre></div></div>
<p>一方，samplking frequencyが</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb8-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    Sample Specification: float32le 2ch 48000Hz</span></span></code></pre></div></div>
<p>となっています．LDACは最大96kHz対応できるはずなので，PipeWire のサンプリング周波数を設定します．</p>
<p><span class="mini-section">sampling frequencyの設定</span></p>
<p><code>/usr/share/pipewire/pipewire.conf</code> に設定ファイルがあるのでこれを修正します．</p>
<ul>
<li><code>default.clock.rate</code>: フォルトのサンプリング周波数(Hz)</li>
<li><code>default.clock.allowed-rates</code>: PipeWire が切り替えを許可するサンプルレートのリスト</li>
</ul>
<p>以上2つの項目を修正します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb9-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">default.clock.rate          </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96000</span></span>
<span id="cb9-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">default.clock.allowed-rates </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> [ 48000, 96000 ]</span></span></code></pre></div></div>
<p>という形に変更します．<code>/usr/share/pipewire/pipewire.conf</code> は <code>root</code> ownerのファイルなので，修正するときは</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> vim /usr/share/pipewire/pipewire.conf</span></code></pre></div></div>
<p>で編集します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb11-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb11-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">context.properties </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> {</span></span>
<span id="cb11-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Configure properties in the system.</span></span>
<span id="cb11-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#library.name.system                   = support/libspa-support</span></span>
<span id="cb11-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#context.data-loop.library.name.system = support/libspa-support</span></span>
<span id="cb11-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#support.dbus                          = true</span></span>
<span id="cb11-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#link.max-buffers                      = 64</span></span>
<span id="cb11-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    link.max-buffers                       </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 16                       # version &lt; 3 clients can't handle more</span></span>
<span id="cb11-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mem.warn-mlock                        = false</span></span>
<span id="cb11-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mem.allow-mlock                       = true</span></span>
<span id="cb11-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#mem.mlock-all                         = false</span></span>
<span id="cb11-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#clock.power-of-two-quantum            = true</span></span>
<span id="cb11-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#log.level                             = 2</span></span>
<span id="cb11-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#cpu.zero.denormals                    = false</span></span>
<span id="cb11-15"></span>
<span id="cb11-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    core.daemon </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> true              # listening for socket connections</span></span>
<span id="cb11-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    core.name   </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> pipewire-0        # core name and socket name</span></span>
<span id="cb11-18"></span>
<span id="cb11-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Properties for the DSP configuration.</span></span>
<span id="cb11-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.rate          </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96000</span></span>
<span id="cb11-21"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.allowed-rates </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> [ 48000, 96000 ]</span></span>
<span id="cb11-22"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.quantum       </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb11-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.min-quantum   </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb11-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.max-quantum   </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span></span>
<span id="cb11-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.quantum-limit </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8192</span></span>
<span id="cb11-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    default.clock.quantum-floor </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb11-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#default.video.width         = 640</span></span>
<span id="cb11-28"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#default.video.height        = 480</span></span>
<span id="cb11-29"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#default.video.rate.num      = 25</span></span>
<span id="cb11-30"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#default.video.rate.denom    = 1</span></span>
<span id="cb11-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb11-32"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#settings.check-quantum      = false</span></span>
<span id="cb11-33"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#settings.check-rate         = false</span></span>
<span id="cb11-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb11-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These overrides are only applied when running in a vm.</span></span>
<span id="cb11-36"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    vm.overrides </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> {</span></span>
<span id="cb11-37"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">        default.clock.min-quantum </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb11-38"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb11-39"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div></div>
<p>編集後にサービスを再起動して設定を読み込ませます．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span> restart pipewire pipewire-pulse wireplumber</span></code></pre></div></div>
<p>もし接続が安定していればsampling frequencyを確認すると96kHzになっているはずです</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pactl list sinks <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> 20 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name: bluez'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample Specification:"</span></span>
<span id="cb13-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Sample</span> Specification: float32le 2ch 96000Hz</span></code></pre></div></div>
<p>ただし，かならず96kHzとはなりません．あくまで最大96kHzであって，接続状態に応じて 48kHz になったります．</p>
<p><span class="mini-section">LDAC encoding qualityの設定</span></p>
<p>Bit rateは，動画の1秒あたりのデータ量を示す値です． bps（bits per second）と表記され，1Mbpsに設定されている場合，1秒あたりデータ量が0.125MB（1byte＝8bit）の動画ということになります． ビットレートが高い動画ほど，データ量が多く高画質です．</p>
<p>LDACのbit rateを高品質モードで安定させたい場合は，WirePlumber の Bluetooth 設定ファイル <code>/usr/share/wireplumber/bluetooth.lua.d/50-bluez-config.lua</code> を編集します． <code>bluez5.a2dp.ldac.quality</code> というフィールドがLDAC のエンコード品質を設定するオプションです．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 63%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>値</th>
<th>説明</th>
<th>ビットレート</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>auto</code></td>
<td>適応ビットレート（Adaptive Bitrate），デフォルト</td>
<td>変動</td>
</tr>
<tr class="even">
<td><code>hq</code></td>
<td>高品質モード</td>
<td>990 / 909 kbps</td>
</tr>
<tr class="odd">
<td><code>sq</code></td>
<td>標準品質モード</td>
<td>660 / 606 kbps</td>
</tr>
<tr class="even">
<td><code>mq</code></td>
<td>モバイル用低ビットレートモード</td>
<td>330 / 303 kbps</td>
</tr>
</tbody>
</table>
</div>
<p><code>hq</code> を設定すれば，理論上は最大 96 kHz のサンプルレートをフル品質で利用できるはずです．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb14-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">matches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Matches all sources.</span></span>
<span id="cb14-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node.name"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matches"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluez_input.*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb14-5">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb14-6">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Matches all sinks.</span></span>
<span id="cb14-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node.name"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matches"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluez_output.*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb14-9">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb14-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span></code></pre></div></div>
<p>上記のセクションで <code>["bluez5.a2dp.ldac.quality"] = "hq",  -- LDAC HQ モード</code> という設定をします．このセクションは</p>
<ul>
<li><code>"bluez_input.*"</code>: すべての Bluetooth 入力ノード（マイクなど）</li>
<li><code>"bluez_output.*"</code>: すべての Bluetooth 出力ノード（ヘッドホンなど）</li>
</ul>
<p>正規表現で上記にマッチするすべてのノードに <code>apply_properties</code> を適用するという内容になります．従って，以下のような設定になります</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb15-2">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">matches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-4">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Matches all sources.</span></span>
<span id="cb15-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node.name"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matches"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluez_input.*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-7">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-8">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Matches all sinks.</span></span>
<span id="cb15-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"node.name"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matches"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluez_output.*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-11">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">apply_properties</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["node.nick"] = "My Node",</span></span>
<span id="cb15-15">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["priority.driver"] = 100,</span></span>
<span id="cb15-16">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["priority.session"] = 100,</span></span>
<span id="cb15-17">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["node.pause-on-idle"] = false,</span></span>
<span id="cb15-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["resample.quality"] = 4,</span></span>
<span id="cb15-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["channelmix.normalize"] = false,</span></span>
<span id="cb15-20">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["channelmix.mix-lfe"] = false,</span></span>
<span id="cb15-21">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["session.suspend-timeout-seconds"] = 5,  -- 0 disables suspend</span></span>
<span id="cb15-22">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["monitor.channel-volumes"] = false,</span></span>
<span id="cb15-23"></span>
<span id="cb15-24">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Media source role, "input" or "playback"</span></span>
<span id="cb15-25">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Defaults to "playback", playing stream to speakers</span></span>
<span id="cb15-26">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Set to "input" to use as an input for apps</span></span>
<span id="cb15-27">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--["bluez5.media-source-role"] = "input",</span></span>
<span id="cb15-28">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluez5.a2dp.ldac.quality"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hq"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- LDAC HQ モード</span></span>
<span id="cb15-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-30">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb15-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div></div>
<p>上記実行後再びサービスを再起動しときます．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span> restart pipewire pipewire-pulse wireplumber</span></code></pre></div></div>
<p>すると以下のような接続状態になるはずです</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pactl list sinks <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> 20 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Name: bluez'</span>                             </span>
<span id="cb17-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Name:</span> bluez_output.xx_xx_xx_xx_xx_xx.1</span>
<span id="cb17-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Description:</span> WH-1000XM4</span>
<span id="cb17-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Driver:</span> PipeWire</span>
<span id="cb17-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Sample</span> Specification: float32le 2ch 96000Hz</span>
<span id="cb17-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span> Map: front-left,front-right</span>
<span id="cb17-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Owner</span> Module: 4294967295</span>
<span id="cb17-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Mute:</span> no</span>
<span id="cb17-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Volume:</span> front-left: 19609 /  30% / <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-31.44</span> dB,   front-right: 19609 /  30% / <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-31.44</span> dB</span>
<span id="cb17-10">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">balance</span> 0.00</span>
<span id="cb17-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Base</span> Volume: 65536 / 100% / 0.00 dB</span>
<span id="cb17-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Monitor</span> Source: bluez_output.xx_xx_xx_xx_xx_xx.1.monitor</span>
<span id="cb17-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Latency:</span> 0 usec, configured 0 usec</span>
<span id="cb17-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Flags:</span> HARDWARE HW_VOLUME_CTRL DECIBEL_VOLUME LATENCY </span>
<span id="cb17-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Properties:</span></span>
<span id="cb17-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">allowed-rates</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table: 0xxxxxxxxxxxxx"</span></span>
<span id="cb17-17">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.address</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xx:xx:xx:xx:xx:xx"</span></span>
<span id="cb17-18">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.codec</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ldac"</span></span>
<span id="cb17-19">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.profile</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a2dp-sink"</span></span>
<span id="cb17-20">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">api.bluez5.transport</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb17-21">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bluez5.a2dp.ldac.quality</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hq"</span></span>
<span id="cb17-22">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">card.profile.device</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span></span></code></pre></div></div>
<p>以上で設定は完了です．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>周波数は96kHzの方が本当に良いのか？
</div>
</div>
<div class="callout-body-container callout-body">
<p>48kHzに比べ96kHzは転送可能データ量は倍増しますが，その分Bluetooth 帯域の負荷が高くなります．そのため，音途切れが出やすくなります． 家や障害物の少ない環境なら良いとは思いますが，外出のときに使う場合は96kHzにこだわる必要はないと思います．また，そもそも論としてあくまでLDACは音楽を聞くためのcodecであって，通話とかのときは使えません．</p>
</div>
</div>
<section id="その他フィールドについて" class="level3">
<h3 class="anchored" data-anchor-id="その他フィールドについて">その他フィールドについて</h3>
<p><span class="mini-section">Owner Module</span></p>
<p><code>Owner Module</code>は，音源（Sink）や音声ノードを 所有している PipeWire モジュール の IDをしめすフィールドです．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb18-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Owner Module: 4294967295</span></span></code></pre></div></div>
<p>となってますが</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A4,294,967,295%20=%202%5E%7B32%7D%20-%201%0A"></p>
<p>であることから特別な意味がありそうなことが推察できます．実際に，PipeWire / PulseAudio では 「所有者なし」 を表すフラグ的な値として扱われてます．</p>
<p><span class="mini-section">PulseAudio / PipeWire における音量の内部表現</span></p>
<p><code>Base Volume: 65536 / 100% / 0.00 dB</code> という行があります．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A65,536%20=%202%5E%7B16%7D%0A"></p>
<p>で音量の最大値を示しています．<a href="https://gitlab.freedesktop.org/pipewire/pipewire/-/blob/master/spa/plugins/alsa/acp/volume.h">PipeWire/pipewire Repository &gt; volume.h source</a>の実装を確認してみると</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span> pa_volume_t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PA_VOLUME_MUTED </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pa_volume_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">U</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PA_VOLUME_NORM </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pa_volume_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10000</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">U</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PA_VOLUME_MAX </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pa_volume_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>UINT32_MAX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div></div>
<p>となっており，音量は 32bit unsigned intとして扱われてますが，</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c code-with-copy"><code class="sourceCode c"><span id="cb20-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PA_VOLUME_NORM </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">pa_volume_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10000</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">U</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div></div>
<p>で16bit 正規化 (<code>0x10000</code>) が基準となっていることも読み取れます．</p>
</section>
</section>
<section id="easyeffectsの導入" class="level2">
<h2 class="anchored" data-anchor-id="easyeffectsの導入">🎚️ EasyEffectsの導入</h2>
<p>ヘッドホンは各製品ごとに個性が強く，同じ音源でも聞こえかたが異なります． 具体的には，ヘッドホンはその再生周波数特性が各製品ごとに異なり，その特性に応じて「ドンシャリ傾向」「かまぼこ傾向」「フラット傾向」の再生音となります．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 12%">
<col style="width: 53%">
<col style="width: 34%">
</colgroup>
<thead>
<tr class="header">
<th>音傾向</th>
<th>特徴</th>
<th>向いている音楽ジャンル・用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ドンシャリ</strong></td>
<td>低音と高音が強調される．低音が「ドンドン」，高音が「シャリシャリ」する派手な音．</td>
<td>ロック，EDM</td>
</tr>
<tr class="even">
<td><strong>かまぼこ</strong></td>
<td>中音域が際立ち，低音・高音は抑えめ．ボーカルやメロディが前に出やすい．</td>
<td>アコースティック，ボーカル重視の楽曲，バラード</td>
</tr>
<tr class="odd">
<td><strong>フラット</strong></td>
<td>周波数特性が均一に近く，原音忠実性が高い．録音やモニタリング用途に理想的．</td>
<td>クラシック，ジャズ，音源分析</td>
</tr>
</tbody>
</table>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/frequency.png" class="img-fluid figure-img"></p>
<figcaption>source: audio-technica &gt; ヘッドホン・イヤホンを識る</figcaption>
</figure>
</div>
<p>無理に調整する必要はないですが，Linux環境でEqualizer調整したい場合はPipewire環境でも動作する<span class="regmonkey-bold">EasyEffects</span>がおすすめです．</p>
<p><span class="mini-section">Equalizerとは？</span></p>
<p>イコライザーは音質傾向をリケーブルのように物理的にではなく，ソフトウェアで間接的に音質を変える手法です．</p>
<ul>
<li>音楽リスニングで好みの音質に調整</li>
<li>ヘッドホンでバーチャルサラウンド化</li>
</ul>
<p>という目的のために諒されます．Equalizer を使うと，各周波数帯（低音領域・中音領域・高温領域）の音量を個別に増減できます．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/easyeffects.png" class="img-fluid figure-img"></p>
<figcaption>Equalizer by EasyEffects</figcaption>
</figure>
</div>
<p><span class="mini-section">Easy Effectsのインストール</span></p>
<p>apt packageで入れる場合は以下のコマンドでインストールします</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># apt package</span></span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install easyeffects</span></code></pre></div></div>
<p><span class="mini-section">Equalizer設定</span></p>
<p>基本的には自分が理想とする音質に合わせて周波数ごとのゲインを調整します． 自分は<a href="https://autoeq.app/">AutoEQ</a>の周波数補正プリセットをベースラインとして少し自分好みに変更しました．</p>
<p>select headphonesのところに，<code>Sony WH-1000XM4 (ANC Off)</code>を入力すると以下のようなグラフがでてきます</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/autoeq.png" class="img-fluid figure-img"></p>
<figcaption>AutoEq</figcaption>
</figure>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th>用語</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>RAW</td>
<td>元のヘッドホン・スピーカーの周波数特性（補正前）</td>
</tr>
<tr class="even">
<td>TARGET</td>
<td>理想の周波数特性（目標カーブ）</td>
</tr>
<tr class="odd">
<td>EQUALIZED</td>
<td>EQ 補正を適用した後の特性（RAW → TARGET に近づけた状態）</td>
</tr>
</tbody>
</table>
</div>
<p>31-band Graphic Eqをコピペして，ちょっと自分好みに編集します．その後以下の形式でtxtファイルを保存します．</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode txt code-with-copy"><code class="sourceCode default"><span id="cb22-1">Preamp: 0db</span>
<span id="cb22-2">Filter 1: ON PK Fc 20 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-3">Filter 2: ON PK Fc 25 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-4">Filter 3: ON PK Fc 32 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-5">Filter 4: ON PK Fc 40 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-6">Filter 5: ON PK Fc 50 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-7">Filter 6: ON PK Fc 63 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-8">Filter 7: ON PK Fc 80 Hz Gain -0.2 dB Q 4.36</span>
<span id="cb22-9">Filter 8: ON PK Fc 101 Hz Gain 1.1 dB Q 4.36</span>
<span id="cb22-10">Filter 9: ON PK Fc 127 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-11">Filter 10: ON PK Fc 160 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-12">Filter 11: ON PK Fc 202 Hz Gain 0 dB Q 4.36</span>
<span id="cb22-13">Filter 12: ON PK Fc 254 Hz Gain -0.9 dB Q 4.36</span>
<span id="cb22-14">Filter 13: ON PK Fc 320 Hz Gain 0.7 dB Q 4.36</span>
<span id="cb22-15">Filter 14: ON PK Fc 403 Hz Gain 2.2 dB Q 4.36</span>
<span id="cb22-16">Filter 15: ON PK Fc 508 Hz Gain 0.3 dB Q 4.36</span>
<span id="cb22-17">Filter 16: ON PK Fc 640 Hz Gain 3 dB Q 4.36</span>
<span id="cb22-18">Filter 17: ON PK Fc 806 Hz Gain 2.3 dB Q 4.36</span>
<span id="cb22-19">Filter 18: ON PK Fc 1016 Hz Gain 0.8 dB Q 4.36</span>
<span id="cb22-20">Filter 19: ON PK Fc 1280 Hz Gain 1 dB Q 4.36</span>
<span id="cb22-21">Filter 20: ON PK Fc 1613 Hz Gain -1.1 dB Q 4.36</span>
<span id="cb22-22">Filter 21: ON PK Fc 2032 Hz Gain 0.5 dB Q 4.36</span>
<span id="cb22-23">Filter 22: ON PK Fc 2560 Hz Gain -1.1 dB Q 4.36</span>
<span id="cb22-24">Filter 23: ON PK Fc 3225 Hz Gain -0.7 dB Q 4.36</span>
<span id="cb22-25">Filter 24: ON PK Fc 4064 Hz Gain 2.2 dB Q 4.36</span>
<span id="cb22-26">Filter 25: ON PK Fc 5120 Hz Gain 1.7 dB Q 4.36</span>
<span id="cb22-27">Filter 26: ON PK Fc 6451 Hz Gain 0.2 dB Q 4.36</span>
<span id="cb22-28">Filter 27: ON PK Fc 8127 Hz Gain -3 dB Q 4.36</span>
<span id="cb22-29">Filter 28: ON PK Fc 10240 Hz Gain -0.4 dB Q 4.36</span>
<span id="cb22-30">Filter 29: ON PK Fc 12902 Hz Gain 2 dB Q 4.36</span>
<span id="cb22-31">Filter 30: ON PK Fc 16255 Hz Gain 4.7 dB Q 4.36</span>
<span id="cb22-32">Filter 31: ON PK Fc 20480 Hz Gain 10.7 dB Q 4.36</span></code></pre></div></div>
<p>それをImport PresetのAPOから読み込ませれば完了です．気に入らなければtoggleでon/offできるのもEasyEffectsの良いところです．</p>
<p><span class="mini-section">利用してるときにトラブルが発生した場合</span></p>
<p>EasyEffectsを利用しているとき，たまに音声出力やEQ処理でフリーズしたりします． 自分が直面したケースだとPipeWire や Bluetooth 接続自体の問題ではなく，EasyEffects の GUI やプラグインが原因だったので， 実行中の EasyEffects プロセスを強制終了する形で対処しています．コマンドは以下</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">killall</span> easyeffects</span></code></pre></div></div>
</section>
<section id="appendix-1-bluetooth" class="level2">
<h2 class="anchored" data-anchor-id="appendix-1-bluetooth">Appendix 1: Bluetooth</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">Bluetooth</span></p>
<ul>
<li>2.54GHz帯の電波を使って通信する無線通信規格</li>
<li>赤外線(IrDA)と異なり，インファーフェース部分を大勝利きに向ける必要はない</li>
<li>Wi-Fiのように高速通信ではないが，消費電力が少なく小型の機器に向いている</li>
</ul>
</div>
<p>Bluetooth製品の規格で重要なのが「Version」「Class」「Profile」の三点．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Version</td>
<td>通信方式や通信速度を規定したもの</td>
</tr>
<tr class="even">
<td>Class</td>
<td>電波強度と最大通信距離を表す</td>
</tr>
<tr class="odd">
<td>Profile</td>
<td>Bluetoothでやり取りするために通信ルール．音声ステレオ通信ならば「A2DP」，マウスやキーボードなどの入力装置ならば「HID」</td>
</tr>
</tbody>
</table>
</div>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">Bluetooth Class</span></p>
<ul>
<li>Bluetoothのクラスとは，電波の最大出力や到達距離を規定した名称</li>
<li>最大通信距離によって「クラス1」，「クラス2」，「クラス3」の3つの種類に分けられています．</li>
</ul>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>クラスの種類</th>
<th>最大出力</th>
<th>通信最大距離</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>クラス1</td>
<td>100mW</td>
<td>約100m</td>
</tr>
<tr class="even">
<td>クラス2</td>
<td>2.5mW</td>
<td>約10m</td>
</tr>
<tr class="odd">
<td>クラス3</td>
<td>1mW</td>
<td>約1m</td>
</tr>
</tbody>
</table>
</div>
<p>なお日本国内では「クラス1」といえど10mWが限界のため最大値の1/10が最大出力です．</p>
</section>
<section id="appendix-2-0x10000u-のprefixとsuffix" class="level2">
<h2 class="anchored" data-anchor-id="appendix-2-0x10000u-のprefixとsuffix">Appendix 2: <code>0x10000U</code> のprefixとsuffix</h2>
<p><code>0x10000U</code> には <code>0x</code> というprefixと <code>U</code> というsuffixが付いてます．</p>
<ul>
<li><code>0x</code>: 続くdigitsが16進数(hexadecimal number)であることを表す</li>
<li><code>U</code>: <code>unsigned</code>を表す．つまり今回は unsigned integer</li>
</ul>
<p>従って，<code>0x10000U</code> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A65,536%20=%201%20%5Ctimes%2016%5E4%20+%200%20%5Ctimes%2016%5E3%20+%200%20%5Ctimes%2016%5E2%20+%200%20%5Ctimes%2016%5E1%20%20+%200%20%5Ctimes%2016%5E0%0A"></p>
<p>となります．</p>
<p><span class="mini-section">C, C++で使用されるsuffix例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 11%">
<col style="width: 72%">
</colgroup>
<thead>
<tr class="header">
<th>value</th>
<th>suffix</th>
<th>meaning</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>123</code></td>
<td></td>
<td>デフォルトの整数型（通常 <code>int</code>）</td>
</tr>
<tr class="even">
<td><code>123u</code></td>
<td><code>u</code></td>
<td><code>unsigned int</code>（符号なし整数）</td>
</tr>
<tr class="odd">
<td><code>123l</code></td>
<td><code>l</code></td>
<td><code>long</code>（符号付き長整数，環境依存で32bit）</td>
</tr>
<tr class="even">
<td><code>123L</code></td>
<td><code>L</code></td>
<td><code>long</code>（符号付き長整数）</td>
</tr>
<tr class="odd">
<td><code>123uL</code></td>
<td><code>uL</code></td>
<td><code>unsigned long</code>（符号なし長整数）</td>
</tr>
<tr class="even">
<td><code>123LL</code></td>
<td><code>LL</code></td>
<td><code>long long</code>（符号付き64bit整数）</td>
</tr>
<tr class="odd">
<td><code>123uLL</code></td>
<td><code>uLL</code></td>
<td><code>unsigned long long</code>（符号なし64bit整数）</td>
</tr>
</tbody>
</table>
</div>
<pre class="{zsh}"><code>% gcc check_numeric_type.c -o test &amp;&amp; ./test
Type                 Bytes  Min                    Max                   
int                  4      -2147483648            2147483647            
short                2      -32768                 32767                 
long                 8      -9223372036854775808   9223372036854775807   
unsigned short       2      0                      65535                 
unsigned long        8      0                      18446744073709551615  
long long            8      -9223372036854775808   9223372036854775807   
unsigned long long   8      0                      18446744073709551615  
float                4      -3.402823e+38          3.402823e+38          
double               8      -1.797693e+308         1.797693e+308         
long double          16     -1.189731e+4932        1.189731e+4932 </code></pre>
<p>つまり，<code>long long</code> は 8 bytes(=64 bits)であることがわかります．</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://autoeq.app/">AutoEQ</a></li>
<li><a href="https://www.audio-technica.co.jp/headphone/navi/whatis/06.php">audio-technica &gt; ヘッドホン・イヤホンを識る</a></li>
<li><a href="https://pipewire.pages.freedesktop.org/wireplumber/daemon/configuration/bluetooth.html">WirePlumber setting</a></li>
<li><a href="https://gitlab.freedesktop.org/pipewire/pipewire/-/blob/master/spa/plugins/alsa/acp/volume.h">PipeWire/pipewire Repository &gt; volume.h source</a></li>
<li><a href="https://ryonakagami.github.io/2021/04/23/ubuntu-sony-bluetooth-setting/">Ryo’s Tech Blog &gt; Sony WF-1000XM3 Bluetoothの設定</a></li>
</ul>


</section>

 ]]></description>
  <category>bluetooth</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-18-wh1000xm4-setup/</guid>
  <pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>VDIとは？</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-17-VDI/</link>
  <description><![CDATA[ 






<section id="vdiとは" class="level2">
<h2 class="anchored" data-anchor-id="vdiとは">VDIとは？</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">VDI(Virtual Desktop Infrastructure)</span></p>
<ul>
<li>仮想環境技術を用いて，デスクトップ環境をサーバー上で構築・集中管理し，ユーザーがリモートからアクセスできるようにする仕組み．</li>
<li>サーバー上でユーザーごとに仮想デスクトップ（VM）を提供されるので，OSやアプリも個別に分離されている</li>
</ul>
</div>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    %% VDI型環境
    subgraph VDI[VDI環境]
    direction LR
      %% サーバー側
      subgraph Server[サーバー]
          direction LR
          HW[ハードウェア]
          HV[ハイパーバイザ]
          VM1[VM 1: OS + アプリ]
          VM2[VM 2: OS + アプリ]
          VM3[VM 3: OS + アプリ]
          
          HW --&gt; HV
          HV --&gt; VM1
          HV --&gt; VM2
          HV --&gt; VM3
      end

      %% クライアント側
      Client1[端末 1]
      Client2[端末 2]
      Client3[端末 3]
      
      VM1 --&gt;|画面転送| Client1
      VM2 --&gt;|画面転送| Client2
      VM3 --&gt;|画面転送| Client3
    end
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: VDI環境
</figcaption>
</figure>
</div>
<section id="デスクトップ仮想化の種類" class="level3">
<h3 class="anchored" data-anchor-id="デスクトップ仮想化の種類">デスクトップ仮想化の種類</h3>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 29%">
<col style="width: 20%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header">
<th>種類</th>
<th>概要</th>
<th>特徴</th>
<th>利点</th>
<th>注意点</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>サーバーベース型</strong></td>
<td>複数ユーザーが1台のサーバーOS環境を共有</td>
<td>OSは1種類，セッションを共有</td>
<td>導入コスト低，サーバー資源効率的</td>
<td>個別カスタマイズ不可，安定性やセキュリティの制約</td>
</tr>
<tr class="even">
<td><strong>VDI</strong></td>
<td>サーバー上でユーザーごとに独立した仮想マシンを提供</td>
<td>個別OS環境，画面転送型</td>
<td>個別カスタマイズ可能，柔軟でセキュア</td>
<td>サーバー・ストレージ負荷高，導入コスト高</td>
</tr>
<tr class="odd">
<td><strong>ブレードPC型</strong></td>
<td>サーバーラック内に物理PCを設置し，ネットワーク経由で利用</td>
<td>フル物理PC環境をリモート利用</td>
<td>高性能アプリ向き，互換性問題少</td>
<td>ハードウェアコスト高，管理・保守が物理的に大変</td>
</tr>
<tr class="even">
<td><strong>パーソナルクラウド型<br>（DaaS: Desktop as a Service）</strong></td>
<td>クラウド上で提供される仮想デスクトップ</td>
<td>ユーザーごとに独立OS，クラウド管理</td>
<td>初期投資少，スケーラブル，場所を選ばず利用可能</td>
<td>ネットワーク依存，継続コストがかかる</td>
</tr>
<tr class="odd">
<td><strong>アプリケーション仮想化</strong></td>
<td>OSは端末に残し，アプリだけ仮想化して配信</td>
<td>アプリ単位で配信・管理</td>
<td>OSに依存せずアプリ更新容易</td>
<td>OSやアプリ間互換性に注意</td>
</tr>
</tbody>
</table>
</div>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    %% ブレードPC型環境
    subgraph Blade[ブレードPC環境]
    direction LR
      %% サーバー側（物理PC）
      subgraph BladeServer[ブレードPCラック]
          direction LR
          PC1[PC 1]
          PC2[PC 2]
          PC3[PC 3]
      end

      %% クライアント側
      Client1[端末 1]
      Client2[端末 2]
      Client3[端末 3]
      
      PC1 --&gt;|画面転送| Client1
      PC2 --&gt;|画面転送| Client2
      PC3 --&gt;|画面転送| Client3
    end
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: ブレードPC環境
</figcaption>
</figure>
</div>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    %% サーバーベース型環境
    subgraph RDS[サーバーベース型環境]
    direction LR
      %% サーバー側
      subgraph Server[サーバー]
          direction LR
          HW[ハードウェア]
          OS[OS]
          App[アプリ]
      end

      %% クライアント側
      Client1[端末 1]
      Client2[端末 2]
      Client3[端末 3]
      
      Server --&gt;|画面転送（セッション共有）| Client1
      Server --&gt;|画面転送（セッション共有）| Client2
      Server --&gt;|画面転送（セッション共有）| Client3
    end
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: サーバーベース型環境
</figcaption>
</figure>
</div>
<div id="fig-daas" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-daas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    %% パーソナルクラウド型環境
    subgraph DaaS[パーソナルクラウド型環境]
    direction LR
      %% クラウド側サーバー
      subgraph Cloud[クラウドサーバー]
          direction LR
          HW[ハードウェア]
          HV[ハイパーバイザ]
          VM1[VM 1: OS + アプリ]
          VM2[VM 2: OS + アプリ]
      end

      %% クライアント側
      Client1[端末 1]
      Client2[端末 2]

      VM1 --&gt;|画面転送 + データ保護| Client1
      VM2 --&gt;|画面転送 + データ保護| Client2
    end
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-daas-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: パーソナルクラウド型（DaaS）環境
</figcaption>
</figure>
</div>
<div id="fig-appvirt" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-appvirt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    %% アプリケーション仮想化
    subgraph AppVirt[アプリケーション仮想化]
    direction LR
      %% サーバー側
      subgraph Server[サーバー]
          direction LR
          HW[ハードウェア]
          AppServer[アプリケーションサーバー]
      end

      %% クライアント側
      Client1[端末 1]
      Client2[端末 2]

      AppServer --&gt;|アプリ配信 + データ保護| Client1
      AppServer --&gt;|アプリ配信 + データ保護| Client2
    end
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-appvirt-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: アプリケーション仮想化環境
</figcaption>
</figure>
</div>
</section>
<section id="vdiの特徴" class="level3">
<h3 class="anchored" data-anchor-id="vdiの特徴">VDIの特徴</h3>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>(1) 集中管理
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>OSやアプリケーションをサーバー上で集中管理するため，ソフトウェアの更新やパッチ適用を一元的に行える</li>
<li>アクセス権限や暗号化を一元管理できる</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>(2) 画面転送型アーキテクチャ
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>実際の処理はサーバー上で行われ，端末には画面情報だけが転送される</li>
<li>クライアント側の性能に大きく依存せず，高速な端末が不要</li>
<li>端末が変わっても同じ仮想デスクトップ環境が使える</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>(3) セキュリティの強化
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>データはサーバーに集中保存され，端末側には残らないため情報漏洩リスクが低い</li>
<li>端末の紛失・盗難による情報漏洩の防止が期待できる</li>
</ul>
</div>
</div>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=Jw2w6aYRKqo">【5分で学べる】VDIとは？VDI導入による効果 | 情報処理安全確保支援士（登録セキスペ）</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-17-VDI/</guid>
  <pubDate>Wed, 17 Sep 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>代表的なカーネル関数</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-12-kernel-function/</link>
  <description><![CDATA[ 






<section id="代表的なカーネル" class="level2">
<h2 class="anchored" data-anchor-id="代表的なカーネル">代表的なカーネル</h2>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<span class="screen-reader-only">Note</span>カーネル関数例
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7BGaussian%20kernel:%20%7D%20&amp;%20k(u)%20=%20%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D%5Cexp%5Cleft(-%5Cfrac%7Bu%5E2%7D%7B2%7D%5Cright)%5C%5C%0A%5Ctext%7BEpanechnikov%20kernel:%20%7D%20&amp;%20k(u)%20=%20%5Cfrac%7B3%7D%7B4%7D(1%20-%20u%5E2)%5Cmathbf%20I%5C%7B%7Cu%7C%20%5Cleq%201%5C%7D%20=%20%5Cfrac%7B3%7D%7B4%7D%5Cmax%5C%7B1%20-%20u%5E2,%200%5C%7D%5C%5C%0A%5Ctext%7BBiweight%20kernel:%20%7D%20&amp;%20k(u)%20=%20%5Cfrac%7B15%7D%7B16%7D(1%20-%20u%5E2)%5E2%5Cmathbf%20I%5C%7B%7Cu%7C%20%5Cleq%201%5C%7D%5C%5C%0A%5Ctext%7BUniform%20kernel:%20%7D%20&amp;%20k(u)%20=%20%5Cfrac%7B1%7D%7B2%7D%5Cmathbf%20I%5C%7B%7Cu%7C%20%5Cleq%201%5C%7D%5C%5C%5B5pt%5D%0A%5Ctext%7BTriangular%20kernel:%20%7D%20&amp;%20k(u)%20=%20(1%20-%20%7Cu%7C)%5Cmathbf%20I%5C%7B%7Cu%7C%20%5Cleq%201%5C%7D%0A%5Cend%7Balign%7D%0A"></p>
</div>
</div>
<p>上記のカーネル関数は以下のような特徴があります</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?K(u)"> is symmetric</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cint%20k(u)du%20=%201">: KDEで推定された関数が密度関数であるための必要条件</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bu%5Cto%5Cinfty%7Dk(u)%20=%20%5Clim_%7Bu%5Cto-%5Cinfty%7Dk(u)%20=%200"></li>
</ul>
<section id="カーネル関数別の密度関数推定結果の可視化" class="level3">
<h3 class="anchored" data-anchor-id="カーネル関数別の密度関数推定結果の可視化">カーネル関数別の密度関数推定結果の可視化</h3>
<p>カーネル密度関数推定量を</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20f(x)%20=%20%5Cfrac%7B1%7D%7Bnh%7D%5Csum_%7Bi=1%7D%5En%20k%5Cleft(%5Cfrac%7BX_i%20-%20x%7D%7Bh%7D%5Cright)%0A"></p>
<p>として，それぞれのカーネル関数を用いた推定結果を以下可視化します．</p>
<div id="57688c59" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KernelDensity</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># okabe-ito color</span></span>
<span id="cb1-7">color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E69F00"</span>,</span>
<span id="cb1-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#56B4E9"</span>,</span>
<span id="cb1-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#009E73"</span>,</span>
<span id="cb1-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0E442"</span>,</span>
<span id="cb1-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0072B2"</span>,</span>
<span id="cb1-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D55E00"</span>,</span>
<span id="cb1-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CC79A7"</span>,</span>
<span id="cb1-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>,</span>
<span id="cb1-16">]</span>
<span id="cb1-17"></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gaussian kernel function</span></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gaussian_kernel(u):</span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> epanechnikov_kernel(u):</span>
<span id="cb1-25">    const <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> const <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(u) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb1-27"></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> biweight_kernel(u):</span>
<span id="cb1-30">    const <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> const <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(u) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb1-32"></span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> uniform_kernel(u):</span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(u) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb1-36"></span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> triangular_kernel(u):</span>
<span id="cb1-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(u)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(u) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb1-40"></span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># KDE</span></span>
<span id="cb1-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> kde(x, data, bandwidth, kernel_func):</span>
<span id="cb1-44">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data)</span>
<span id="cb1-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bandwidth)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(kernel_func((x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> data) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> bandwidth))</span>
<span id="cb1-46"></span>
<span id="cb1-47"></span>
<span id="cb1-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Old Faithful dataset (from seaborn)</span></span>
<span id="cb1-49">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modern version of faithful dataset</span></span>
<span id="cb1-50">waiting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waiting"</span>].dropna().values</span>
<span id="cb1-51"></span>
<span id="cb1-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot kernels</span></span>
<span id="cb1-53">u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span>
<span id="cb1-54">x_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-55">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb1-56"></span>
<span id="cb1-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gaussian</span></span>
<span id="cb1-58">kde_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: kde(x, waiting, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, gaussian_kernel), x_plot))</span>
<span id="cb1-59">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(u, gaussian_kernel(u), color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-60">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-61">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gaussian Kernel"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-62">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(x_plot, kde_vals, color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-63">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-64">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser$waiting"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-65">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gaussian KDE with bandwidth: 0.5"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-66"></span>
<span id="cb1-67"></span>
<span id="cb1-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># epanechnikov</span></span>
<span id="cb1-69">kde_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: kde(x, waiting, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, epanechnikov_kernel), x_plot))</span>
<span id="cb1-70">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(u, epanechnikov_kernel(u), color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-71">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-72">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Epanechnikov Kernel"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-73">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(x_plot, kde_vals, color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-74">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-75">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser$waiting"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-76">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Epanechnikov KDE with bandwidth: 2"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-77"></span>
<span id="cb1-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Biweight</span></span>
<span id="cb1-79">kde_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: kde(x, waiting, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, biweight_kernel), x_plot))</span>
<span id="cb1-80">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(u, biweight_kernel(u), color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-81">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-82">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Biweight Kernel"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-83">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(x_plot, kde_vals, color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-84">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-85">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser$waiting"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-86">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Biweight KDE with bandwidth: 2"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-87"></span>
<span id="cb1-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Uniform</span></span>
<span id="cb1-89">kde_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: kde(x, waiting, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, uniform_kernel), x_plot))</span>
<span id="cb1-90">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(u, uniform_kernel(u), color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-91">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-92">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uniform Kernel"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-93">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(x_plot, kde_vals, color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-94">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-95">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser$waiting"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-96">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"uniform KDE with bandwidth: 0.5"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-97"></span>
<span id="cb1-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Triangular</span></span>
<span id="cb1-99">kde_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: kde(x, waiting, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, triangular_kernel), x_plot))</span>
<span id="cb1-100">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(u, triangular_kernel(u), color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-101">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-102">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Triangular Kernel"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-103">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(x_plot, kde_vals, color[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-104">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-105">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser$waiting"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-106">axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Triangular KDE with bandwidth: 1.0"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb1-107"></span>
<span id="cb1-108">plt.show()</span></code></pre></div></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-12-kernel-function/index_files/figure-html/cell-2-output-1.png" width="1269" height="2302" class="figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>統計</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-09-12-kernel-function/</guid>
  <pubDate>Fri, 12 Sep 2025 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
