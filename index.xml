<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>regmonkey datascience blog</title>
<link>https://ryonakagami.github.io/regmonkey-datascience-blog/</link>
<atom:link href="https://ryonakagami.github.io/regmonkey-datascience-blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.7.32</generator>
<lastBuildDate>Thu, 12 Jun 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>物質量と気体の体積</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-12-moles-and-gas-volume/</link>
  <description><![CDATA[ 






<section id="物質量" class="level2">
<h2 class="anchored" data-anchor-id="物質量">物質量</h2>
<p>物質の量を表すときには，質量や体積を用いることが多いです．しかし，物質が化学変化するときには，物質を構成する原子，分子，イオンなどの粒子の結合の組み合わせが変化 します．そのため，化学で物質の量を表すときには，その中に含まれる粒子の「個数」で考えると便利になります．この粒子の個数に着目して表した物質の量を「物質量」といい，モル (mol) という単位で 表します．</p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1 (アボガドロ定数)</strong></span> <br></p>
<p>原子や分子 1 mol あたりの粒子の数を示す次元をもつ物理量で</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_A%20=%206.0%20%5Ctimes%2010%5E%7B23%7D%20%5Ctext%7B/mol%7D%0A"></p>
</div>
<p>質量数 12 の炭素原子 <img src="https://latex.codecogs.com/png.latex?%5C,%5E%7B12%7D%5Ctext%7BC%7D"> は <img src="https://latex.codecogs.com/png.latex?1.99%20%5Ctimes%2010%5E%7B-23%7D"> g という決まった質量を持ちますがこのときの炭素原子の数は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B12%5Ctext%7Bg%7D%7D%7B1.99%20%5Ctimes%2010%5E%7B-23%7D%7D%20%5Capprox%206.0%20%5Ctimes%2010%5E%7B23%7D%0A"></p>
<p>計算でき，これをアボガドロ数といいます．アボガドロ数に <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Bmol%7D%5E%7B-1%7D"> の単位をつけたのがアボガドロ定数です．物質 <img src="https://latex.codecogs.com/png.latex?1"> molあたりの質量を <span class="regmonkey-bold">モル質量 [g/mol]</span> と呼びます．</p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1 (実験でアボガドロ定数を求める)</strong></span> <br></p>
<p>１円玉は1gのアルミニウムからできています．室温でのアルミニウム密度は2.7<img src="https://latex.codecogs.com/png.latex?%5Ctext%7Bg/cm%7D%5E3">なので体積は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B1%E5%86%86%E7%8E%89%E4%BD%93%E7%A9%8D%7D%20=%20%5Cfrac%7B1%5Ctext%7Bg%7D%7D%7B2.7%5Ctext%7Bg/cm%7D%5E3%7D%20=%201/2.7%5Ctext%7Bcm%7D%5E3%0A"></p>
<p>金属の固体では，金属の原子が規則正しく配列して金属結晶をつくっていて，結晶中の規則的な粒子の配列を結晶格子といいますその中に現れる最小の繰り返し単位を「単位格子」といい，アルミニウムは 面心立方格子の構造で，1 辺の長さが <img src="https://latex.codecogs.com/png.latex?4.04%20%C3%97%2010%5E%7B-8%7D"> cm の立方体（単位格子）中に原子が正味４個分，含まれています．</p>
<p>以上より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_A%20=%20%5Cfrac%7B%5Ctext%7B1%E5%86%86%E7%8E%89%E4%BD%93%E7%A9%8D%5Bcm%5D%7D%5E3%7D%7B%5Ctext%7B%E5%8D%98%E4%BD%8D%E6%A0%BC%E5%AD%90%E4%BD%93%E7%A9%8D%5Bcm%5D%7D%5E3%7D%20%5Ctimes%204%20%5Ctimes%20%5Cfrac%7B%5Ctext%7B%E3%82%A2%E3%83%AB%E3%83%9F%E3%83%8B%E3%82%A6%E3%83%A0%E3%83%A2%E3%83%AB%E8%B3%AA%E9%87%8F%5Bg/mol%5D%7D%7D%7B%5Ctext%7B1%E5%86%86%E7%8E%89%E8%B3%AA%E9%87%8F%5Bg%5D%7D%7D%0A"></p>
<p>となるはずなので</p>
<div id="057049c5" class="cell" data-execution_count="1">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3">coin_volumn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.float64(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>)</span>
<span id="cb1-4">grid_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.float64(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.04</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb1-5">al_mol_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.float64(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7">number_of_molecules <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coin_volumn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (grid_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> al_mol_mass</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">{{</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>number_of_molecules<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2e}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">}}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>{6.07e+23}</code></pre>
</div>
</div>
<p>よってアボガドロ定数が計算できました．</p>
</div>
<hr>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2 (アボガドロの法則)</strong></span> <br></p>
<p>同温・同圧で同体積の気体の中には，気体の種類によらず，同数の分子が含まれる．</p>
</div>
<p>実測によると [0℃, <img src="https://latex.codecogs.com/png.latex?1.013%20%5Ctimes%2010%5E5"> Pa] において，多くの気体 <img src="https://latex.codecogs.com/png.latex?1"> mol の体積は 22.4 Lになります． この物質 1 molあたりの体積を<span class="regmonkey-bold">モル体積</span>と呼び，標準気圧での気体のモル体積は 22.4L/mol になります．</p>
<p>気体の物質量はこの関係式を用いると以下のように求めることができます</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%E6%B0%97%E4%BD%93%E3%81%AE%E7%89%A9%E8%B3%AA%E9%87%8F%5Bmol%5D%7D%20=%20%5Cfrac%7B%5Ctext%7B%E6%A8%99%E6%BA%96%E7%8A%B6%E6%85%8B%E3%81%A7%E3%81%AE%E6%B0%97%E4%BD%93%E3%81%AE%E4%BD%93%E7%A9%8D%5BL%5D%7D%7D%7B22.4%20%5Ctext%7BL/mol%7D%7D%0A"></p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2 (二酸化炭素の体積を求める)</strong></span> <br></p>
<p>二酸化炭素の個体である「ドライアイス」が11g与えられているとき，これを [0℃, <img src="https://latex.codecogs.com/png.latex?1.013%20%5Ctimes%2010%5E5"> Pa] のもとで気化させたときの二酸化炭素の体積を求めてみます．</p>
<p>まず二酸化炭素 <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BCO%7D_2"> は <img src="https://latex.codecogs.com/png.latex?44%20%5Ctext%7Bg/mol%7D%20=%2012%20+%202%5Ctimes%2016"> とします．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>元素名</th>
<th>元素記号</th>
<th>原子番号</th>
<th>原子量</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>炭素</td>
<td>C</td>
<td>6</td>
<td>12.0107</td>
</tr>
<tr class="even">
<td>酸素</td>
<td>O</td>
<td>8</td>
<td>15.9994</td>
</tr>
</tbody>
</table>
</div>
<p>11.0gのドライアイスの物質量は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B11.0%5Ctext%7Bg%7D%7D%7B44%20%5Ctext%7Bg/mol%7D%7D%20=%200.25%5Ctext%7Bmol%7D%0A"></p>
<p>アボガドロの法則より， [0℃, <img src="https://latex.codecogs.com/png.latex?1.013%20%5Ctimes%2010%5E5"> Pa] において，気体 <img src="https://latex.codecogs.com/png.latex?1"> mol の体積は 22.4 Lになるので，気化した二酸化炭素の体積は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A22.4%5Ctext%7BL/mol%7D%20%5Ctimes%200.25%5Ctext%7Bmol%7D%20=%205.6%20%5Ctext%7BL%7D%0A"></p>
<p>と推定することができます．室温（約23℃）でドライアイスを昇華させたとき，1 mol の二酸化炭素が占める体積は 22.4 L にはなりません．直感的イメージとして， ボイル・シャルルの法則より同じ気体のもとでは温度と体積は比例するので，もうすこし大きい体積となります．</p>
</div>
<hr>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 3 (一般気体定数)</strong></span> <br></p>
<p>1 molの気体は，アボガドロの法則より，気体の種類関係なく同温・同圧で同体積の気体の中に同数の分子が含まれます．ボイル=シャルルの法則という理想気体の性質に関する経験法則，及び <img src="https://latex.codecogs.com/png.latex?0%20%5C,%5E%5Ccirc%5Ctext%7BC%7D">, 1気圧(<img src="https://latex.codecogs.com/png.latex?1.013%5Ctimes%2010%5E5"> [Pa]) の標準状態では22.4Lの体積の中に含まれることから気体定数を以下のように計算できます</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AR_0%0A%20%20&amp;=%20%5Cfrac%7Bpv%7D%7BT%7D%5C%5C%0A%20%20&amp;=%20%5Cfrac%7B1.013%20%5Ctimes%2010%5E5%20%5Ctimes%2022.4%7D%7B273%20%5Ctimes%2010%5E3%7D%5C%5C%0A%20%20&amp;=%208.31%20%5Ctext%7B%5BJ/mol%7D%5Ccdot%5Ctext%7BK%5D%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>これを <img src="https://latex.codecogs.com/png.latex?n"> モルの理想気体に当てはめると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Apv%20=%20nR_0T%0A"></p>
<p>という理想気体の状態方程式を得ます．</p>
<hr>
<section id="気体の密度と分子量" class="level3">
<h3 class="anchored" data-anchor-id="気体の密度と分子量">気体の密度と分子量</h3>
<p>密度は単位体積あたりの質量を表した物理量で，固体・液体の密度は [g/cm3]，気体の密度は体積１ L あたりの質量 [g/L] の単位で表します． つまり，気体 1L あたりの質量を「気体の密度」になります．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
シャボン玉でガス缶の中身を調べる
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>水素 <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BH%7D_2">, 酸素 <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BO%7D_2">, 二酸化炭素 <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BCO%7D_2"> がそれぞれ充填された３つのガス缶がある</li>
<li>どの缶にどの気体が入っているのかわからない</li>
</ul>
<p>このとき，どの缶にどの気体が入っているか知りたいとします．調べる一つの方法として，各気体で同じ大きさくらいに膨らませたシャボン玉をつくり密度を比較する方法が有ります． 標準状態における気体の密度は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Ctext%7B%E5%88%86%E5%AD%90%E9%87%8F%5Bg%5D%7D%7D%7B22.4%5Ctext%7BL/mol%7D%7D%0A"></p>
<p>で計算できるので，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7BH%7D_2%5Ctext%7B%E3%81%AE%E5%AF%86%E5%BA%A6%7D%20&amp;=%20%5Cfrac%7B2.0%7D%7B22.4%7D%20%5Capprox%200.089%5Ctext%7Bg/L%7D%5C%5C%0A%5Ctext%7BO%7D_2%5Ctext%7B%E3%81%AE%E5%AF%86%E5%BA%A6%7D%20&amp;=%20%5Cfrac%7B32%7D%7B22.4%7D%20%5Capprox%201.4%5Ctext%7Bg/L%7D%5C%5C%0A%5Ctext%7BCO%7D_2%5Ctext%7B%E3%81%AE%E5%AF%86%E5%BA%A6%7D%20&amp;=%20%5Cfrac%7B44%7D%7B22.4%7D%20%5Capprox%202.0%5Ctext%7Bg/L%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>密度が重いほど，同じ環境下では下降速度は速くなることから．同程度の大きさのシャボン玉で下降するとき速さを比較すれば，どの缶にどんな気体が入っているのか推測することができます．</p>
<p>なお，空気の平均分子量は，空気の組成を <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BN%7D_2%20:%20%5Ctext%7BO%7D_2%20=%204:1"> とすると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%E7%A9%BA%E6%B0%97%E3%81%AE%E5%B9%B3%E5%9D%87%E5%88%86%E5%AD%90%E9%87%8F%7D%20=%2028%20%5Ctimes%200.8%20+%2032%20%5Ctimes%200.2%20=%2028.8%20%5Ctext%7Bg/mol%7D%0A"></p>
<p>となることから，各期待の密度を計算するまでもなく，水素が入ったシャボン玉は上昇し，酸素が入ったシャボン玉は比較的ゆっくり下降，二酸化炭素が入ったシャボン玉は酸素のシャボン玉より速く下降するとわかります．</p>
</div>
</div>
</section>
<section id="気体の内部エネルギーとモル比熱" class="level2">
<h2 class="anchored" data-anchor-id="気体の内部エネルギーとモル比熱">気体の内部エネルギーとモル比熱</h2>
<p>気体の内部エネルギーを，温度 <img src="https://latex.codecogs.com/png.latex?T"> と体積 <img src="https://latex.codecogs.com/png.latex?V"> を独立変数として，<img src="https://latex.codecogs.com/png.latex?U%20=%20U(T,%20V)"> と表すと</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7Bgrad%7D%20U%20%5Cequiv%20%5Cleft(%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_V,%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20V%7D%5Cright)_T%5Cright)%0A"></p>
<p>これをもちいて整理すると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AdU%20=%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_VdT%20+%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20V%7D%5Cright)_TdV%0A"></p>
<p>熱力学第一法則より 気体が外部になす微小仕事 <img src="https://latex.codecogs.com/png.latex?dW%20=%20PdV"> より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AdQ%20=%20%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_VdT%20+%20%5Cleft%5B%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20V%7D%5Cright)_T%20+%20P%5Cright%5DdV%20%5Clabel%7Btemp-vol-eq%7D%0A"></p>
<section id="定積モル比熱と定圧モル比熱" class="level3">
<h3 class="anchored" data-anchor-id="定積モル比熱と定圧モル比熱">定積モル比熱と定圧モル比熱</h3>
<p>体積一定の容器に入れた気体に熱を加える場合を考えます．<img src="https://latex.codecogs.com/png.latex?%5Ceqref%7Btemp-vol-eq%7D"> で <img src="https://latex.codecogs.com/png.latex?dV%20=%200"> とおけるので</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AdQ%20=%20%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_VdT%0A"></p>
<p>ここから体積一定のもとで，気体の温度を単位温度上げるのに必要な熱量は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BdQ%7D%7BdT%7D%20=%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_V%0A"></p>
<p>これをモル数 <img src="https://latex.codecogs.com/png.latex?n"> で割ると定積モル比熱になります．</p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3</strong></span> <span class="def-title">定積モル比熱</span></p>
<p>定積モル比熱 <img src="https://latex.codecogs.com/png.latex?C_v"> [J/mol･K] は以下のように定義される</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_v%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Cleft(%5Cfrac%7B%5Cpartial%20Q%7D%7B%5Cpartial%20T%7D%5Cright)_V%20=%20%5Cfrac%7B1%7D%7Bn%7D%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20T%7D%5Cright)_V%0A"></p>
</div>
<p>圧力一定の条件下で1モルあたりの物質の温度を 1 K 上げるのに必要な熱量を考えます．これは定圧モル比熱 <img src="https://latex.codecogs.com/png.latex?C_p"> と呼び，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_p%20=%20C_v%20+%20%5Cleft%5B%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20V%7D%5Cright)_T%20+%20P%5Cright%5D%5Cfrac%7B1%7D%7Bn%7D%5Cleft(%5Cfrac%7B%5Cpartial%20V%7D%7B%5Cpartial%20T%7D%5Cright)_P%0A"></p>
<p><span class="mini-section">マイヤーの関係式</span></p>
<p>単原子分子理想気体では状態方程式</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BPV%7D%7BT%7D%20=%20nR%0A"></p>
<p>が成立するので</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%5Cfrac%7B%5Cpartial%20V%7D%7B%5Cpartial%20T%7D%5Cright)_P%20=%20n%5Cfrac%7BR%7D%7BP%7D%0A"></p>
<p>また，内部エネルギーも</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AU%20=%20%5Cfrac%7B3%7D%7B2%7DnRT%0A"></p>
<p>であるので <img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%20%5Cleft(%5Cfrac%7B%5Cpartial%20U%7D%7B%5Cpartial%20V%7D%5Cright)_T%20%20=%200"> より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_p%20=%20C_v%20+%20R%0A"></p>
<p>というマイヤーの関係式が得られます．</p>
</section>
</section>
<section id="理解度チェック" class="level2">
<h2 class="anchored" data-anchor-id="理解度チェック">📘 理解度チェック</h2>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> <span class="def-title">センター2016物理追試第５問「ぶら下がるシリンダーと熱力学第１法則」</span></p>
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-12-moles-and-gas-volume/2016quiz.png" class="img-fluid"></p>
<ol type="1">
<li>シリンダーが (a) の状態で静止しているとき，<img src="https://latex.codecogs.com/png.latex?P"> を <img src="https://latex.codecogs.com/png.latex?P_0,%20M,%20g,%20S"> の関数として表せ</li>
<li>シリンダー内の気体を温めると，シリンダーはゆっくり下降し，(b) の状態で静止した．このとき，体積の変化 <img src="https://latex.codecogs.com/png.latex?%5CDelta%20V"> と 内部エネルギー <img src="https://latex.codecogs.com/png.latex?%5CDelta%20U"> は <img src="https://latex.codecogs.com/png.latex?%5CDelta%20T"> の関数としてどのように表せるか？</li>
</ol>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><span class="mini-section">1. シリンダーが (a) の状態で静止しているとき，<img src="https://latex.codecogs.com/png.latex?P"> を <img src="https://latex.codecogs.com/png.latex?P_0,%20M,%20g,%20S"> の関数として表せ</span></p>
<p>下向きの力の一つとして</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%E8%B3%AA%E9%87%8F%7D%20%5Ctimes%20%5Ctext%7B%E5%8A%A0%E9%80%9F%E5%BA%A6%7D%20=%20%5Ctext%7B%E5%8A%9B%7D%0A"></p>
<p>よって, <img src="https://latex.codecogs.com/png.latex?Mg"> という力が下向きに働いています． また，シリンダー内部の圧力 <img src="https://latex.codecogs.com/png.latex?P"> も下向きの力として働くので</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%E4%B8%8B%E5%90%91%E3%81%8D%E3%81%AE%E5%8A%9B%7D%20=%20S%5Ctimes%20P%20+%20Mg%0A"></p>
<p>上向きの力として，<img src="https://latex.codecogs.com/png.latex?P_0%5Ctimes%20S"> があり，初期状態では静止している = 上向きと下向きの力が均衡しているので</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AS%5Ctimes%20P%20+%20Mg%20=%20S%5Ctimes%20P_0%0A"></p>
<p>したがって，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%20=%20P_0%20=%20%5Cfrac%7BMg%7D%7BS%7D%0A"></p>
<p><span class="mini-section">2. シリンダー内の気体を温めると，シリンダーはゆっくり下降し，(b) の状態で静止した．このとき，体積の変化 <img src="https://latex.codecogs.com/png.latex?%5CDelta%20V"> と 内部エネルギー <img src="https://latex.codecogs.com/png.latex?%5CDelta%20U"> は <img src="https://latex.codecogs.com/png.latex?%5CDelta%20T"> の関数としてどのように表せるか？</span></p>
<p>単原子分子理想気体では内部エネルギーは</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AU%20=%20%5Cfrac%7B3%7D%7B2%7DRT%0A"></p>
<p>したがって</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20U%20=%20%5Cfrac%7B3%7D%7B2%7DR%5CDelta%20T%0A"></p>
<p>また，状態変化後も圧力は <img src="https://latex.codecogs.com/png.latex?P"> で同じなので，理想気体の状態方程式より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BV%7D%7BT%7D%20=%20%5Cfrac%7BV%20+%20%5CDelta%20V%7D%7BT%20+%20%5CDelta%20T%7D%0A"></p>
<p>したがって，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20V%20=%20%5Cfrac%7BV%7D%7BT%7D%5CDelta%20T%0A"></p>
</div>
</div>
</div>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 2</strong></span> <span class="def-title">運動エネルギーと温度と圧力</span></p>
<p>密閉された炉に一箇所小さな孔が空いている．</p>
<ul>
<li>孔の厚さは0</li>
<li>炉外の空気は温度が0℃で圧力は100kPa</li>
<li>炉内の空気は温度調整して57℃で一定</li>
<li>空気は理想気体とする</li>
</ul>
<p>十分時間が経った後は圧力が一定になるとして，この定常的な状態での炉内の圧力を求めよ．</p>
<p>ただし，分子の自乗平均速度は平均速度の自乗と一致するとする．</p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>炉内を1，炉外を2とすると，平衡状態では炉外へ出る分子と炉外から入る分子の数が等しいはずなので，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AAv_1N_1t%20=%20Av_2N_2t%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?v_i"> 分子の平均速度</li>
<li><img src="https://latex.codecogs.com/png.latex?A">: 孔の断面積</li>
<li><img src="https://latex.codecogs.com/png.latex?N_i">: 個数密度</li>
<li><img src="https://latex.codecogs.com/png.latex?t">: 単位時間</li>
</ul>
<p>理想気体においては</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B3%7D%7B2%7Dk_BT%20=%20%5Cfrac%7B1%7D%7B2%7Dm%5Coverline%7Bv%5E2%7D%0A"></p>
<p>と温度は自乗平均速度に比例する．また理想気体の状態方程式より，個数密度は圧力 <img src="https://latex.codecogs.com/png.latex?P"> に比例し，温度 <img src="https://latex.codecogs.com/png.latex?T"> に反比例するので</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cfrac%7Bv_1%7D%7Bv_2%7D%20&amp;=%20%5Csqrt%7B%5Cfrac%7BT_1%7D%7BT_2%7D%7D%5C%5C%0A%5Cfrac%7BN_1%7D%7BN_2%7D%20&amp;=%20%5Cfrac%7BP_1%7D%7BP_2%7D%5Cfrac%7BT_2%7D%7BT_1%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>したがって，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0Ap_1%0A%20%20&amp;=%20p_2%5Csqrt%7B%5Cfrac%7BT_1%7D%7BT_2%7D%7D%5C%5C%0A%20%20&amp;=%20100%5Ctext%7BkPa%7D%20%5Ctimes%20%5Csqrt%7B%5Cfrac%7B330.15%7D%7B273.15%7D%7D%5C%5C%0A%20%20&amp;%5Capprox%20110%5Ctext%7BkPa%7D%0A%5Cend%7Balign%7D%0A"></p>
</div>
</div>
</div>


</section>
</div>
</section>

 ]]></description>
  <category>熱力学</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-12-moles-and-gas-volume/</guid>
  <pubDate>Thu, 12 Jun 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>冷凍サイクルとヒートポンプの基礎</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/</link>
  <description><![CDATA[ 






<p><span class="mini-section">Key Takeaways</span></p>
<div class="custom_problem blog-custom-border">
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<ul>
<li>冷凍装置は，蒸発器で周囲から熱を取り入れ，圧縮機で動力を加えて凝縮器で熱を周囲へ排出する装置のこと</li>
<li>冷媒とは，冷凍サイクルの中で熱の輸送に使われる媒体のこと</li>
</ul>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<section id="ものを冷やす仕組み" class="level2">
<h2 class="anchored" data-anchor-id="ものを冷やす仕組み">ものを冷やす仕組み</h2>
<p>熱は常に「<span class="regmonkey-bold">高温から低温へ移動(=熱力学第二法則)</span>」します．この性質を利用して，冷却は次のように行われます：</p>
<ul>
<li>対象物よりも温度の低いものを接触させて熱を移動させる = <span class="regmonkey-bold">熱伝導ベース</span></li>
<li>蒸発や断熱膨張などの物理現象を利用して、周囲から熱を奪う = <span class="regmonkey-bold">相変化ベース</span></li>
</ul>
<p>ものを冷やすのは熱伝導ベースと相変化ベースの２つがありますが，冷却効率は大きく異なります．</p>
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 44%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>顕熱冷却</th>
<th>蒸発冷却</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>熱の種類</td>
<td>顕熱（温度変化）</td>
<td>潜熱（状態変化）</td>
</tr>
<tr class="even">
<td>冷却効率（J/g）</td>
<td>例：1gの水を用いて10℃分熱を吸収する → 約42 J/g吸収</td>
<td>水1gの蒸発 → 約2260 J/g吸収</td>
</tr>
<tr class="odd">
<td>エネルギー吸収</td>
<td>小さい（比熱×温度差に依存）</td>
<td>大きい（潜熱は比熱の数十倍）</td>
</tr>
<tr class="even">
<td>使用例</td>
<td>冷水で冷やす，金属板で放熱など</td>
<td>汗の蒸発，気化式冷却，打ち水</td>
</tr>
</tbody>
</table>
<p>同じ質量の水を使っても，蒸発させた方がはるかに多くの熱エネルギーを奪えるため、冷却効率が高いという特徴が有ります．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
顕熱と比熱と潜熱
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>1kgの冷水が <img src="https://latex.codecogs.com/png.latex?4.1916"> kJ の熱を取り入れると，1Kだけ温度が上昇する．</li>
<li>水を20℃→30℃に温めるときに使う熱は「顕熱」</li>
<li>物質1kgの温度を1K上げるのに必要な熱量は「比熱」</li>
<li>物質が状態変化（固体⇄液体⇄気体）するときに温度を変えずに出入りする熱は「潜熱」</li>
</ul>
</div>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">顕熱</span></p>
<p>比熱 <img src="https://latex.codecogs.com/png.latex?c"> [kJ/kg・K]， 質量 m[kg]，温度 <img src="https://latex.codecogs.com/png.latex?t_1"> [K] の物質が熱を吸収して <img src="https://latex.codecogs.com/png.latex?t_2"> になったとき，吸収した熱量 <img src="https://latex.codecogs.com/png.latex?Q"> [kJ] は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AQ%20=%20m%5Ccdot%20c(t_2%20-%20t_1)%0A"></p>
<p>と計算できます．</p>
</div>
<hr>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">水1gの潜熱</span></p>
<p>水は極性分子で，水素結合が強いため，蒸発に多くのエネルギーが必要という特徴が有ります．</p>
<div id="0adc3847" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./input.csv'</span>)</span>
<span id="cb1-5">temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temp'</span>]</span>
<span id="cb1-6">enthalpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enthalpy'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pa = df['Pa']</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-10">plt.plot(temp, enthalpy)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 軸ラベルとタイトル</span></span>
<span id="cb1-13">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temperature(℃)'</span>)</span>
<span id="cb1-14">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'latent heat(J)'</span>)</span>
<span id="cb1-15">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'temperature vs latent heat plot'</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span>
<span id="cb1-18">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/index_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</div>
<hr>
<section id="以下の低温までものを冷やしたいとき-冷媒の登場" class="level3">
<h3 class="anchored" data-anchor-id="以下の低温までものを冷やしたいとき-冷媒の登場">0℃以下の低温までものを冷やしたいとき → 冷媒の登場</h3>
<p>熱を取り除きたいときは，蒸発潜熱を利用した冷却が効率が良いとわかりましたが，常圧のもとでは水は 100℃で沸騰，蒸発となります(標準沸点が100℃)．一方，絶対圧 0.6108 kPa のような低圧にすれば 0℃で水は沸騰→蒸発しますが，</p>
<ul>
<li>ものを0℃まで冷やしたい場合は，この圧力を保つことが必要 → 高性能な真空ポンプが必要</li>
<li>0℃以下まで冷やしたいとしても，0℃で水は凍ってしまうので，0℃以下の低温を得ることはできない(<span class="regmonkey-bold">熱力学第二法則</span>)</li>
</ul>
<p>0℃以下の低温を得るには，<span class="regmonkey-bold">あまり高真空にすることなく，低い温度で沸騰・蒸発し，しかも蒸発潜熱の大きい物質を媒体として選ば良いとなります． このような熱を取り去る媒体を冷媒といいます．</span></p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1 (冷媒)</strong></span> <br></p>
<p>冷媒（refrigerant）とは，蒸発・凝縮などの相変化を通じて熱を運ぶ物質であり，主に冷凍機やエアコン，ヒートポンプで使われます． 蒸気圧圧縮冷凍装置で用いられる冷媒として，アンモニアやフルオロカーボン(R 134 a, R410 aなど)がある．</p>
</div>
<p><span class="mini-section">冷媒に求められる性質</span></p>
<ul>
<li>毒性及び燃焼性が低く，安全性に優れること</li>
<li>地球環境や周囲環境を破壊しないこと</li>
<li>化学的に安定であること</li>
<li>適切な沸点を持つこと</li>
<li>経済性および入手性に優れること</li>
<li>単位面積あたりの冷凍能力が大きいこと（蒸発潜熱が大きい冷媒を使っていても，熱伝導率が悪かったり，流速が遅いと単位面積あたりの冷凍能力は小さい可能性がある）</li>
<li>理論成績係数が高いこと</li>
<li>圧縮機吐出しガス温度が冷凍機油の使用温度範囲内であること</li>
<li>伝熱特性に優れること</li>
</ul>
</section>
<section id="冷媒の種類" class="level3">
<h3 class="anchored" data-anchor-id="冷媒の種類">冷媒の種類</h3>
<p>蒸気圧縮冷凍装置が出現した初期は，メチルエーテル，エチルエーテル，アンモニア，二酸化硫黄，メチルクロライドなどが冷媒として使用されていましたが，燃焼性や毒性という問題が有りました．</p>
<p>1928年にアメリカで無毒の不燃性のフルオロカーボン冷媒(R12)が発明され，産業用/家庭用の冷蔵庫や冷凍空調装置が普及するようになりました．冷媒は基本的にはフルオロカーボンとその他（自然冷媒）に分類されるほど普及しています．フルオロカーボンは，炭化水素の水素を一部フッ素に置き換えた化合物です．分子構造の特徴によりCFC、HCFC、HFC、HFO等のグループに分けられます．</p>
<p><span class="mini-section">フルオロカーボン冷媒の種類</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>冷媒種類</th>
<th>冷媒番号</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>CFC冷媒</td>
<td>R11, R12</td>
<td>塩素を含むクロロフルオロカーボン冷媒．モントリオール議定書での規制対象．1995年末の段階で日本では全廃されている</td>
</tr>
<tr class="even">
<td>HCFC冷媒</td>
<td>R22, R123</td>
<td>塩素を少量だけ含むハイドロクロロフルオロカーボン冷媒．2020年に日本では全廃</td>
</tr>
<tr class="odd">
<td>HFC冷媒</td>
<td>R32, R125, R134a，R410A</td>
<td>塩素を含まないハイドロフルオロカーボン冷媒．HFC冷媒は，HCFC冷媒と比べると誘電率が大きく，その電気絶縁性がやや劣る（圧縮機からの漏れ電流には注意を要する）</td>
</tr>
</tbody>
</table>
</div>
<div class="nte- callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
塩素とオゾン層破壊
</div>
</div>
<div class="callout-body-container callout-body">
<p>塩素を含むフルオロカーボン冷媒が大気中に放出されると，太陽からの強い紫外線によって分解され塩素 Cl を放出します． これがオゾン <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BO%7D_3"> と以下のような化学反応を行って，オゾンを分解・破壊してしまいます</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7BCl%7D%20+%20%5Ctext%7BO%7D_3%20&amp;%5Cto%20%5Ctext%7BCIO%7D%20+%20%5Ctext%7BO%7D_2%5C%5C%0A%5Ctext%7BClO%7D%20+%20%5Ctext%7BO%7D%20&amp;%5Cto%20%5Ctext%7BCI%7D%20+%20%5Ctext%7BO%7D_2%20%5Ctext%7B(%E5%86%8D%E3%81%B3%E3%82%AA%E3%82%BE%E3%83%B3%E3%82%92%E7%A0%B4%E5%A3%8A%E3%81%97%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86Cl%E3%82%92%E7%94%9F%E6%88%90)%7D%0A%5Cend%7Balign%7D%0A"></p>
</div>
</div>
<p><span class="mini-section">冷媒の番号</span></p>
<p>冷媒番号はアシュレイ番号ともよばれ，冷媒の記号は先頭に「R」をつけて、2～4桁の数字を用いて表します．表記方法はASHRAE規格34及びISO817によって以下のように定められています</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 11%">
<col style="width: 88%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>R</td>
<td>冷媒（Refrigerant）の頭文字</td>
</tr>
<tr class="even">
<td>千の位</td>
<td>不飽和炭化水素に対する不飽和炭素結合の数（二重結合・三重結合など）</td>
</tr>
<tr class="odd">
<td>百の位</td>
<td>炭素原子の数 − 1</td>
</tr>
<tr class="even">
<td>十の位</td>
<td>水素原子の数 ＋ 1</td>
</tr>
<tr class="odd">
<td>一の位</td>
<td>フッ素原子の数</td>
</tr>
<tr class="even">
<td>添え字</td>
<td>構造異性体（同じ組成式だが結合の構造が異なる）または混合物の組成を区別するための記号</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>プロパン冷媒(R290): <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BC%7D_3%5Ctext%7BH%7D_8"></li>
<li>R32: <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BC%7D%5Ctext%7BH%7D_2%5Ctext%7BF%7D_2"></li>
</ul>
<p>ただし，すべてがこのルールにの撮っているわけではなく，400番台は非共沸混合冷媒，500番台は共沸混合冷媒を示します．これらの場合，番号の下２桁はASHRAE規格で認定された冷媒番号の取得順となります．</p>
<p>600番台は有機化合物、700番台は無機化合物を示します．そのため，二酸化炭素やアンモニアなどの無機化合物には700番台が与えられます．例として，Nブタン冷媒R600，アンモニアR717，二酸化炭素R744です．</p>
<div class="nte- callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
共沸混合冷媒と非共沸混合冷媒
</div>
</div>
<div class="callout-body-container callout-body">
<p>フルオロカーボン冷媒の「単一成分冷媒」をいくつか混ぜ合わせた「混合冷媒」があり、混合冷媒は「非共沸点混合冷媒」と「共沸混合冷媒」に分けられます．非共沸混合冷媒は沸点の異なる冷媒同士を混ぜ合わせた冷媒のことです．</p>
<ul>
<li>相変化のとき温度勾配が生じる</li>
<li>露点（凝縮始め）と沸点（凝縮終わり）が一致しない</li>
</ul>
<p>という特徴が有ります．一方，温度勾配を生じないのが「共沸混合冷媒」(R507A)です．温度勾配の小さい「非共沸混合冷媒」は「共沸混合冷媒」に近い凝縮蒸発特性があるので「疑似共沸混合冷媒」(R410A と R404A)とも呼ばれたりします．</p>
</div>
</div>
</section>
<section id="蒸発器凝縮器圧縮機膨張弁" class="level3">
<h3 class="anchored" data-anchor-id="蒸発器凝縮器圧縮機膨張弁">蒸発器・凝縮器・圧縮機・膨張弁</h3>
<div class="columns">
<div class="column" style="width:65%;">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/heat-pump.png" class="img-fluid"></p>
</div><div class="column" style="width:35%;">
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>冷凍装置において，冷媒の蒸発潜熱を利用して物を冷却するには，冷媒と物とを直接接触させずに，冷却館内や容器内で冷媒を沸騰・蒸発させ．その壁（例: 配管壁）を介して冷却します．このような冷却管や容器で構成されたものを<span class="regmonkey-bold">蒸発器</span>といいます．</p>
<p>熱吸収した冷媒蒸気を蒸発器から取り除かなれば，一定の蒸発温度を維持することができなくなってしまいます．そのため発生した冷媒蒸気を蒸発器から常に取り除かなければなりません．熱吸収した冷媒蒸気を捨て去ってもいいですが，経済的ではないのでどうにか再利用する方法を模索する必要が有ります．</p>
</div><p>冷媒が沸騰・蒸発する温度（飽和温度）は圧力が下がるに伴って低下，逆に圧力上がると飽和温度も上昇します．この性質を活用し，蒸発器内で発生した蒸気に対して圧力を加える + 周囲（例: 外気温）から得られる外気や水で冷却（=潜熱を開放）して再び液化します．</p><p>このように冷媒は装置内を蒸発，圧力上昇，液化，膨張，再蒸発といった状態変化を繰り返しながら循環し，目的の冷凍作用を行います． この過程のことを<span class="regmonkey-bold">冷凍サイクル</span>と呼びます．</p>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 15%">
<col style="width: 85%">
</colgroup>
<thead>
<tr class="header">
<th>構成要素</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>蒸発器</td>
<td>低圧の液体冷媒が熱を吸収して蒸発し，周囲から熱を奪うことで冷却を行う熱器</td>
</tr>
<tr class="even">
<td>圧縮機</td>
<td>蒸気が凝縮する圧力まで高めるために用いられる機器．空調機のの消費電力の約８割を占める</td>
</tr>
<tr class="odd">
<td>凝縮器</td>
<td>高圧・高温の冷媒蒸気を冷却し，凝縮させる伝熱管や容器で構成された機器</td>
</tr>
<tr class="even">
<td>膨張弁</td>
<td>圧力が高い凝縮器と圧力が低い蒸発器を結び通路の弁．凝縮した高圧の冷媒液を，低圧の蒸発器で蒸発した量だけ弁を調整して補給することで，蒸発器内を一定の低い圧力に保つ</td>
</tr>
</tbody>
</table>
</div>
<div class="nte- callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
潜熱とウォームコア
</div>
</div>
<div class="callout-body-container callout-body">
<p>気体から液体に戻るとき，潜熱が開放されて周囲を温めます．身の回りの例として，台風の中心には強い上昇気流があり，それによって空気に含まれている水蒸気が上空に運ばれてと飽和し、そこで凝結（雲の状態へ）します．このとき潜熱を放出するので，台風中心の上空の空気は，その周りの平均気温よりも高くなっています．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/warm-core.png" class="img-fluid figure-img"></p>
<figcaption>台風の温度偏差の鉛直断面図</figcaption>
</figure>
</div>
<p>上の図はx軸が台風の中心からの距離，y軸が高度及び気圧を指しています．等高線みたいな線は気候学的な高度別平均気温との差（温度偏差）をplotしています．</p>
</div>
</div>
</section>
</section>
<section id="冷凍装置の効率係数" class="level2">
<h2 class="anchored" data-anchor-id="冷凍装置の効率係数">冷凍装置の効率係数</h2>
<p><span class="mini-section">圧縮機の仕事量</span></p>
<p>圧縮機に流出入する冷媒1kgが保有するエネルギーは，運動エネルギーや位置エネルギーが十分小さく無視できるとすると以下のように表せます</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderbrace%7Bh%7D_%7B%5Ctext%7B%E6%AF%94%E3%82%A8%E3%83%B3%E3%82%BF%E3%83%AB%E3%83%94%E3%83%BC%7D%7D%20=%20%5Cunderbrace%7Bu%7D_%7B%5Ctext%7B%E5%86%85%E9%83%A8%E3%82%A8%E3%83%8D%E3%83%AB%E3%82%AE%E3%83%BC%7D%7D%20+%20%5Cunderbrace%7Bp%5Cnu%7D_%7B%5Ctext%7B%E5%86%B7%E5%AA%92%E6%B5%81%E5%8B%95%E3%81%AE%E4%BB%95%E4%BA%8B%7D%7D%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?h">: 流動する冷媒の保有エネルギー [kJ/kg]</li>
<li><img src="https://latex.codecogs.com/png.latex?p">: 圧力</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cnu">: 比体積(冷媒蒸気1kgの体積) [<img src="https://latex.codecogs.com/png.latex?m%5E3">/kg]</li>
</ul>
<p>したがって，以下のように変数を整理すると</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?q_m"> [kg/s] : 圧縮機に単位時間に流出入する冷媒流量</li>
<li><img src="https://latex.codecogs.com/png.latex?h_1">: 圧縮機入口の冷媒の比エンタルピー</li>
<li><img src="https://latex.codecogs.com/png.latex?h_2">: 圧縮機出口の冷媒の比エンタルピー</li>
</ul>
<p>圧縮機によって冷媒に加えられる単位時間あたりの圧縮仕事 <img src="https://latex.codecogs.com/png.latex?P"> [kW] は以下のように表すことができます</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%20=%20q_m(h_2%20-%20h_1)%0A"></p>
<p><span class="mini-section">蒸発器の熱交換量</span></p>
<p>蒸発器においては，冷媒は熱を組み上げ，その量だけ保有エネルギーが増大します．冷媒 1kg あたりが組み上げる熱量(冷凍効果)[kJ/kg]を <img src="https://latex.codecogs.com/png.latex?r"> とすると</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?h_1">: 蒸発器出口の冷媒の比エンタルピー</li>
<li><img src="https://latex.codecogs.com/png.latex?h_6">: 入口の比エンタルピー</li>
</ul>
<p>を用いて，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ar%20=%20h_1%20-%20h_6%0A"></p>
<p>また，単位時間あたりの交換熱量 <img src="https://latex.codecogs.com/png.latex?%5CPhi_o"> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CPhi_o%20=%20q_m(h_6%20-%20h_1)%0A"></p>
<p>つまり，冷凍装置の冷凍能力は，蒸発器出入り口における冷媒の比エンタルピー差に冷媒循環量を乗じて求められることになります．</p>
<p><span class="mini-section">凝縮器の熱交換量</span></p>
<p>凝縮器では冷媒は熱放出し，その単位時間あたりの放出熱量 <img src="https://latex.codecogs.com/png.latex?%5CPhi_k"> [kW] を凝縮負荷と呼びます．</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?h_2">: 凝縮器入口の冷媒比エンタルピー</li>
<li><img src="https://latex.codecogs.com/png.latex?h_5">: 凝縮器出口の冷媒比エンタルピー</li>
</ul>
<p>より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CPhi_k%20=%20q_m(h_2%20-%20h_5)%0A"></p>
<div class="nte- callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
膨張弁
</div>
</div>
<div class="callout-body-container callout-body">
<p>膨張弁では基本的に外部と熱交換を行いません．高圧・高温の液冷媒を断熱膨張を通して低圧・低温の液冷媒に変えるのが主な機能です． 冷媒液が圧力降下するときに，液の一部が自己蒸発する際の潜熱によって，冷媒自身の温度が下がります．</p>
</div>
</div>
<section id="熱力学第一法則エネルギー保存則" class="level3">
<h3 class="anchored" data-anchor-id="熱力学第一法則エネルギー保存則">熱力学第一法則(エネルギー保存則)</h3>
<p>単位時間あたりに冷凍装置に入るすべてのエネルギーは，単位時間あたりに装置から出るすべてのエネルギーと等しくなければなりません．ここから次の式が成立します:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CPhi_k%20=%20%5CPhi_o%20+%20P%0A"></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/heat-balance.png" class="img-fluid figure-img"></p>
<figcaption>蒸気圧圧縮式冷凍装置の熱収支</figcaption>
</figure>
</div>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2 (冷凍サイクルの成績係数)</strong></span> <br></p>
<p>冷凍作用を行うのに必要なエネルギー <img src="https://latex.codecogs.com/png.latex?P"> と冷凍能力 <img src="https://latex.codecogs.com/png.latex?%5CPhi_o"> の比を冷凍サイクルの成績係数(<img src="https://latex.codecogs.com/png.latex?COP_c">)といい</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ACOP_c%20=%20%5Cfrac%7B%5CPhi_o%7D%7BP%7D%0A"></p>
<p>この値は同じ冷凍装置であっても，運転条件によって変わる．</p>
</div>
<p>冷凍サイクルの成績係数が大きいほど小さい動力で大きな冷凍能力が得られると解釈できます．</p>
<div class="nte- callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
実際の機器における圧縮機仕事
</div>
</div>
<div class="callout-body-container callout-body">
<p>実際の圧縮機では，</p>
<ul>
<li>吸い込み弁と吐出し便の流れの抵抗</li>
<li>吸い込み蒸気とシリンダ壁との間の熱交換</li>
<li>蒸発器直後の連絡配管圧力損失</li>
<li>機械的摩擦損失動力</li>
</ul>
<p>といった要因により理論断熱圧縮動力以上の圧縮動力を必要とします．つまり</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%20=%20P_c%20+%20P_m%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P">: 実際の圧縮機の駆動に必要な動力</li>
<li><img src="https://latex.codecogs.com/png.latex?P_c">: 蒸気の圧縮に用いられる圧縮動力</li>
<li><img src="https://latex.codecogs.com/png.latex?P_m">: 機械的摩擦損失動力の和</li>
</ul>
<p>一般に機械効率 <img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7BP_c%7D%7BP%7D"> は0.8~0.9 とされます．</p>
</div>
</div>
</section>
<section id="ヒートポンプ" class="level3">
<h3 class="anchored" data-anchor-id="ヒートポンプ">ヒートポンプ</h3>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3 (ヒートポンプ)</strong></span> <br></p>
<p>冷媒を凝縮するために凝縮器で熱量 <img src="https://latex.codecogs.com/png.latex?%5CPhi_k"> を放熱しているが，これを暖房やその他の加熱源として利用する装置をヒートポンプ装置と呼び，そのサイクルをヒートポンプサイクルという．</p>
</div>
<p>「冷媒の流れ方向自体は同じだが，吸熱と放熱の役割が冷凍機と逆になる．つまり，蒸発器で吸収した熱を暖房として利用するのがヒートポンプである」点に注意してください．</p>
<p>ヒートポンプサイクルの成績係数 <img src="https://latex.codecogs.com/png.latex?COP_h"> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0ACOP_h%0A%20%20&amp;=%20%5Cfrac%7B%5CPhi_k%7D%7BP%7D%5C%5C%0A%20%20&amp;=%20%5Cfrac%7B%5CPhi_o%20+%20P%7D%7BP%7D%5C%5C%0A%20%20&amp;=%20COP_c%20+%201%0A%5Cend%7Balign%7D%0A"></p>
<p>この式より，ヒートポンプサイクルの成績係数は，同じ温度条件の冷凍サイクルの成績係数よりも１だけかならず大きい値になることがわかります．</p>
</section>
</section>
<section id="理解度チェック問題" class="level2">
<h2 class="anchored" data-anchor-id="理解度チェック問題">📘 理解度チェック問題</h2>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> <br></p>
<p>容器に入った20℃の水8kgに，0℃の氷3.0kgを入れて放置した．容器は断熱されており，熱容量は無視できるとして，平衡状態の容器内の温度と容器内の氷の質量を求めよ．水の比熱を4.19kJ/(kg·K)，氷の融解潜熱を334kJ/kgとする．</p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-7-contents" aria-controls="callout-7" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-7" class="callout-7-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><span class="mini-section">条件</span></p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>値</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>水の質量</td>
<td><img src="https://latex.codecogs.com/png.latex?8.0%20%5C,%20%5Ctext%7Bkg%7D"></td>
</tr>
<tr class="even">
<td>水の初温</td>
<td><img src="https://latex.codecogs.com/png.latex?20%5E%5Ccirc%5Ctext%7BC%7D"></td>
</tr>
<tr class="odd">
<td>氷の質量</td>
<td><img src="https://latex.codecogs.com/png.latex?3.0%20%5C,%20%5Ctext%7Bkg%7D"></td>
</tr>
<tr class="even">
<td>氷の初温</td>
<td><img src="https://latex.codecogs.com/png.latex?0%5E%5Ccirc%5Ctext%7BC%7D"></td>
</tr>
<tr class="odd">
<td>水の比熱</td>
<td><img src="https://latex.codecogs.com/png.latex?4.19%20%5C,%20%5Ctext%7BkJ/(kg%C2%B7K)%7D"></td>
</tr>
<tr class="even">
<td>氷の融解熱</td>
<td><img src="https://latex.codecogs.com/png.latex?334%20%5C,%20%5Ctext%7BkJ/kg%7D"></td>
</tr>
</tbody>
</table>
<p><span class="mini-section">水を0℃まで冷やすのに必要な熱量の計算</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AQ_%7Bwater%7D%0A%20%20&amp;=%20(20%20-%200)%20%5Ctext%7BK%7D%20%5Ctimes%204.19%20%5Ctext%7BkJ/kg%C2%B7K%7D%20%5Ctimes%208%20%5Ctext%7Bkg%7D%5C%5C%0A%20%20&amp;=%20670.4%5Ctext%7BkJ%7D%0A%5Cend%7Balign%7D%0A"></p>
<p><span class="mini-section">氷が全て溶けるのに必要な熱量</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AQ_%7Bice%7D%0A%20%20&amp;=%20334%5Ctext%7BkJ/kg%7D%20%5Ctimes%203.0%5Ctext%7Bkg%7D%5C%5C%0A%20%20&amp;=%201002%5Ctext%7BkJ%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>then, <img src="https://latex.codecogs.com/png.latex?Q_%7Bice%7D%20%3E%20Q_%7Bwater%7D"> のため，氷がすべて溶け切ることはないことがわかります．</p>
<p><span class="mini-section">どれくらいの氷が残るのか？</span></p>
<p>水を0℃まで冷やすのに使用される氷の質量は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BQ_%7Bwater%7D%7D%7B%5Ctext%7B%E6%B0%B7%E3%81%AE%E8%9E%8D%E8%A7%A3%E7%86%B1%7D%7D%20=%20%5Cfrac%7B670.4%5Ctext%7BkJ%7D%7D%7B334%5Ctext%7BkJ/kg%7D%7D%20%5Capprox%202.007%5Ctext%7Bkg%7D%0A"></p>
<p>したがって，平衡状態の容器内の温度と容器内の氷の質量は温度＝0℃，氷の質量＝0.993kgとなる．</p>
</div>
</div>
</div>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 2</strong></span> <br></p>
<p>次の記述の内，正しいものを選べ</p>
<ol type="a">
<li>冷凍装置では，蒸発器で取り入れた熱と凝縮器で放出する熱量は等しい</li>
<li>蒸気圧縮冷凍装置の冷却能力は，圧縮機に加えるエネルギーに等しい</li>
<li>吸収冷凍装置の駆動源は熱であり，これを再生器に加えることにより低温を得る</li>
<li>蒸気圧縮ヒートポンプでは，装置内を循環する冷媒の流れ方向が冷凍サイクルのそれと逆方向になる</li>
<li>蒸気圧縮ヒートポンプの成績係数は，同じ温度条件での冷凍サイクルの成績係数より１だけ大きい．</li>
<li>冷凍サイクルの成績係数は，蒸発温度や凝縮温度には関係しない</li>
<li>ヒートポンプの成績係数の値は常に1より大きい</li>
<li>冷凍装置における冷凍能力は，各機器への熱の出入り前後の比エンタルピーがわかれば計算できる</li>
<li>吸収冷凍機では，圧縮機を使用せずに，吸収器・発生器(再生器)・溶液ポンプなどを用いて冷媒を循環させ，冷熱を得る</li>
<li>蒸発温度と凝縮温度などの運転条件が同じでも，理論冷凍サイクルCOPに比べ，実際の装置におけるCOPは小さくなる</li>
<li>理論ヒートポンプサイクルでは，圧縮機で理論断熱圧縮動力を消費して，この圧縮動力に相当する熱と，蒸発器で取り入れた熱が冷媒に加わって凝縮負荷となり，凝縮器から放出される熱を利用する</li>
</ol>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-8-contents" aria-controls="callout-8" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-8" class="callout-8-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>c, e, g, i, j, k, l</p>
</div>
</div>
</div>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 3</strong></span> <span class="def-title">圧縮機について</span></p>
<p>次の記述の内，正しいものを選べ</p>
<ol type="a">
<li>二段圧縮冷凍装置は，一般に，低段圧縮機から出た冷媒ガスを一度冷却しているので，高段圧縮機の吐出しガスの温度が高くならないこと，また，圧縮機の損失を減らすことができ，圧縮機効率の低下を防ぐことができる．</li>
<li>理論断熱圧縮動力が同じ場合，圧縮機の全断熱効率が大きくなると，実際の圧縮機の駆動軸動力は小さくなる</li>
</ol>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-9-contents" aria-controls="callout-9" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-9" class="callout-9-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>a, b</p>
</div>
</div>
</div>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 4</strong></span> <br></p>
<p>次の記述のうち，冷媒について正しいものを選べ</p>
<ol type="a">
<li>冷媒の蒸発潜熱は冷媒の種類関係なく一定である</li>
<li>同じ温度のもとでは，標準沸点の低い冷媒ほど圧力は高くなる</li>
<li>蒸気圧縮冷凍装置では，冷媒の蒸発の潜熱を利用して冷却作用を行う</li>
<li>R 404A は共沸混合冷媒である</li>
<li>一般に，HFC冷媒は，HCFC冷媒と比べると誘電率が大きく，その電気絶縁性がやや劣る</li>
<li>一般に，アンモニア冷媒液は冷凍機油より比重が小さく，フルオロカーボン冷媒液は冷凍機油よりも比重が大きい</li>
</ol>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-10-contents" aria-controls="callout-10" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-10" class="callout-10-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>b, c, e, f</p>
</div>
</div>
</div>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 5</strong></span> <br></p>
<p>冷凍能力 4.5 kWの冷凍装置があり，圧縮機の消費動力は 1.5 kWである．この装置の凝縮器で放出される熱量 [kW] はいくらか．また，この装置の冷凍サイクル成績係数はいくらか？</p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-11-contents" aria-controls="callout-11" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Solution
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-11" class="callout-11-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>凝縮器で放出される熱量(凝縮負荷) <img src="https://latex.codecogs.com/png.latex?%5CPhi_k"> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CPhi_k%20=%204.5%20%5Ctext%7BkW%7D%20%20+%201.5%20%5Ctext%7BkW%7D=%206%20%5Ctext%7BkW%7D%0A"></p>
<p>成績係数 <img src="https://latex.codecogs.com/png.latex?COP_c"> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ACOP_c%20=%20%5Cfrac%7B4.5%20%5Ctext%7BkW%7D%7D%7B1.5%20%5Ctext%7BkW%7D%7D%20=%203%0A"></p>
</div>
</div>
</div>
</section>
<section id="appendix-数値目安" class="level2">
<h2 class="anchored" data-anchor-id="appendix-数値目安">Appendix: 数値目安</h2>
<div id="dbddbe07" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read data</span></span>
<span id="cb2-6">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./r134_property.csv"</span>)</span>
<span id="cb2-7">enthalpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'steam_enthalpy'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'liquid_enthalpy'</span>]</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot temperature and pressure(mPa)</span></span>
<span id="cb2-10">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set plot background color</span></span>
<span id="cb2-13">fig.patch.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#EFF5F5'</span>)</span>
<span id="cb2-14">fig.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R-134a Temperature vs Vapor Pressure'</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overall title</span></span>
<span id="cb2-15"></span>
<span id="cb2-16">ax1.plot(</span>
<span id="cb2-17">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>],    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X-axis: Vapor Pressure</span></span>
<span id="cb2-18">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mpa"</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y-axis: Temperature</span></span>
<span id="cb2-19">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,</span>
<span id="cb2-20">    linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'solid'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equivalent to 'dot' dash in Plotly</span></span>
<span id="cb2-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># marker='o',    # Add markers</span></span>
<span id="cb2-22">    markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust marker size as desired</span></span>
<span id="cb2-23">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R-134a Vapor Pressure'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional: Add a label for legend</span></span>
<span id="cb2-24">)</span>
<span id="cb2-25"></span>
<span id="cb2-26">ax2.plot(</span>
<span id="cb2-27">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>],    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X-axis: Vapor Pressure</span></span>
<span id="cb2-28">    enthalpy,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y-axis: kj/kg</span></span>
<span id="cb2-29">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,</span>
<span id="cb2-30">    linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'solid'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equivalent to 'dot' dash in Plotly</span></span>
<span id="cb2-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># marker='o',    # Add markers</span></span>
<span id="cb2-32">    markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust marker size as desired</span></span>
<span id="cb2-33">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R-134a Vapor Pressure'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional: Add a label for legend</span></span>
<span id="cb2-34">)</span>
<span id="cb2-35"></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set axis 1 titles</span></span>
<span id="cb2-37">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R-134a Temperature vs. Vapor Pressure"</span>)</span>
<span id="cb2-38">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°C)"</span>)</span>
<span id="cb2-39">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vapor Pressure (Mpa)"</span>)</span>
<span id="cb2-40">ax1.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, which<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'both'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#DDEEEF'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-41">ax1.set_axisbelow(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-42"></span>
<span id="cb2-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set axis 2 titles</span></span>
<span id="cb2-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ax2.set_yscale('log')</span></span>
<span id="cb2-45">ax2.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, which<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'both'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#DDEEEF'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-46">ax2.set_axisbelow(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-47">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°C)"</span>)</span>
<span id="cb2-48">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent heat(kJ/kg)"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Indicate log scale in label</span></span>
<span id="cb2-49">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature vs Latent heat"</span>)</span>
<span id="cb2-50"></span>
<span id="cb2-51"></span>
<span id="cb2-52">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/index_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="./CR06108JE6034.pdf">うるるとさらら Rシリーズカタログ</a></li>
<li><a href="../2025-06-13-heat-and-work/index.html">熱力学第1法則と第2法則</a></li>
</ul>


</section>

 ]]></description>
  <category>熱力学</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-06-11-heatpump-lecture-01/</guid>
  <pubDate>Wed, 11 Jun 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>ドキュメントの書き方</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-30-how-to-write-document/</link>
  <description><![CDATA[ 






<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
この記事のスコープ
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>ドキュメントを書くにあたっての基本ルールの紹介</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
想定知識
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://ryonakagami.github.io/regmonkey-presentation/posts/2025-05-07-how-to-write-slide/#/title-slide">構造化されたストーリーとしてのスライド</a>について一読している</li>
</ul>
</div>
</div>
<section id="ドキュメントに何を書くかwhat" class="level2">
<h2 class="anchored" data-anchor-id="ドキュメントに何を書くかwhat">ドキュメントに何を書くか？(What)</h2>
<p>ドキュメントとは<span class="regmonkey-bold">「ある情報を、ある対象に伝える」ための手段</span>です．ドキュメントを書くにあたって事前に</p>
<ul>
<li><span class="regmonkey-bold">「誰に」対して</span></li>
<li><span class="regmonkey-bold">「何を」伝えるか</span></li>
</ul>
<p>を明確化し，その目的に応じて構成や表現を設計することが重要です．</p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <strong>: ドキュメント種類別の読み手と目的整理表</strong></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 35%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>ドキュメント種類</th>
<th>誰に</th>
<th>何を</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>企画書</td>
<td>経営層・チームマネジャー・開発メンバー</td>
<td>PJの目的・スコープ・予算・スケジュール</td>
</tr>
<tr class="even">
<td>要件定義書</td>
<td>エンジニア</td>
<td>システムの機能要件・非機能要件</td>
</tr>
<tr class="odd">
<td>基本設計書</td>
<td>エンジニア</td>
<td>システムの動作仕様・インターフェース仕様</td>
</tr>
<tr class="even">
<td>詳細設計</td>
<td>エンジニア</td>
<td>ソフトウェアの内部構造・モジュール感のインターフェース・データ構造</td>
</tr>
<tr class="odd">
<td>テスト仕様書</td>
<td>プロダクトマネジャー・エンジニア</td>
<td>テスト項目・テストデータ・テスト結果</td>
</tr>
<tr class="even">
<td>ユーザーマニュアル</td>
<td>ユーザー</td>
<td>機能の説明・利用目的・操作方法</td>
</tr>
<tr class="odd">
<td>管理・保守マニュアル</td>
<td>システム管理者</td>
<td>管理や保守に関する機能の説明・利用目的・操作方法</td>
</tr>
<tr class="even">
<td>リリースノート</td>
<td>ユーザー・システム管理者</td>
<td>プロダクトのアップデートに伴う変更点</td>
</tr>
</tbody>
</table>
</div>
</div>
<section id="読み手の定義" class="level3">
<h3 class="anchored" data-anchor-id="読み手の定義">読み手の定義</h3>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<p><span class="mini-section">ルール</span></p>
<p><span class="regmonkey-bold">「誰に」対して</span>を特定する際，以下の３つを明確化することが有用です：</p>
<ol type="1">
<li>読み手の目的・ニーズ</li>
<li>読み手の知識レベル</li>
<li>読み手の立場</li>
</ol>
<p><span class="mini-section">説明</span></p>
<div class="tips-block-small">
<p>目的が違えば、必要な情報・深さ・順序が変わる</p>
</div>
<ul>
<li>意思決定者 → 意思決定や承認に足る根拠がほしい → 結論とインパクト重視</li>
<li>現場担当者 → どう使うか／どう実装するかの具体的な手順を知りたい → 詳細手順や実装方法が重要</li>
</ul>
<div class="tips-block-small">
<p>知識レベルが違えば 説明の粒度・用語の選び方・例の使い方が変わる</p>
</div>
<ul>
<li>初心者 → 用語の定義や背景から丁寧に</li>
<li>専門家 → 論点にフォーカスし冗長さを排除</li>
</ul>
<div class="tips-block-small">
<p>同じ事実でも、立場によって関心ポイントが異なる</p>
</div>
<ul>
<li>営業 → 顧客影響やKPIに注目</li>
<li>エンジニア → 技術的妥当性や仕組みが重要</li>
</ul>
<p><span class="mini-section">例: ユーザーマニュアルと開発者マニュアルのアウトラインの差異</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>種類</th>
<th>アウトライン構成方針</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ユーザーマニュアル</td>
<td>ユーザーが操作する順番</td>
<td>初期設定 → ログイン → 基本操作 → 応用操作 → トラブル対応</td>
</tr>
<tr class="even">
<td>開発者マニュアル</td>
<td>開発者が開発する順番</td>
<td>環境構築 → モジュール設計 → API定義 → データ構造 → エラーハンドリング</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">アンチパターンと改善例</span></p>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
アンチパターン: 読み手の定義がぼやけている
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>プロダクトのユーザーに，プロダクトの使い方を伝える</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-tip no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
改善例:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>プロダクトを新規導入するシステム管理者に，プロダクトの導入手順を伝える</li>
<li>プロダクトの利用中にエラーに遭遇したユーザーに，エラーの原因と対処方法を伝える</li>
</ul>
</div>
</div>
</section>
</section>
<section id="どのようにドキュメントを書くかhow" class="level2">
<h2 class="anchored" data-anchor-id="どのようにドキュメントを書くかhow">どのようにドキュメントを書くか？(How)</h2>
<p>良いドキュメントを書くためには、次の３点を押さえる必要があります：</p>
<ul>
<li><span class="regmonkey-bold">Effectiveness</span>; 必要な情報を正しく伝えられる, 合目的的であること</li>
<li><span class="regmonkey-bold">Efficiency</span>: 効率よく内容が理解できる, readability</li>
<li><span class="regmonkey-bold">Satisfaction</span>: 読み手に対する配慮があること</li>
</ul>
<div class="tips-block">
<p>Effectiveness</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>書き表された情報が読み手に一意に伝わること</li>
<li>書き表された情報がドキュメントの目的と合致していること</li>
</ul>
<p><span class="mini-section">アクション</span></p>
<div style="padding-left:1em">
<ul class="task-list">
<li><label><input type="checkbox">メインメッセージの構成要素が漏れなく分解されている</label></li>
<li><label><input type="checkbox">曖昧さを廃し，明確な文章で書く</label></li>
<li><label><input type="checkbox">誤解なく読める文章で書く</label></li>
<li><label><input type="checkbox">できるだけ具体的に書く</label></li>
</ul>
</div>
</div>
<div class="tips-block">
<p>Efficiency</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>効率よく内容が理解できること</li>
<li>読み手は流し読みする傾向があるので，流し読みでも情報が伝わるように構成立てること</li>
</ul>
<p><span class="mini-section">アクション</span></p>
<div style="padding-left:1em">
<ul class="task-list">
<li><label><input type="checkbox">要点を先に伝える(<strong>MMUF, Main Message Up-Front</strong>)</label></li>
<li><label><input type="checkbox">話の流れを整理し，どこに何が書いてあるかわかりやすくする(=<strong>アウトライン設計</strong>)</label>
<ul>
<li>ドキュメントを書く前に事前にアウトライン設計（どこに何を書くのか）</li>
<li>文章ブロックに対して，書かれている内容を端的に表す見出しを付ける</li>
<li>one heading, one message</li>
</ul></li>
<li><label><input type="checkbox">必要な情報だけに絞り，簡潔で読みやすい文章にする</label></li>
</ul>
</div>
</div>
<div class="tips-block">
<p>Satisfaction</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>読み手が「読んでよかった」「わかりやすかった」と感じられること</li>
<li>ストレスなく読める体験が提供されていること</li>
</ul>
<p><span class="mini-section">アクション</span></p>
<div style="padding-left:1em">
<ul class="task-list">
<li><label><input type="checkbox">読み手の立場・前提知識・目的を想定して内容や語り口を調整する</label></li>
<li><label><input type="checkbox">図表・余白・見出しなどで視認性を高める</label></li>
<li><label><input type="checkbox">論理の正確さだけでなく、文の印象・ニュアンスにも気を配る</label></li>
</ul>
</div>
</div>
<section id="わかりやすい文の書き方" class="level3">
<h3 class="anchored" data-anchor-id="わかりやすい文の書き方">わかりやすい文の書き方</h3>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
文を書き始めるのはアウトライン設計後
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>文章はすぐに書き始めるのではなく，まず「構造」＝アウトラインを先に設計する</li>
</ul>
</div>
</div>
<p>わかりやすい文を書くにあたって，次の4点を抑える必要があります</p>
<ul>
<li><span class="regmonkey-bold">係り受けを明確にする</span></li>
<li><span class="regmonkey-bold">並列関係を明確にする</span></li>
<li><span class="regmonkey-bold">順序関係を明確にする</span></li>
<li><span class="regmonkey-bold">「の」は一つの文に２つまでに留める</span></li>
</ul>
<div class="tips-block">
<p>係り受けを明確にする</p>
</div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>誤解を招く文の原因の一つが，係り受けの曖昧さ</li>
<li>係り受けはできる限り近い位置に配置するべき</li>
</ul>
<p><span class="mini-section">例</span></p>
<ul>
<li>❌ 簡単なチャットアプリの作り方</li>
<li>👍 チャットアプリの簡単な作り方</li>
</ul>
</div>
<div class="tips-block">
<p>並列関係を明確にする</p>
</div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>並列する要素（AとB、～や～など）は、文法的・意味的に対等な構造で書く必要がある</li>
<li>並列構造が乱れると、何が並列なのか、読み手が混乱する</li>
</ul>
<p><span class="mini-section">例</span></p>
<ul>
<li>❌ このツールは、設定の保存、読み込み、そしてファイルの圧縮ができます</li>
<li>👍 このツールは、設定の保存・読み込み、ファイルの圧縮ができます</li>
</ul>
</div>
<div class="tips-block">
<p>順序関係を明確にする</p>
</div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>複数の出来事や手順がある場合は、どの順で発生・実行されるかを明確にすることが重要</li>
<li>順序が不明瞭だと、因果関係や手順が誤解されやすくなる</li>
</ul>
<p><span class="mini-section">例</span></p>
<ul>
<li>❌ 入力が完了したら、ファイルを保存し、名前を入力してください</li>
<li>👍 入力が完了したら、名前を入力し、その後でファイルを保存してください</li>
</ul>
</div>
<div class="tips-block">
<p>「の」は一つの文に２つまでに留める</p>
</div>
<div style="padding-left:1em">
<p><span class="mini-section">説明</span></p>
<ul>
<li>「の」を多用すると、文の構造が複雑になり、意味があいまいになる</li>
<li>そのため、一文に「の」は2つまでに抑えるのが、読みやすさの目安。</li>
</ul>
<p><span class="mini-section">例</span></p>
<ul>
<li>❌ データ処理の高速化のためのアルゴリズムの最適化手法の調査</li>
<li>👍 データ処理を高速化するための、アルゴリズム最適化手法の調査</li>
<li>👍 アルゴリズム最適化手法について、データ処理を高速化する観点から調査した</li>
</ul>
</div>
</section>
</section>
<section id="アンチパターンと発生原因" class="level2">
<h2 class="anchored" data-anchor-id="アンチパターンと発生原因">アンチパターンと発生原因</h2>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem 1: なにを書いていいかわからない
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<div style="padding-left:1em;">
<ul class="task-list">
<li><label><input type="checkbox">ドキュメントの目的がわかっていない</label></li>
<li><label><input type="checkbox">ドキュメントの目的から導き出されるテーマについて，その構成要素を分解できていない</label></li>
</ul>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem 2: あれもこれもと，情報詰め込んでしまう
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<div style="padding-left:1em;">
<ul class="task-list">
<li><label><input type="checkbox">読み手とテーマが明確に定義されていない</label></li>
</ul>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem 3: 自分で説明するとき，何故か説明しづらい
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<div style="padding-left:1em;">
<ul class="task-list">
<li><label><input type="checkbox">ドキュメントの目的に対して，テーマが十分分解されていない</label></li>
<li><label><input type="checkbox">分解されたテーマの配置が不自然な流れになっている</label>
<ul>
<li>headingsとkey takeawaysだけ読んでみたとき，目が止まってしまう or 順番が飛んでしまう</li>
</ul></li>
</ul>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem 4: 何が言いたいかわからないheadingsがある
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<div style="padding-left:1em;">
<ul class="task-list">
<li><label><input type="checkbox">key takeawaysが定義されていない</label></li>
<li><label><input type="checkbox">MMUFの構成になっていない</label></li>
</ul>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem 5: 作成したユーザーマニュアルが読みづらいと言われた
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
<div style="padding-left:1em;">
<ul class="task-list">
<li><label><input type="checkbox">各見出しにおける想定ユーザーが明確に定義されていない</label></li>
<li><label><input type="checkbox">想定ユーザーについて，書き手が仮定した読み手知識レベルが対応していない</label></li>
<li><label><input type="checkbox">読み手を主語にした文となっていない</label>
<ul>
<li>ユーザーマニュアルは読者の立場に立った指示やガイドを提供するべき</li>
</ul></li>
</ul>
</div>
</section>
<section id="appendix-パラグラフと段落の違い" class="level2">
<h2 class="anchored" data-anchor-id="appendix-パラグラフと段落の違い">Appendix: パラグラフと段落の違い</h2>
<p>「パラグラフ」と「段落」は、日常的には同じ意味で使われることも多いですが、ドキュメント作成の文脈では以下のような差異が有ります:</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>用語</th>
<th>視点</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>段落</td>
<td>見た目</td>
<td>改行による文章の区切り<br>何を１段落にまとめるかの自由度が高い</td>
</tr>
<tr class="even">
<td>パラグラフ</td>
<td>意味</td>
<td>1つの主張を持った論理的な文の集まり<br>1 paragraph 1 topic</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">Pragraphの構成</span></p>
<p>1つのパラグラフは、原則として以下のような構造で成り立っています：</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>構成要素</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>topic sentence</td>
<td>パラグラフの最初に置かれ、その段落で述べたい中心的な主張やポイントを示す</td>
</tr>
<tr class="even">
<td>support sentence</td>
<td>「なぜそう言えるのか？」「どんな意味があるのか？」を展開する</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://ryonakagami.github.io/regmonkey-presentation/posts/2025-05-07-how-to-write-slide/#/title-slide">構造化されたストーリーとしてのスライド</a></li>
</ul>


</section>

 ]]></description>
  <category>方法論</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-30-how-to-write-document/</guid>
  <pubDate>Fri, 30 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>wikiにどのような情報をどのように残すか？</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-23-what-to-write-in-wiki/</link>
  <description><![CDATA[ 






<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Key Takeaways
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<ul>
<li>Wiki は，みんなが自由に編集できる Web サイト</li>
<li>書かないよりかは書く！</li>
<li>慣れてきたら，ストック情報を意識して何をWikiに記載すべきか判断する</li>
<li>メタデータ（タイトル，作成者，更新日，タグ，関連資料など）を活用することで，情報の検索性・管理性・再利用性が向上する</li>
</ul>
</div>
</div>
</div>
<section id="projectと情報共有の課題" class="level2">
<h2 class="anchored" data-anchor-id="projectと情報共有の課題">1. Projectと情報共有の課題</h2>
<p>仕事の中で情報共有の課題はしばしば発生します．その発生の仕方は以下の２つが代表例としてあります．</p>
<p><span class="mini-section">課題1：必要な情報が共有されていない</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 65%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th>事象</th>
<th>問題分類</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>退職・異動時に「前任者しか知らないこと」が多く，後任が混乱</td>
<td>属人化問題</td>
</tr>
<tr class="even">
<td>同じ業務でも人によってやり方がバラバラ（手順の標準化がされていない）</td>
<td>ナレッジの一元化できてない問題</td>
</tr>
<tr class="odd">
<td>毎回「この件ってどうやるんでしたっけ？」という質問が発生する</td>
<td>非効率なコミュニケーション</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">課題2：必要な情報を見つけるのが難しい</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 65%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th>事象</th>
<th>問題分類</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>手順書は共有フォルダ，仕様はメール，背景はSlack…とバラバラ</td>
<td>情報の散逸問題</td>
</tr>
<tr class="even">
<td>検索しても古いバージョンや関係ない資料が出てきて混乱</td>
<td>情報の最新化・正確性問題</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="projectにおけるwiki" class="level2">
<h2 class="anchored" data-anchor-id="projectにおけるwiki">2. ProjectにおけるWiki</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <strong>Wiki</strong> <br></p>
<p>プロジェクトやチームの知識・ノウハウ・手順・ルールなどを，誰でも編集・追加できる形で蓄積・共有するためのドキュメントシステムのことをWikiと呼ぶ．</p>
</div>
<p>Wikiは，単なるメモやドキュメントの集積ではなく，以下のような効果を持ったプロジェクトの「知識のインフラ」として機能します．</p>
<ul>
<li><span class="regmonkey-bold">ナレッジの一元化</span></li>
<li><span class="regmonkey-bold">属人化の防止</span></li>
<li><span class="regmonkey-bold">コミュニケーションの効率化</span></li>
</ul>
<div class="reveal_vspace" style="--vspace-height: 1.5em;"></div>
<div class="tips-block">
<p>ナレッジの一元化</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>ナレッジの一元化とは，プロジェクトやチームに関する情報・ノウハウ・手順・ルールなどを，分散せずに一箇所（Wikiなど）に集約して管理することを指します．これにより，以下のようなメリットがあります。</p>
<ul>
<li><span class="regmonkey-bold">情報の散逸防止</span>
<ul>
<li>口頭や個人メモ，チャットログなどに分散しがちな情報を，Wikiにまとめることで「どこに何が書いてあるか分からない」「必要な情報が見つからない」といった事態を防げます</li>
</ul></li>
<li><span class="regmonkey-bold">情報の最新化・正確性の維持</span>
<ul>
<li>仕様変更や新しい知見が得られた際，Wikiを更新するだけで全員が最新情報を参照でき，古い情報によるミスや認識ズレを防止できます</li>
</ul></li>
</ul>
<div class="reveal_vspace" style="--vspace-height: 1.5em;"></div>
<div class="tips-block">
<p>属人化の防止</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>属人化とは，特定の業務やノウハウが一部の人だけに依存し，その人がいないと作業が進まない・問題が解決できない状態を指します．Wikiは以下の観点からこの属人化を防ぐための有効なツールです．</p>
<ul>
<li><span class="regmonkey-bold">情報の共有・可視化</span>
<ul>
<li>業務手順やトラブル対応，設定方法などをWikiに記録することで，誰でも同じ情報にアクセスできるようになります</li>
<li>これにより，担当者が不在でも他のメンバーが対応可能となり，業務の停滞を防げます</li>
</ul></li>
<li><span class="regmonkey-bold">ノウハウの蓄積と継承</span>
<ul>
<li>経験者が持つ暗黙知やコツを明文化してWikiに残すことで，後任者や新メンバーへのスムーズな引き継ぎが可能になります</li>
</ul></li>
<li><span class="regmonkey-bold">チーム全体のスキル底上げ</span>
<ul>
<li>皆がWikiを活用・更新することで，チーム全体の知識レベルが向上し，特定の人に依存しない強い組織づくりにつながります</li>
</ul></li>
</ul>
<div class="reveal_vspace" style="--vspace-height: 1.5em;"></div>
<div class="tips-block">
<p>コミュニケーションの効率化</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>コミュニケーションの非効率とは，情報が構造化されていないことや，一元管理されていないによって発生する無駄な時間のことです．例として以下のようなものがあります</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 60%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th>課題・現象</th>
<th>コスト分類</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>毎回同じ質問が繰り返される</td>
<td>説明コスト</td>
</tr>
<tr class="even">
<td>情報が人によってバラバラで食い違う</td>
<td>認識齟齬コスト</td>
</tr>
<tr class="odd">
<td>確認・共有・引き継ぎに時間がかかる</td>
<td>説明コスト・情報探索コスト</td>
</tr>
<tr class="even">
<td>メールやチャットを遡らないと情報が見つからない</td>
<td>情報探索コスト</td>
</tr>
</tbody>
</table>
</div>
<p>Wikiを活用することで上記のような「説明コスト」「認識齟齬コスト」「情報探索コスト」を以下のような機序で削減することができます</p>
<ul>
<li><span class="regmonkey-bold">説明コストの削減</span>
<ul>
<li>よくある質問や手順，ルールなどをWikiにまとめておくことで，同じ内容を何度も口頭やチャットで説明する必要がなくなります</li>
<li>新メンバーや他部署からの問い合わせにも「Wikiを参照してください」と<strong>非同期コミュニケーション</strong>の案内でき，対応コストを大幅に削減できます</li>
<li>仕様や方針，過去の議論の経緯などをWikiに記録しておくことで，議論のたびに一から説明したり，過去の経緯を探す手間が省けます</li>
</ul></li>
<li><span class="regmonkey-bold">認識齟齬コストの低減</span>
<ul>
<li>Wikiに記載された内容は誰でも同じものを参照できるため，伝言ゲームによる情報のズレや誤解を防げます</li>
</ul></li>
<li><span class="regmonkey-bold">情報探索コストの低減</span>
<ul>
<li>業務に必要な情報（手順・FAQ・ルール・用語解説など）を構造的に蓄積・整理することで，情報の「どこにあるか」「最新版はどれか」を探す時間を減らすことができます</li>
</ul></li>
</ul>
</section>
<section id="wikiに書くべき情報" class="level2">
<h2 class="anchored" data-anchor-id="wikiに書くべき情報">3. Wikiに書くべき情報</h2>
<p>Wikiには情報を多く残せば残すほど基本的に良いですが，「フロー」と「ストック」という観点で情報を事前に整理することがより良いwikiへと繋がります．Wikiはストック型の情報を蓄積する場所であるので，「これはストック化すべき情報だ」と事前に分類・判断して整理する必要があります．</p>
<div class="reveal_vspace" style="--vspace-height: 1.5em;"></div>
<div class="tips-block">
<p>フロー情報</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<ul>
<li>時系列に流れていく情報</li>
<li>生まれた直後は価値が高く，時間やプロジェクト進行の経過と共に価値が下がっていく</li>
<li>例: Slackやメールでのやり取り，日報・会議メモなど</li>
</ul>
<div class="tips-block">
<p>ストック情報</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<ul>
<li>長期的に価値があり，何度も参照される情報</li>
<li>例: マニュアルや設計書，仕様書など</li>
</ul>
<div class="tips-block">
<p>「フローとストックの区別」と良いWiki</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p>「フローとストックの区別」の視点を持つことで，以下のようなメリットがあります：</p>
<ul>
<li>Wikiがごみ箱化せず，構造的に整理される</li>
<li>情報の探しやすさが向上</li>
</ul>
<p><span class="mini-section">具体的な運用例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 22%">
<col style="width: 24%">
<col style="width: 52%">
</colgroup>
<thead>
<tr class="header">
<th>情報の種類</th>
<th>最初は</th>
<th>その後</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>新しいやり方の試行錯誤</td>
<td>Slackで議論（フロー）</td>
<td>成功したら手順をWikiに整理（ストック）</td>
</tr>
<tr class="even">
<td>問い合わせへの回答</td>
<td>チャットで返す（フロー）</td>
<td>よくある質問ならFAQとしてまとめる（ストック）</td>
</tr>
<tr class="odd">
<td>プロジェクトの背景や目的</td>
<td>議事録で共有（フロー）</td>
<td>重要事項はWikiのプロジェクトページに追記（ストック）</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="coding-projectでwikiに書くべき情報" class="level2">
<h2 class="anchored" data-anchor-id="coding-projectでwikiに書くべき情報">4. Coding ProjectでWikiに書くべき情報</h2>
<div class="tips-block">
<p>Goal: 開発メンバー全員が迷わず効率よく開発・運用できる</p>
</div>
<div class="reveal_vspace" style="--vspace-height: 0.5em;"></div>
<ul>
<li>Wikiを書く目的は情報伝達の課題を解決するため</li>
<li>Coding Projectにおいて情報伝達課題の解決はプロジェクトの生産性・品質・持続性を大きく左右する</li>
</ul>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 39%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>Wikiに書く内容</th>
<th>どの「迷い」や「非効率」を減らすか</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>環境構築手順</td>
<td>「動かない」「セットアップ方法がわからない」</td>
</tr>
<tr class="even">
<td>技術スタック・設計方針</td>
<td>「なぜこの技術を使ってるの？」「全体像が見えない」</td>
</tr>
<tr class="odd">
<td>コーディングルール・ブランチ戦略</td>
<td>「このファイル名でいい？」「この書き方でOK？」</td>
</tr>
<tr class="even">
<td>デプロイ手順・運用ルール</td>
<td>「本番反映って誰がどうやってるの？」</td>
</tr>
<tr class="odd">
<td>FAQ・トラブル対応</td>
<td>「よくあるエラーが出た，どうすればいい？」</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="metadata-fieldの活用" class="level2">
<h2 class="anchored" data-anchor-id="metadata-fieldの活用">5. metadata fieldの活用</h2>
<p>metadata fieldを明確に設定することで，情報の管理性・検索性・再利用性が大きく向上します．</p>
<p><span class="mini-section">metadata field活用の効果</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>目的</th>
<th>メタデータが果たす役割</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>検索性向上</strong></td>
<td>タグ・対象環境・チームでフィルタリング可能</td>
</tr>
<tr class="even">
<td><strong>責任の明確化</strong></td>
<td>作成者/責任者がわかることで内容の信用度が上がる</td>
</tr>
<tr class="odd">
<td><strong>鮮度の判断</strong></td>
<td>更新日で「使える情報か？」を判断できる</td>
</tr>
<tr class="even">
<td><strong>ナレッジの繋がり</strong></td>
<td>関連リンクでページ間の文脈を可視化できる</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">metadata field項目例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 28%">
<col style="width: 19%">
<col style="width: 52%">
</colgroup>
<thead>
<tr class="header">
<th>フィールド名</th>
<th>内容</th>
<th>記入例・補足</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>タイトル / name</strong></td>
<td>ページの内容をひと目で表すタイトル</td>
<td><code>環境構築手順（ローカル）</code> / <code>バックエンド設計方針</code></td>
</tr>
<tr class="even">
<td><strong>作成者 / author</strong></td>
<td>初期作成者，または責任者</td>
<td><code>r.nak</code>（Slack名やGitHubアカウントで統一）</td>
</tr>
<tr class="odd">
<td><strong>最終更新日 / last_updated</strong></td>
<td>内容が最後に更新された日時</td>
<td><code>2025-05-23</code>（日付のみ or タイムスタンプ）</td>
</tr>
<tr class="even">
<td><strong>関連タグ / tags</strong></td>
<td>分類や検索性向上のためのタグ群</td>
<td><code>#backend</code>, <code>#setup</code>, <code>#api</code>, <code>#infra</code></td>
</tr>
<tr class="odd">
<td><strong>対象環境 / environment</strong></td>
<td>適用される環境やバージョン範囲</td>
<td><code>local</code>, <code>staging</code>, <code>v2.3.1〜</code></td>
</tr>
<tr class="even">
<td><strong>関連資料 / related_docs</strong></td>
<td>他ページや外部リンクへの参照</td>
<td><code>[デプロイ手順](../deployment.md)</code> / URL可</td>
</tr>
<tr class="odd">
<td><strong>更新履歴 / changelog</strong></td>
<td>主な更新内容と日付</td>
<td><code>2025-05-23: Docker対応を追加</code><br><code>2025-03-01: 初版作成</code></td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">metadata field実装例</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Markdown with yaml</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Confluence</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "ローカル環境構築ガイド"</span></span>
<span id="cb1-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">author:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "r.nak"</span></span>
<span id="cb1-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">last_updated:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "2025-05-23"</span></span>
<span id="cb1-5"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">tags:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> ["setup", "backend", "docker"]</span></span>
<span id="cb1-6"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">environment:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "local"</span></span>
<span id="cb1-7"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">team:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "backend"</span></span>
<span id="cb1-8"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">is_obsolete:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> false</span></span>
<span id="cb1-9"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">related_docs:</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  - "../deployment.md"</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  - "https://example.com/db-guide"</span></span>
<span id="cb1-12"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">changelog:</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  - "2025-05-23: Docker対応を追加"</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  - "2025-03-01: 初版作成"</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<ol type="1">
<li>ページの冒頭に「テーブル形式」でメタ情報を記述</li>
<li>テーブルを「ページプロパティマクロ」で囲む</li>
<li>他ページから「ページプロパティレポートマクロ」で一覧化が可能</li>
</ol>
</div>
</div>
</div>
</section>
<section id="wiki運用tips" class="level2">
<h2 class="anchored" data-anchor-id="wiki運用tips">5. Wiki運用Tips</h2>
<p>Wikiは「作って終わり」ではなく，「育てて使い続ける」ことで真価を発揮します．一方，更新を怠り最新情報が反映されていなかったり，信頼性が低い内容が記載されていたりなど実運用ではトラブルが発生します．</p>
<div class="tips-block">
<p>トラブル1：情報が乱立・重複してどれが正しいか分からない</p>
</div>
<div class="no-border-top-table" style="padding-left:1em;">
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>原因・目的</th>
<th>対策内容</th>
<th>効果・備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>情報の分類が曖昧・乱立しやすい</td>
<td>タグを事前定義（例：setup, troubleshooting, design, infra, FAQ）</td>
<td>ページの役割や内容を明確化し，重複や検索漏れを防ぐ</td>
</tr>
<tr class="even">
<td>ページの乱立・重複・古い情報の放置</td>
<td>定期的な「重複・類似ページ見直し会」（ミニレビュー）</td>
<td>定期的な棚卸しで情報の鮮度・整理を維持し，正しい情報を残す</td>
</tr>
<tr class="odd">
<td>古い情報や非推奨手順が残りやすい</td>
<td>is_obsolete: true フラグで非推奨情報を明示</td>
<td>利用者が「どれが最新・有効か」を一目で判断できるようにする</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<div class="tips-block">
<p>トラブル2：情報の更新漏れで古い手順が誤用される</p>
</div>
<div class="no-border-top-table" style="padding-left:1em;">
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>原因・目的</th>
<th>対策内容</th>
<th>効果・備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>情報の鮮度が分からず古い手順が誤用される</td>
<td>「更新日」フィールドを必須化</td>
<td>ページごとに最新更新日が明示され，利用者が情報の新旧を判断しやすくなる</td>
</tr>
<tr class="even">
<td>実運用の変更がWikiに反映されないまま放置される</td>
<td>PRや障害対応のチェックリストに「Wiki更新」を追加</td>
<td>運用変更や障害対応のたびにWiki更新を強制し，情報の陳腐化・誤用を防ぐ</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<div class="tips-block">
<p>トラブル3：誰が書いたのか分からず，内容の信頼性が低い</p>
</div>
<div class="no-border-top-table" style="padding-left:1em;">
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>原因・目的</th>
<th>対策内容</th>
<th>効果・備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ページの責任者が不明で内容の信頼性や更新責任が曖昧になる</td>
<td>すべてのページに「Author（責任者）」を必須項目として設定</td>
<td>責任者が明確になり，内容の信頼性・更新体制が向上する</td>
</tr>
<tr class="even">
<td>担当者不在で情報が放置される</td>
<td>作成者が異動・退職したページの担当を再割当</td>
<td>継続的な管理・更新体制を維持できる</td>
</tr>
<tr class="odd">
<td>責任者不明ページの放置・情報の陳腐化</td>
<td>「責任者が不明なページ一覧」を抽出し，棚卸しリストに追加</td>
<td>定期的な棚卸しで責任者を再割当し，情報の鮮度と信頼性を保つ</td>
</tr>
</tbody>
</table>
</div>
<div class="tips-block">
<p>トラブル4：一部の人しかWikiを更新しない</p>
</div>
<div class="no-border-top-table" style="padding-left:1em;">
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>原因・目的</th>
<th>対策内容</th>
<th>効果・備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>書き方が分からず記載が進まない・属人化</td>
<td>テンプレートを整備し，書く敷居を下げる</td>
<td>誰でも迷わず記載でき，情報の質と量が安定する</td>
</tr>
<tr class="even">
<td>重要な情報が口頭やチャットで流れてしまう</td>
<td>SlackやMTGで「この話Wikiに書いておこう」と声かけする文化作り</td>
<td>情報のストック化が進み，ナレッジの蓄積・共有が促進される</td>
</tr>
</tbody>
</table>
</div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<div class="tips-block">
<p>トラブル5：作っても使われない</p>
</div>
<div class="no-border-top-table" style="padding-left:1em;">
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>原因・目的</th>
<th>対策内容</th>
<th>効果・備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>重要情報が分散し見つけづらい</td>
<td>オンボーディング資料，障害手順書，開発ルールなど，必ず参照する情報をWikiに集約</td>
<td>必要な情報が一箇所で見つかり，迷いなく参照できる</td>
</tr>
<tr class="even">
<td>質問・回答がチャットで流れてしまう</td>
<td>Slackで「この質問，Wikiにありましたよ」文化をつくる</td>
<td>情報のストック化が進み，同じ質問の繰り返しを防ぐ</td>
</tr>
<tr class="odd">
<td>Wikiの構造が複雑・不親切</td>
<td>初心者でもどこから見ればいいか分かる構造をつくる</td>
<td>迷わず必要な情報にたどり着ける，オンボーディングも円滑</td>
</tr>
<tr class="even">
<td>利用者視点の改善が進まない</td>
<td>ユーザーを巻き込むUI改善アンケートやフィードバック導線</td>
<td>実際の利用者の声を反映し，使いやすいWiki運用が実現できる</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://backlog.com/ja/wiki-guide/intro/08/">サル先生のWiki入門</a></li>
</ul>


</section>

 ]]></description>
  <category>方法論</category>
  <category>環境構築</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-23-what-to-write-in-wiki/</guid>
  <pubDate>Fri, 23 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Roo Code環境構築</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-19-roo-code-setup/</link>
  <description><![CDATA[ 






<section id="この記事のスコープ" class="level2">
<h2 class="anchored" data-anchor-id="この記事のスコープ">この記事のスコープ</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>OS</td>
<td>Ubuntu 22.04 LTS</td>
</tr>
<tr class="even">
<td>セットアップ対象</td>
<td>Roo Code 3.17</td>
</tr>
<tr class="odd">
<td>主な使用方法</td>
<td>VSCode + Roo Code</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="roo-codeとは" class="level2">
<h2 class="anchored" data-anchor-id="roo-codeとは">Roo Codeとは？</h2>
<p><span class="mini-section">Roo Codeとは？</span></p>
<ul>
<li>Roo Codeとは，VSCode上で動作するコーディングAIアシスタント</li>
<li>AIを活用してコマンドラインやAPI操作を支援するインターフェースやエージェントであり，ユーザーが設定したLLMサービス自体は外部APIプロバイダーに依拠している</li>
</ul>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant User as User
    participant RooCode as Roo Code (AI Assistant)
    participant Claude as Claude API

    User-&gt;&gt;RooCode: 「preprocess.pyのunit test&lt;br&gt;をpytestで記載して」
    RooCode-&gt;&gt;Claude: Calls Claude API
    Claude-&gt;&gt;RooCode: API Response 
    RooCode-&gt;&gt;User: 「pytestを用いたunit test例はこちらです．&lt;br&gt;pytestコマンドを実行いたしましょうか？」
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p><span class="mini-section">Roo Codeでなにができるのか？</span></p>
<ul>
<li><strong>モード切替機能</strong>を活用することで，コード作成，設計，デバッグなど，タスクに応じたアシストが可能</li>
<li>VSCode上でCLIコマンドの実行が可能</li>
</ul>
<p><span class="mini-section">Roo Code vs GitHub Copilot</span></p>
<ul>
<li>Roo Code: より包括的なタスク管理とプロジェクト全体の理解を重視</li>
<li>GitHub Copilot: リアルタイムのコード補完に特化</li>
</ul>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 40%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th><strong>特徴</strong></th>
<th><strong>Roo Code</strong></th>
<th><strong>GitHub Copilot</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>タスクの範囲</strong></td>
<td>コード生成，デバッグ，設計，質問応答など対応可能</td>
<td>主にコード補完や生成に特化</td>
</tr>
<tr class="even">
<td><strong>ツール連携</strong></td>
<td>ファイル操作，検索，CLIコマンド実行など，VS Code内での高度な操作が可能</td>
<td>基本的にコード補完に限定</td>
</tr>
<tr class="odd">
<td><strong>モード切り替え</strong></td>
<td>コード作成，設計，デバッグなど，目的に応じたモード及びカスタマイズが可能</td>
<td>Ask, Edit, Agentモード切り替えが可能</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="install-roo-code" class="level2">
<h2 class="anchored" data-anchor-id="install-roo-code">Install Roo Code</h2>
<p><span class="mini-section">Install Roo Code with VSCode</span></p>
<ol type="1">
<li>拡張機能から<a href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline">Roo Code</a>をインストール</li>
<li>サイドバーのRoo Codeアイコンをクリックし，API keyの設定</li>
</ol>
</section>
<section id="getting-startted" class="level2">
<h2 class="anchored" data-anchor-id="getting-startted">Getting Startted</h2>
<p><span class="mini-section">参照ファイルの追加</span></p>
<ul>
<li><code>@&lt;file-path&gt;</code> or 参照したいファイルをRoo Code message boxまでドラッグして，<code>Shift</code> を押しながら読み込ませる</li>
</ul>
</section>
<section id="customization" class="level2">
<h2 class="anchored" data-anchor-id="customization">Customization</h2>
<section id="mode-customization" class="level3">
<h3 class="anchored" data-anchor-id="mode-customization">Mode Customization</h3>
<ul>
<li><code>Prompt</code>アイコンをクリックすることで，Roo Codeの「<strong>モード</strong>」は以下の機能でカスタマイズすることができます</li>
<li>設定ファイル: <code>~/.config/Code/User/globalStorage/rooveterinaryinc.roo-cline/settings/custom_modes.json</code></li>
</ul>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Slug</td>
<td>Mode unique identifier</td>
</tr>
<tr class="even">
<td><code>Role Definition</code></td>
<td>モードの目的や専門性を定義<br>例: 「文章の作成，編集，校正に特化したモード。技術文書やクリエイティブな文章の作成をサポートします」</td>
</tr>
<tr class="odd">
<td><code>Tool Groups</code></td>
<td><code>read</code>: ファイルの読み取りや指示の取得<br><code>edit</code>: ファイルの編集や新規作成<br><code>command</code>: ファイル管理やコンテンツ処理のためのコマンド実行</td>
</tr>
<tr class="even">
<td><code>When to Use</code></td>
<td>このモードを選択すべき状況を明確化．Orchestrateモードのときに役に立つ</td>
</tr>
<tr class="odd">
<td><code>Custom Instructions</code></td>
<td>モードの動作に関する追加指示を設定</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">設定例</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"customModes"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-4">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"slug"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"writer-mode"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-5">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"📘 Writer Mode"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-6">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"roleDefinition"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are Roo, a technical documentation expert specializing in creating clear, comprehensive documentation for software projects. Your expertise includes:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Writing clear, concise technical documentation</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Creating and maintaining README files, API documentation, and user guides</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Following documentation best practices and style guides</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Understanding code to accurately document its functionality</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Organizing documentation in a logical, easily navigable structure"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-7">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"whenToUse"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use this mode for tasks focused on content creation, editing, and refinement. Ideal for writing technical documentation, creative writing, or improving existing text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-8">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"groups"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"edit"</span></span>
<span id="cb1-11">      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-12">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"source"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"global"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-13">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"customInstructions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Focus on creating documentation that is clear, concise, and follows a consistent style. Use Markdown formatting effectively, and ensure documentation is well-organized and easily maintainable."</span></span>
<span id="cb1-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-15">  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div style="display: flex; margin: 1em;">
<div class="picture" style="padding-right: 2em;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-19-roo-code-setup/mode-api-configuration-example.png" class="img-fluid figure-img"></p>
<figcaption>Mode別API configuration</figcaption>
</figure>
</div>
</div>
<div class="text">
<p><span class="mini-section">mode別API Configuration設定</span></p>
<ul>
<li>Promptアイコンをクリックすると，<code>API Configuration</code> という項目が確認できます</li>
<li><code>API Configuration</code>を設定することで，mode毎にどのAPIを使用するのかを設定することができます
<ul>
<li><code>custom_modes.json</code>経由での設定は確認できず</li>
</ul></li>
</ul>
<p>左の例では，<code>Writer Mode</code>について，<code>preprocess</code>という名前のAPIをアサインしています．</p>
</div>
</div>
</section>
<section id="rooignoreの設定" class="level3">
<h3 class="anchored" data-anchor-id="rooignoreの設定">.rooignoreの設定</h3>
<ul>
<li><code>.rooignore</code> ファイルは，Roo ツールやフレームワークで無視するファイルやディレクトリを指定するために使用されます</li>
<li>基本的な構文は<code>.gitignore</code>と同じ</li>
<li><code>.rooignore</code> ファイルはプロジェクトのルートディレクトリに配置する必要があります</li>
</ul>
<div style="display: flex; margin: 1em;">
<div class="tmp-code-block" style="padding-right: 1em;">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 一時ファイルを無視</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*.tmp</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ログファイルを無視</span></span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">logs/</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 特定のファイルを除外</span></span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!keep_this_file.txt</span></span></code></pre></div>
</div>
<div class="tmp-text" style="margin: 0.5em;">
<p><span class="mini-section"><code>.rooignore</code>設定挙動</span></p>
<p><code>.rooignore</code>設定により無視されたファイルについて，操作はブロックされます：</p>
<ul>
<li><code>read_file</code>: 無視されたファイルを読み取らない</li>
<li><code>write_to_file</code>: 無視されたファイルへの書き込みや新規作成を行わない</li>
<li><code>apply_diff</code>: 無視されたファイルに対して差分を適用しない</li>
<li><code>list_code_definition_names</code>: 無視されたファイルを解析の対象にしない</li>
</ul>
</div>
</div>
</section>
<section id="shortcut-settings" class="level3">
<h3 class="anchored" data-anchor-id="shortcut-settings">Shortcut settings</h3>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>ショートカット</th>
<th>機能説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ctrl</code>+<code>meta</code>+<code>i</code></td>
<td>Roo Codeパネルの表示/非表示(Toggle)</td>
</tr>
<tr class="even">
<td><code>/</code></td>
<td>モード切替メニューの表示</td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>.</code></td>
<td>モード切替Toggle</td>
</tr>
<tr class="even">
<td><code>alt</code> + <code>insert</code></td>
<td>input modeへ切り替え</td>
</tr>
<tr class="odd">
<td><code>alt</code> + <code>enter</code></td>
<td>Accept Roo Code suggestion</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">VSCode設定Tips</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-2">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+enter"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"roo.acceptInput"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rooViewFocused"</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-7"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li><code>key</code>: キーボードショートカットを指</li>
<li><code>command: "roo.acceptInput"</code>: Roo CodeのsuggestionをAcceptするコマンド</li>
<li><code>"when": "rooViewFocused"</code>: Roo Codeビューがフォーカスされているときのみ</li>
</ul>
<p><span class="mini-section">VSCode shortcuts設定例</span></p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>keybindings.json</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="keybindings.json" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb4-1">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+enter"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-github.copilot.generate"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"editorTextFocus &amp;&amp; github.copilot.activated &amp;&amp; !commentEditorFocused &amp;&amp; !inInteractiveInput &amp;&amp; !interactiveEditorFocused"</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+meta+i"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workbench.view.extension.roo-cline-ActivityBar"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!auxiliaryBarVisible &amp;&amp; (terminalFocus || editorTextFocus)"</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+meta+i"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workbench.action.toggleAuxiliaryBar"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auxiliaryBarVisible"</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+alt+i"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-workbench.panel.chat"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"workbench.panel.chat.view.copilot.active"</span></span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ctrl+alt+b"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-workbench.action.toggleAuxiliaryBar"</span></span>
<span id="cb4-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-26">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alt+insert"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"roo-cline.focusInput"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auxiliaryBarVisible"</span></span>
<span id="cb4-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-31">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alt+enter"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-32">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"roo.acceptInput"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-33">     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auxiliaryBarVisible"</span></span>
<span id="cb4-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
</div>
</section>
</section>
<section id="appendix-request-strategies" class="level2">
<h2 class="anchored" data-anchor-id="appendix-request-strategies">Appendix: Request Strategies</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>Strategy</th>
<th>実装例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Be specific</strong></td>
<td><code>Fix the code</code>ではなく<code>Fix the bug in calculateTotal</code> のように具体的に記述する</td>
</tr>
<tr class="even">
<td><strong>Provide context</strong></td>
<td>ファイルやコードの参照には <code>@ Context Mentions</code> を使用する</td>
</tr>
<tr class="odd">
<td><strong>Break down tasks</strong></td>
<td>複雑なタスクは小さく管理しやすいステップに分割して提出する</td>
</tr>
<tr class="even">
<td><strong>Include exmaples</strong></td>
<td>特定のフォーマットやスタイルが必要な場合，サンプルコードを提供する</td>
</tr>
<tr class="odd">
<td><strong>Focus on related tasks</strong></td>
<td>一度に1つの焦点を絞ったリクエストを提出する</td>
</tr>
<tr class="even">
<td><strong>Avoid Excessive jargon</strong></td>
<td>明確で分かりやすい言葉を使う，専門用語の使用は意味の明瞭化の範囲内で使用する</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://docs.roocode.com/">Roo Code Docs</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-19-roo-code-setup/</guid>
  <pubDate>Mon, 19 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>CSSの組み込み方</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-01-how-css-works/</link>
  <description><![CDATA[ 






<section id="cssをhtmlに組み込む方法" class="level2">
<h2 class="anchored" data-anchor-id="cssをhtmlに組み込む方法">CSSをHTMLに組み込む方法</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Key Takeaways
</div>
</div>
<div class="callout-body-container callout-body">
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>方法</th>
<th>保守性</th>
<th>再利用性</th>
<th>適している場面</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>インライン</td>
<td><span class="bad">悪い</span></td>
<td><span class="bad">なし</span></td>
<td>一時的・緊急の変更</td>
</tr>
<tr class="even">
<td>内部CSS</td>
<td><span class="so-so">普通</span></td>
<td><span class="so-so">なし</span></td>
<td>単一ページのスタイリング</td>
</tr>
<tr class="odd">
<td>外部CSS</td>
<td><span class="good">良い</span></td>
<td><span class="good">高い</span></td>
<td>大規模・再利用が前提の開発</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>CSSをHTMLに組み込む方法として，</p>
<ul>
<li>インラインCSS</li>
<li>内部参照CSS</li>
<li>外部参照CSS</li>
</ul>
<p>の3つがあります．それぞれの使い分けも簡潔に解説します．</p>
<p><span class="checkmark-header">1: インラインCSS</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: #ff0000; font-weight: bold;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>これは赤い太字のテキストです<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<ul>
<li>HTMLタグの<code>style</code>属性に直接書く方法</li>
<li>特定の要素だけ一時的にスタイルを指定したいときに使用するが，構造であるHTMLドキュメントに直接デザインの指定をしてしまうので，多用するとメンテナンスが難しくなります</li>
<li>一時的にテストするとき以外は原則として使用しないこと</li>
</ul>
<p><span class="key-takeaways">セレクタ(selector)とプロパティ(property)</span></p>
<ul>
<li>セレクタ: 「どのHTML要素にスタイルを適用するか」を指定する部分</li>
<li>プロパティ: 「何をどうスタイルするか」の内容部分</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb2-1">h1 {</span>
<span id="cb2-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">#FF0000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">}</span></code></pre></div>
<p>この例では，<code>h1</code>がセレクタ，<code>color</code>がプロパティ，<code>#FF0000</code>がプロパティに対応するValue</p>
<p><span class="checkmark-header">2: 内部参照CSS</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-5">    p {</span>
<span id="cb3-6">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">blue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">    }</span>
<span id="cb3-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>これは青いテキストです。<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<ul>
<li>HTMLの<code>&lt;head&gt;</code>内に<code>&lt;style</code>&gt;タグでCSSを書く方法</li>
<li>HTMLに直接書き込むスタイルなので，そのHTML1ページだけのスタイル指定(=使い回しができない)</li>
<li>一時的にテストするとき以外は原則として使用しないこと</li>
</ul>
<p><span class="checkmark-header">3. 外部参照CSS</span></p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>html file</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="html file" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">link</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"styles.css"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> media</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>style.css</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="style.css" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb5-1">p {</span>
<span id="cb5-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">green</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3">}</span></code></pre></div>
</div>
<ul>
<li>HTMLの中に直接スタイルを書くのではなく，別ファイル（<code>.css</code>）として分けて管理し参照するスタイル</li>
<li>複数ページに共通するデザインを一箇所で管理できるため，保守性や再利用性が高い</li>
<li>ブラウザがCSSファイルをキャッシュできるため，2回目以降の読み込みが速い</li>
<li>HTML（構造）とCSS（デザイン）を分離するのはベストプラクティスとされている</li>
</ul>
<p><span class="mini-section">外部CSS参照の基本書式</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>引数</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>rel属性</td>
<td>外部リソースとの関係性を指定．CSSを読み込む場合は <code>"stylesheet"</code></td>
</tr>
<tr class="even">
<td>href属性</td>
<td>読み込むCSSファイルのURLやパスを指定</td>
</tr>
<tr class="odd">
<td>media属性</td>
<td>スタイルを適用するメディアタイプを指定．通常は <code>"all"</code> や <code>"screen"</code></td>
</tr>
</tbody>
</table>
</div>


</section>

 ]]></description>
  <category>html</category>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-05-01-how-css-works/</guid>
  <pubDate>Thu, 01 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>CSSで使う単位</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-30-css-unit/</link>
  <description><![CDATA[ 






<!--::: {.callout-note collapse="true" icon=false}-->
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
CSSで使用する単位一覧
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<div class="columns">
<div class="column" style="width:50%;">
<p><strong> ▶&nbsp; 相対単位</strong></p>
<div class="custom-table" style="width: 95%">
<table class="caption-top table">
<colgroup>
<col style="width: 5%">
<col style="width: 50%">
</colgroup>
<tbody>
<tr class="odd">
<td>px</td>
<td>モニターの画素(ピクセル)を1とする単位</td>
</tr>
<tr class="even">
<td>%</td>
<td>%で割合を指定</td>
</tr>
<tr class="odd">
<td>em</td>
<td>親要素の大文字Mのフォントサイズを1とする単位</td>
</tr>
<tr class="even">
<td>ex</td>
<td>親要素の小文字xフォントサイズを1とする単位</td>
</tr>
<tr class="odd">
<td>rem</td>
<td>ルート要素の大文字のフォントサイズを1とする単位</td>
</tr>
</tbody>
</table>
</div>
</div><div class="column" style="width:50%;">
<p><strong> ▶&nbsp; 絶対単位</strong></p>
<div class="custom-table" style="width: 95%">
<table class="caption-top table">
<colgroup>
<col style="width: 5%">
<col style="width: 50%">
</colgroup>
<tbody>
<tr class="odd">
<td>pt</td>
<td>1/72インチを1とする単位</td>
</tr>
<tr class="even">
<td>pc</td>
<td>12ptを1とする単位</td>
</tr>
<tr class="odd">
<td>mm</td>
<td>ミリメートル基準</td>
</tr>
<tr class="even">
<td>cm</td>
<td>センチメートル基準</td>
</tr>
<tr class="odd">
<td>in</td>
<td>インチを1とする単位</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
</div>
<p><strong> ▶&nbsp; emの使いどころ</strong></p>
<p>ユーザー環境によってフォントのサイズが変わってしまうWebデザインにおいて，</p>
<ul>
<li>1文字分余白を開ける</li>
<li>行間の文字を高さの1.5倍にする</li>
</ul>
<p>といったその時々のフォントサイズに応じたサイズ指定を試みたい場合に，親要素の文字の大きさを単位とする<code>em</code>が役に立ちます．</p>
 <style>
    .example {
      font-family: 'Meiryo', sans-serif;
      font-size: 40px;
      line-height: 1; /* 1.5 × 16px = 24px line height */
      background-color: #f0f8ff;
      border: 1px dashed #999;
      padding-top: 0.5em;
      padding-bottom: 0.5em;
      position: relative;
    }

    .example::before {
      content: '↕ this is padding-top: 0.5em';
      position: absolute;
      top: 0;
      left: 0;
      font-size: 0.5em;
      color: #d33;
      background: rgba(255, 220, 220, 0.8);
      padding: 2px 6px;
    }

    .example::after {
      content: '↕ this is padding-top: 0.5em';
      position: absolute;
      bottom: 0;
      left: 0;
      font-size: 0.5em;
      color: #d33;
      background: rgba(255, 220, 220, 0.8);
      padding: 2px 6px;
    }

    .line-through {
      font-family: 'Meiryo', sans-serif;
      position: relative;
      display: inline-block;
      color: black;
    }

    .annotation {
      font-size: 0.5em;
      vertical-align: middle;
      color: gray;
      padding-bottom: 0.5em;
    }

    
</style>

<div class="example">
    <span class="line-through">Meiryo</span><span style="color: gray;">↕</span><span class="annotation">inline-height 1em</span>
</div>
<p><br></p>
<section id="emとremの違い" class="level2">
<h2 class="anchored" data-anchor-id="emとremの違い">emとremの違い</h2>
<p>emもremも相対単位となりますが，remは常に最上位のルート要素のフォントサイズを規準に計算されるという特徴があります．活用例として，remは要素が入れ子になるような場合に，意図せずサイズが変更されるようなリスクを低減することができます．</p>
<div class="columns">
<!--::: {.callout-note collapse="true" icon=false}--><div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
html code example
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2">  html {</span>
<span id="cb1-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* 1rem = 16px */</span></span>
<span id="cb1-4">  }</span>
<span id="cb1-5"></span>
<span id="cb1-6">  li<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.em-example</span> {</span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* 1.5 × 20px = 30px */</span></span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">steelblue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">  }</span>
<span id="cb1-10"></span>
<span id="cb1-11">  li<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.rem-example</span> {</span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-size</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">rem</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* 1.5 × 16px = 24px */</span></span>
<span id="cb1-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">darkorange</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14">  }</span>
<span id="cb1-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"em-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5em<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"em-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5em<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size</span>
<span id="cb1-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-21">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"em-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5em<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> (relative to <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">&amp;lt;</span>ul<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">&amp;gt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size)<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rem-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5rem<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rem-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5rem<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size</span>
<span id="cb1-29">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-30">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rem-example"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This text uses <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1.5rem<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> (relative to <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">&amp;lt;</span>ul<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">&amp;gt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> font size)<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-31">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-32">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-33"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
</div>
</div><div class="column" style="width:45%;">
<p><strong> ▶&nbsp; emの挙動</strong></p>
<style>
  html {
    font-size: 16px; /* 1rem = 16px */
  }

  li.em-example {
    font-size: 1.5em; /* 1.5 × 20px = 30px */
    color: steelblue;
  }
</style>

<ul>
    <li class="em-example">This text uses <code>1.5em</code> font size</li>
    <li class="em-example">This text uses <code>1.5em</code> font size
        <ul>
            <li class="em-example">This text uses <code>1.5em</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
    
  </ul>
</li></ul></div><div class="column" style="width:50%;">
<p><strong> ▶&nbsp; remの挙動</strong></p>
<style>
  html {
    font-size: 16px; /* 1rem = 16px */
  }

  li.rem-example {
    font-size: 1.5rem; /* 1.5 × 16px = 24px */
    color: darkorange;
  }
</style>

<ul>
    <li class="rem-example">This text uses <code>1.5rem</code> font size</li>
    <li class="rem-example">This text uses <code>1.5rem</code> font size
        <ul>
            <li class="rem-example">This text uses <code>1.5rem</code> (relative to <code>&lt;ul&gt;</code> font size)</li>
        </ul>
    </li>
  </ul>
</div><div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
key takeaways
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>em</code>では入れ子構造となってる<code>&lt;li&gt;</code>セクションについて，直前のフォントサイズ 1.5emにたいして更に 1.5em でフォントサイズを計算している</li>
<li><code>rem</code>では入れ子構造となってる<code>&lt;li&gt;</code>セクションでも，ルート要素フォントサイズ16pxを参照して, 1.5remを計算している</li>
</ul>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>html</category>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-30-css-unit/</guid>
  <pubDate>Wed, 30 Apr 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>シェルコマンドTips</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-29-shellscript-tips/</link>
  <description><![CDATA[ 






<section id="シェルスクリプト便利コマンドリスト" class="level2">
<h2 class="anchored" data-anchor-id="シェルスクリプト便利コマンドリスト">シェルスクリプト便利コマンドリスト</h2>
<div class="no-border-top-table callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
直前のコマンドの引数呼び出し
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<thead>
<tr class="header">
<th><strong>コマンド</strong></th>
<th><strong>動作</strong></th>
<th><strong>ショートカット</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>!^</code></td>
<td>直前のコマンドの最初の引数</td>
<td></td>
</tr>
<tr class="even">
<td><code>!$</code></td>
<td>直前のコマンドの最後の引数</td>
<td><code>esc</code> + <code>.</code> または <code>Alt</code> + <code>.</code></td>
</tr>
<tr class="odd">
<td><code>!:N</code></td>
<td>直前のコマンドのN番目の引数</td>
<td></td>
</tr>
<tr class="even">
<td><code>!*</code></td>
<td>直前のコマンドのすべての引数</td>
<td></td>
</tr>
</tbody>
</table>
<p><span class="mini-section"><code>Alt</code> + <code>.</code> の特徴</span></p>
<ul>
<li><code>Alt</code>を押しながら<code>.</code>を連続で入力すると，一回目は直前，二回目は２回前の最後の引数をsuggestしてくれます．</li>
<li><code>esc</code>+ <code>.</code>もセットで押せば同じような挙動となりますが，入力しづらいので <code>Alt</code> + <code>.</code> の方が好みです</li>
</ul>
</div>
</div>
</div>
</section>
<section id="zsh-terminal用ショートカットリスト" class="level2">
<h2 class="anchored" data-anchor-id="zsh-terminal用ショートカットリスト">Zsh Terminal用ショートカットリスト</h2>
<div class="no-border-top-table callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Cursor moving
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 40%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th><strong>ショートカット</strong></th>
<th><strong>keybind setting</strong></th>
<th><strong>動作</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ctrl</code> + <code>←</code></td>
<td><code>bindkey '^[[1;5C' backward-word</code></td>
<td>cursor backward by one word</td>
</tr>
<tr class="even">
<td><code>alt</code> + <code>B</code></td>
<td>default</td>
<td>cursor backward by one word</td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>→</code></td>
<td><code>bindkey '^[[1;5D' forward-word</code></td>
<td>cursor forward by one word</td>
</tr>
<tr class="even">
<td><code>alt</code> + <code>F</code></td>
<td>default</td>
<td>cursor forward by one word</td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>A</code></td>
<td>default</td>
<td>ライン先頭へ移動</td>
</tr>
<tr class="even">
<td><code>home</code></td>
<td>default</td>
<td>ライン先頭へ移動</td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>E</code></td>
<td>default</td>
<td>ライン末尾へ移動</td>
</tr>
<tr class="even">
<td><code>end</code></td>
<td>default</td>
<td>ライン末尾へ移動</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="no-border-top-table callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Search
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 40%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th><strong>ショートカット</strong></th>
<th><strong>keybind setting</strong></th>
<th><strong>動作</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ctrl</code> + <code>R</code></td>
<td>default</td>
<td>Reverse search in history</td>
</tr>
<tr class="even">
<td><code>ctrl</code> + <code>S</code></td>
<td>default</td>
<td>Forward search in history</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="no-border-top-table callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Editing
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 40%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th><strong>ショートカット</strong></th>
<th><strong>keybind setting</strong></th>
<th><strong>動作</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ctrl</code> + <code>K</code></td>
<td>default</td>
<td>カーソル位置から後ろのwordsをすべて削除</td>
</tr>
<tr class="even">
<td><code>ctrl</code> + <code>U</code></td>
<td>default</td>
<td>ライン全消し</td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>Y</code></td>
<td>default</td>
<td>削除した文字列をペースト</td>
</tr>
<tr class="even">
<td><code>ctrl</code> + <code>W</code></td>
<td>default</td>
<td>カーソル位置からword block先頭までを削除</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="no-border-top-table callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Git
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 40%">
<col style="width: 35%">
</colgroup>
<thead>
<tr class="header">
<th><strong>ショートカット</strong></th>
<th><strong>keybind setting</strong></th>
<th><strong>動作</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ctrl</code> + <code>G</code> then <code>ctrl</code> + <code>A</code></td>
<td><code>bindkey "^G^A" _git_add</code></td>
<td><code>git add -u</code></td>
</tr>
<tr class="even">
<td><code>ctrl</code> + <code>G</code> then <code>ctrl</code> + <code>home</code></td>
<td><code>"^G^[[1;5H" _git_cd</code></td>
<td><code>cd "$(git root)"</code></td>
</tr>
<tr class="odd">
<td><code>ctrl</code> + <code>G</code> then <code>ctrl</code> + <code>S</code></td>
<td><code>bindkey "^G^S" _git_status</code></td>
<td><code>git status -sb</code></td>
</tr>
</tbody>
</table>
<p><span class="mini-section"><code>git status -sb</code>コマンド</span></p>
<p><code>git status</code> と <code>git status -sb</code>の違いは出力形式にあります</p>
<div class="columns">
<div class="column" style="width:47%;">
<p><span class="border-bottom-header"><code>git status</code></span></p>
<ul>
<li>現在のブランチ、ステージ済み・未ステージの変更、未追跡ファイルなどを詳細に表示</li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git status</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">On</span> branch main</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Your</span> branch is up to date with <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'origin/main'</span>.</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Changes</span> not staged for commit:</span>
<span id="cb1-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">modified:</span>   file.txt</span></code></pre></div>
</div><div class="column" style="width: 47%; margin-left: 1em;">
<p><span class="border-bottom-header"><code>git status -sb</code></span></p>
<ul>
<li>短くスクリプト向けの要約を表示
<ul>
<li><code>-s</code> で各ファイルの状態を2文字コードで表示（例: <code>M</code>は変更）</li>
<li><code>-b</code> で現在のブランチと追跡情報を先頭に追加</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> git status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sb</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## main...origin/main</span></span>
<span id="cb2-3"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">M</span> file.txt</span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="appendix-1-ansi-escape-sequence" class="level2">
<h2 class="anchored" data-anchor-id="appendix-1-ansi-escape-sequence">Appendix-1: ANSI escape sequence</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 30%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>シンボル</th>
<th>対応コマンド</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>^[[</code></td>
<td><code>ESC</code> + <code>[</code></td>
<td></td>
</tr>
<tr class="even">
<td><code>1;5</code></td>
<td>modifier (5 = Ctrl)</td>
<td></td>
</tr>
<tr class="odd">
<td><code>^A</code></td>
<td><code>Ctrl</code>+<code>A</code></td>
<td></td>
</tr>
<tr class="even">
<td><code>^G</code></td>
<td><code>Ctrl</code>+<code>G</code></td>
<td>ASCII 7, BEL, bell character</td>
</tr>
<tr class="odd">
<td><code>^S</code></td>
<td><code>Ctrl</code>+<code>S</code></td>
<td>ASCII 19, XOFF, used for terminal flow control to pause output</td>
</tr>
<tr class="even">
<td><code>C</code></td>
<td>Cursor Right</td>
<td></td>
</tr>
<tr class="odd">
<td><code>D</code></td>
<td>Cursor Left</td>
<td></td>
</tr>
<tr class="even">
<td><code>H</code></td>
<td>Home key</td>
<td></td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="appendix-2-custom-keybind-setup" class="level2">
<h2 class="anchored" data-anchor-id="appendix-2-custom-keybind-setup">Appendix-2: custom keybind setup</h2>
<p>以下のファイルを <code>.zshrc</code> に読み込ませています</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>custom_keybind.sh</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="custom_keybind.sh" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cursor moving command</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^[[1;5D'</span> backward-word</span>
<span id="cb3-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^[[1;5C'</span> forward-word</span>
<span id="cb3-7"></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># git-related command</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_cd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> root<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> root<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span>  _git_cd</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_status</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"git status -sb"</span> </span>
<span id="cb3-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sb</span></span>
<span id="cb3-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#zle reset-prompt</span></span>
<span id="cb3-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span>  _git_status  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_status関数をgit_status widgetとして登録</span></span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"git add -u"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># promptにgit add -uを表示</span></span>
<span id="cb3-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span></span>
<span id="cb3-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-31">    </span>
<span id="cb3-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> _git_add  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_status関数をgit_status widgetとして登録</span></span>
<span id="cb3-34"></span>
<span id="cb3-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_commit_amend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"git commit --amend --no-edit"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># promptにgit commit --amend --no-editを表示</span></span>
<span id="cb3-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--amend</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-edit</span></span>
<span id="cb3-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-39">    </span>
<span id="cb3-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> _git_commit_amend  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_commit_amend関数をgit_status widgetとして登録</span></span>
<span id="cb3-42"></span>
<span id="cb3-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_pull</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-44">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"git pull"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># promptにgit add -uを表示</span></span>
<span id="cb3-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> pull</span>
<span id="cb3-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-47">    </span>
<span id="cb3-48"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-49"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> _git_pull  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_status関数をgit_status widgetとして登録</span></span>
<span id="cb3-50"></span>
<span id="cb3-51"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_git_push</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"git push"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># promptにgit add -uを表示</span></span>
<span id="cb3-53">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb3-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-55">    </span>
<span id="cb3-56"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> _git_push  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_status関数をgit_status widgetとして登録</span></span>
<span id="cb3-58"></span>
<span id="cb3-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vscode-related command</span></span>
<span id="cb3-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-62"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_vscode_cd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-63">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code-cd"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># promptにgit add -uを表示</span></span>
<span id="cb3-64">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">code-cd</span></span>
<span id="cb3-65">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> accept-line</span>
<span id="cb3-66">    </span>
<span id="cb3-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-68"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zle</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> _vscode_cd  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># _git_status関数をgit_status widgetとして登録</span></span>
<span id="cb3-69"></span>
<span id="cb3-70"></span>
<span id="cb3-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bindkey setup</span></span>
<span id="cb3-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#---------------------------------------------------</span></span>
<span id="cb3-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># git</span></span>
<span id="cb3-75"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^A"</span> _git_add</span>
<span id="cb3-76"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^[[1;5H"</span> _git_cd       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ctrl + g + Home</span></span>
<span id="cb3-77"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^M"</span> _git_commit_amend</span>
<span id="cb3-78"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^P"</span> _git_push</span>
<span id="cb3-79"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^l"</span> _git_pull</span>
<span id="cb3-80"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^G^S"</span> _git_status</span>
<span id="cb3-81"></span>
<span id="cb3-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vscode related</span></span>
<span id="cb3-83"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^V^[[1;5H"</span> _vscode_cd       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ctrl + v + Home</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>shell</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-29-shellscript-tips/</guid>
  <pubDate>Tue, 29 Apr 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>レシプロエンジンの仕組み</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-24-reciprocating-engine/</link>
  <description><![CDATA[ 






<section id="レシプロエンジンの４行程" class="level2">
<h2 class="anchored" data-anchor-id="レシプロエンジンの４行程">レシプロエンジンの４行程</h2>
<p>レシプロエンジンは，ピストンが「吸気」「圧縮」「燃焼・膨張」「排気」という４行程（ピストンは２往復）で１サイクルの作用を完了するエンジンのことです． レシプロガソリンエンジンの場合，ガソリンを燃料とする混合気を燃焼させ，ピストンを往復させます．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-24-reciprocating-engine/four-step-in-engine.png" class="img-fluid figure-img"></p>
<figcaption>4 cycle engine</figcaption>
</figure>
</div>
<p><span class="mini-section">吸気行程</span></p>
<ol type="1">
<li>ピストンが上死点から下死点に向かって下降し，シリンダー内が負圧になる</li>
<li>負圧になることで吸気バルブが開き，燃料と空気の混合気が吸い込まれてくる(排気バルブは閉じられたまま)</li>
<li>下死点までさがると吸気バルブが閉じる</li>
</ol>
<p><span class="mini-section">圧縮行程</span></p>
<ol type="1">
<li>シリンダー内にある混合気をピストンが押上げ，圧縮していく（断熱圧縮）</li>
<li>混合気中の燃料は完全に気化する</li>
</ol>
<p><span class="mini-section">燃焼・膨張行程</span></p>
<ol type="1">
<li>点火プラグが点火</li>
<li>圧縮された混合気が燃焼し，高温高圧のガスとなる</li>
<li>ガスが膨張しながらピストンを下死点まで押し下げる</li>
<li>クランクシャフトが回転し動力が発生する</li>
</ol>
<p><span class="mini-section">排気行程</span></p>
<ol type="1">
<li>排気バルブが開く</li>
<li>下死点にあるピストンが再び上死点まで上昇し，燃焼ガスを排気バルブから外に放出</li>
<li>1サイクルが完了→吸気行程へ</li>
</ol>


</section>

 ]]></description>
  <category>製造業</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-24-reciprocating-engine/</guid>
  <pubDate>Thu, 24 Apr 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>D3を用いた散布図生成</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-10-scatter-plot-with-D3/</link>
  <description><![CDATA[ 






<section id="問題設定と可視化" class="level2">
<h2 class="anchored" data-anchor-id="問題設定と可視化">問題設定と可視化</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
可視化方針
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong> ▶&nbsp; Question</strong></p>
<ul>
<li>日常活動について，活動に対して感じる有意義さと活動を通して得られる幸福感はどのように相関しているのか？</li>
</ul>
<p><strong> ▶&nbsp; Data</strong></p>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<tbody>
<tr class="odd">
<td>Dataset</td>
<td>2022 American Time Use Survey</td>
</tr>
<tr class="even">
<td>PATH</td>
<td><a href="./act_means.tsv"><code>./act_means.tsv</code></a></td>
</tr>
<tr class="odd">
<td>About</td>
<td>洗濯や調理などの日常活動に従事するときに感じる幸福度と有意義さをスコア化して，その平均を活動ごとに表したもの</td>
</tr>
</tbody>
</table>
<p><strong> ▶&nbsp; 可視化コンポーネント: normal</strong></p>
<ul>
<li><a href="./scatter_plot_default.html"><code>scatter_plot_default.html</code></a>: HTML sturecture</li>
<li><a href="./scatterplot_style.css"><code>scatterplot_style.css</code></a>: CSS for styling</li>
<li><a href="./scatterplot_default.js"><code>scatterplot_default.js</code></a>: JS for scatterplot</li>
</ul>
<p><strong> ▶&nbsp; 可視化コンポーネント: bubble version</strong></p>
<ul>
<li><a href="./scatter_plot_with_bubble.html"><code>scatter_plot_with_bubble.html</code></a>: HTML sturecture</li>
<li><a href="./scatterplot_with_bubble.js"><code>scatterplot_with_bubble.js</code></a>: JS for bubbleplot</li>
</ul>
</div>
</div>
</section>
<section id="scatter-plot-with-d3" class="level2">
<h2 class="anchored" data-anchor-id="scatter-plot-with-d3">scatter plot with D3</h2>
<p>Meaningfullness vs Hapiness について２つのplotを以下では提示しています． 左右のFigureは同じデータを使っているにも関わらず印象が異なります．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
解釈
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Scatter Plot: Meaningfullness と Hapiness の間にはハッキリとした相関関係は見られない</li>
<li>Bubble Plot: 活動別従事者割合(<code>relwt</code>)をweightとして，それをbubble sizeに当てはめた場合，meaningfullnessとHapinessの間には正の相関があると推察できる</li>
</ul>
</div>
</div>
<p>scatter plotでは各点が等しく重要であるという印象を読み手に与えますが，aggregateデータではcount sizeがindexごとによって異なるケースでは 「各点が等しく重要」というのはミスリーディングかもしれません．このような場合，各indexの<code>count size</code>という第３の情報を<strong>バブルの面積に比例させる</strong>ことで表すというBubble plotの利用が考えられます．</p>
<p>ただし，バブルの導入により各点が重なって読みづらくなってしまうというトレードオフもあるので，<code>opacity</code>の調整や，そもそも使用しないなどの意思決定をケースバイケースで実施していくことが必要です．</p>
<div class="columns">
<div class="column">
<p><strong> ▶&nbsp; Scatter Plot</strong></p>
<div class="iframe-container">
<script src="./scatterplot_default.js"></script>
<iframe src="./scatter_plot_default.html" width="100%" height="550px">
</iframe>
</div>
</div><div class="column">
<p><strong> ▶&nbsp; Bubble Plot</strong></p>
<div class="iframe-container">
<script src="./scatterplot_with_bubble.js"></script>
<iframe src="./scatter_plot_with_bubble.html" width="100%" height="550px">
</iframe>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Bubble Plotのコツ
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>バブルの大きさは通常「面積」で表現するべき</li>
<li><code>d3.scaleSqrt()</code> を使ってバブルの半径をsqrtスケーリングすると，面積をデータに比例させることができます</li>
<li>バブル同士が重なってしまうと個別の値が読み取りにくくなるので，透過度(<code>opacity</code>)の調整やBorder colorの導入の検討が必要</li>
</ul>
</div>
</div>
<section id="アンチパターン-透過度の重要性" class="level3">
<h3 class="anchored" data-anchor-id="アンチパターン-透過度の重要性">アンチパターン: 透過度の重要性</h3>
<p>scatter plot, bubble plotにおいて，透過度（opacity）の調整は，<strong>データの密度や重なりを視覚的に正確に伝える</strong>という効果を持つ重要な視覚的テクニックです．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
可視化シーン別透過度調整の効果
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>scatter plot: 重なりが多いところが自然と濃くなるため，<strong>「どこに多くのデータが集中しているか」</strong>が明確になる</li>
<li>bubble plot: 先に描いた点や小さい円が完全に見えなくなることを防ぐ</li>
</ul>
</div>
</div>
<p>以下では透過度を全く調整せずに可視化した場合を示しています．</p>
<div class="columns">
<div class="column">
<p><strong> ▶&nbsp; Scatter Plot</strong></p>
<ul>
<li>すべての点が同じ濃さのため，data point密度の「濃度差が表現されない」</li>
<li>バブルのサイズや色も一定なので視覚的には「一様」に見えてしまい、分布の濃淡や偏り、異常検知が難しくなる</li>
</ul>
<div class="iframe-container">
<script src="./scatterplot_avoid.js"></script>
<iframe src="./scatter_plot_avoid.html" width="100%" height="550px">
</iframe>
</div>
</div><div class="column">
<p><strong> ▶&nbsp; Bubble Plot</strong></p>
<ul>
<li>小さなバブルが大きなバブルの下に隠れて見えなくなる</li>
<li>密集したエリアがごちゃごちゃして読みづらくなる</li>
<li>どのバブルがどの値か判別しにくくなるため，面積情報のメリットが薄れる</li>
</ul>
<div class="iframe-container">
<script src="./scatterplot_avoid_bubble.js"></script>
<iframe src="./scatter_plot_avoid_bubble.html" width="100%" height="550px">
</iframe>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>D3</category>
  <category>EDA</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-04-10-scatter-plot-with-D3/</guid>
  <pubDate>Thu, 10 Apr 2025 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
