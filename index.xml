<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>regmonkey datascience blog</title>
<link>https://ryonakagami.github.io/regmonkey-datascience-blog/</link>
<atom:link href="https://ryonakagami.github.io/regmonkey-datascience-blog/index.xml" rel="self" type="application/rss+xml"/>
<description>日々の徒然勉強日記</description>
<generator>quarto-1.7.33</generator>
<lastBuildDate>Mon, 25 Aug 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Columnar Storageの特徴</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-25-columnar-storage/</link>
  <description><![CDATA[ 






<section id="columnar-storageの特徴" class="level2">
<h2 class="anchored" data-anchor-id="columnar-storageの特徴">Columnar Storageの特徴</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">Columnar Storage</span></p>
<ul>
<li>1つのレコードをcolumn valuesグループ毎に分割し，それぞれを異なるストレージ領域に格納する技術</li>
<li>従来のデータベースは通常，レコード全体を1つのストレージ領域に格納する</li>
<li>ファイルフォーマットまで着目すると，column-based formatの例としてParquetがある</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-25-columnar-storage/columnar-storage.png" class="img-fluid figure-img"></p>
<figcaption>Columnar storage image</figcaption>
</figure>
</div>
</div>
<p><span class="mini-section">Columnar Storageの特徴</span></p>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
1: 通信量の最小化
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>クエリ実行時に，必要な列の値だけがスキャンされ，転送される</li>
<li><code>SELECT title FROM foo</code>は，<code>title</code> 列の値だけにアクセスする</li>
<li><code>SELECT * FROM foo</code> だと結局ずべてのストーレージ領域に対してアクセスしてしまい，columnar-storageのメリットが活かせなくなる</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
2: 高い圧縮率
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>従来のrow-based storageはおおよそ 1:3 の圧縮に対して，Column storageは 1:10 の圧縮率を達成できるとされる(see <a href="http://cs-www.cs.yale.edu/homes/dna/talks/Column_Store_Tutorial_VLDB09.pdf">here</a>)</li>
<li>Columnには似通った値が並ぶため傾向があるため（特に列のcardinalityが低い場合），row-based storageよりも高い圧縮率を得やすい</li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-important no-icon callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
3: 更新処理の非効率性
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>既存レコードの更新に弱く，1つのレコードを更新する場合でも列ごとに分割して保存されているため，複数のストレージ領域へアクセスする必要がある</li>
<li>row-based storageだとrowが１つのストレージ領域へ保存されるので，更新時のアクセスは１つのストレージ領域で済む</li>
</ul>
</div>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">columnar storage vs row-based storage</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">SNO  PRICE CITY    SNAME</span></span>
<span id="cb1-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">---  ------ ----    -----</span></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S1       20 London  Smith</span></span>
<span id="cb1-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S2       10 Paris   Jones</span></span>
<span id="cb1-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S3       30 Paris   Blake</span></span>
<span id="cb1-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S4       20 London  Clark</span></span>
<span id="cb1-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S5       30 Athens  Adams</span></span></code></pre></div>
<p>というような <code>FOO</code> テーブルを考えます．シンプルなColumnar storageの場合，以下のように<code>;</code>で区切られたグループ毎にストーレージ領域に保存します</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S1S2S3S4S5;2010302030;LondonParisParisLondonAthens;SmithJonesBlakeClarkAdams </span></span></code></pre></div>
<p>一方，row-based storageの場合</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">S120LondonSmith;S210ParisJones;S330ParisBlake;S420LondonClark;S530AthensAdams</span></span></code></pre></div>
<p>それぞれのstorageパターンに対して</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> CITY, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SUM</span>(PRICE) </span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> FOO </span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">GROUP</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">BY</span> CITY;</span></code></pre></div>
<p>というクエリを実行すると</p>
<ul>
<li>Row-based storage: 全列(=不要列（SNO, SNAME）もI/O)を毎回読み込んでから，PRICE と CITY を抽出して集計</li>
<li>Columnar storage: 必要な列だけ読み込む．集計系クエリで圧倒的に速い</li>
</ul>
</div>
<hr>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">row-based storageの方が効率が良い場合</span></p>
<p>次のようなSELECT文ではrow-based storageの方が効率的な可能性があります</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> SomeTable</span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WHERE</span> col_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>;</span></code></pre></div>
<p><code>col_a = 'A'</code> の条件によってレコード数を大きく絞り込めたとしても，columnar storageの場合は結局 <code>SELECT *</code> によってすべての列にアクセスする必要があります． <code>col_1</code> がインデックスを持つ場合だと，インデックス探索で <code>col_1 = 'A'</code> の行位置を即座に特定してから必要なストーレージ領域のみ読み込めば良いので，効率的なスキャンが期待できます．</p>
</div>
<hr>
</section>
<section id="columnar-storageとlimit句" class="level2">
<h2 class="anchored" data-anchor-id="columnar-storageとlimit句">Columnar storageと<code>LIMIT</code>句</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">table</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">LIMIT</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>;</span></code></pre></div>
<p>と実行するとColumnar storage型のBigQueryでもPostgreSQLでも，返す行は最大 10 行と結果の行数を制限するという意味では同じです． ただし，クエリ実行計画まで着目するとその挙動に差異があります．</p>
<p><span class="mini-section">BigQueryの場合</span></p>
<ul>
<li><code>LIMIT</code>はクエリで返す行数を制限する句</li>
<li><code>LIMIT</code>は「処理するデータ量」を制限するものではなく，最終的に返す行数を制御するだけ</li>
<li>そのため，<code>SELECT *</code> に <code>LIMIT</code> を付けても，テーブル全体が読み取られるため課金対象の量を減らすことはできない</li>
<li>結果件数だけ制御するだけで，処理量や課金は減らない</li>
</ul>
<p><span class="mini-section">PostgreSQLの場合</span></p>
<ul>
<li>Postgresは，row-basedデータベースで基本的に必要な行だけ返す</li>
<li><code>LIMIT</code>を付けると，クエリプランナーは「どのくらい行を読むか」を考慮するため，実際の処理コストは下がることが多い</li>
<li>結果件数だけでなく，実行計画にも効いて実際の処理量削減につながる余地がある</li>
</ul>
</section>
<section id="rerferences" class="level2">
<h2 class="anchored" data-anchor-id="rerferences">Rerferences</h2>
<ul>
<li><a href="http://cs-www.cs.yale.edu/homes/dna/talks/Column_Store_Tutorial_VLDB09.pdf">Column-Oriented Database Systems, Stavros Harizopoulos, Daniel Abadi, Peter Boncz, VLDB 2009 Tutorial</a></li>
<li><a href="https://cloud.google.com/bigquery/docs/best-practices-performance-compute?hl=ja">BigQuery &gt; Documentation &gt; クエリ計算を最適化する</a></li>
</ul>


</section>

 ]]></description>
  <category>SQL</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-25-columnar-storage/</guid>
  <pubDate>Mon, 25 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>flatpak経由でMeldをインストール</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-18-install-meld-via-flatpak/</link>
  <description><![CDATA[ 






<section id="今回の方針" class="level2">
<h2 class="anchored" data-anchor-id="今回の方針">今回の方針</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Meldの導入
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="(https://meldmerge.org/)">Meld</a>はファイル間やディレクトリ間のdiffをGUIベースで可視化してくれるツール</li>
<li>Linux版のWinMergeみたいなツール</li>
</ul>
</div>
</div>
<p>Git管理されたディレクトリでは<code>.gitconfig</code>で設定したEditorでの<code>git difftool</code>で十分かなと考えていますが， Git管理されていないファイルをアドホックに差分比較したいときに使うツールとしてMeldの利用を考えています．</p>
<p>GUI差分ツールでの利用のみなので，今回は<code>apt</code>ではなく<code>flatpak</code>経由でのインストールを実行します．</p>
<p><span class="mini-section">環境情報</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> lsb_release <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Distributor</span> ID: Ubuntu</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Description:</span>    Ubuntu 24.04.3 LTS</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Release:</span>    24.04</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Codename:</span>   noble</span></code></pre></div>
<p><span class="mini-section">flatpakでインストール可能なVersion</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> flatpak search Meld                                                                                       </span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Name</span>       Description                        Application ID       Version       Branch       Remotes</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Meld</span>       Compare and merge your files       org.gnome.meld       3.22.3        stable       flathub</span></code></pre></div>
<p><span class="mini-section">aptでインストール可能なversion</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> apt-cache policy meld</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">meld:</span></span>
<span id="cb3-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Installed:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(no</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">e)</span></span>
<span id="cb3-4">  Candidate: 3.22.2-1</span>
<span id="cb3-5">  Version table:</span>
<span id="cb3-6">     3.22.2-1 500</span>
<span id="cb3-7">        500 http://jp.archive.ubuntu.com/ubuntu noble/universe amd64 Packages</span>
<span id="cb3-8">        500 http://jp.archive.ubuntu.com/ubuntu noble/universe i386 Packages</span></code></pre></div>
<p>まとめ時点ではあんまりバージョン変わらない．．．</p>
</section>
<section id="flatpak経由でのmeldインストール" class="level2">
<h2 class="anchored" data-anchor-id="flatpak経由でのmeldインストール">flatpak経由でのMeldインストール</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">ユニバーサルパッケージ</span></p>
<ul>
<li>Linuxディストリビューションに依存しないパッケージのこと</li>
<li>依存関係は原則存在せず，必要なものはすべてパッケージの中に取り込んだ状態で提供(アプリ用の環境まるごと提供)</li>
<li>サンドボックス化によるセキュリティの向上と，ディストリビューションとアプリケーションの分離の推進</li>
<li><code>snap</code> や <code>flatpak</code> でインストール可能なパッケージがユニバーサルパッケージ</li>
</ul>
</div>
<p>Debianなら<code>apt</code>, <code>dpkg</code>，RHEL系なら<code>dnf</code>, <code>yum</code>, <code>prm</code> などLinuxディストリビューションに応じてパッケージマネージャを使い分ける必要があります． なにかしらのアプリをインストールしたいとき，ユーザーはディストリビューションに応じてコマンドがありますし，アプリの開発者はディストリビューション毎に「依存関係の解決」に対応したパッケージを作る必要があります．</p>
<p>Linuxユーザー，Linux用アプリ開発者が直面したこのような状況への対応作として登場したのが<span class="regmonkey-bold">ユニバーサルパッケージ</span>という概念です． 基本的に必要なものはすべてパッケージの中に取り込んだ状態で提供するので，Linuxカーネルとパッケージ管理システムが動いているシステムならどこでも利用可能です．</p>
<p><span class="mini-section">ユニバーサルパッケージのデメリット</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 79%">
</colgroup>
<thead>
<tr class="header">
<th>項目</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ディスク容量</strong></td>
<td>ライブラリを同梱するため，同種のライブラリが重複し容量を消費する</td>
</tr>
<tr class="even">
<td><strong>起動・性能</strong></td>
<td>サンドボックスや抽象化層を経由するため，ネイティブパッケージより起動が遅い場合がある</td>
</tr>
<tr class="odd">
<td><strong>システム統合性</strong></td>
<td>テーマやフォント，ファイルシステムとの統合が弱く，見た目や操作感がネイティブより不自然になることがある</td>
</tr>
</tbody>
</table>
</div>
<section id="snap-vs-flatpak" class="level3">
<h3 class="anchored" data-anchor-id="snap-vs-flatpak">snap vs flatpak</h3>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 42%">
<col style="width: 46%">
</colgroup>
<thead>
<tr class="header">
<th>観点</th>
<th>Snap</th>
<th>Flatpak</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>依存関係と容量</strong></td>
<td>依存関係を各パッケージに同梱．重複が発生しやすく，容量効率が悪い</td>
<td>依存関係を各パッケージに同梱するが，ランタイム共有とデータ重複排除（deduplication）により容量効率が良い</td>
</tr>
<tr class="even">
<td><strong>セキュリティ</strong></td>
<td>サンドボックス化は可能だが必須ではない</td>
<td>デフォルトでサンドボックス化され，明示的な権限許可が必要</td>
</tr>
<tr class="odd">
<td><strong>運営主体</strong></td>
<td>Canonical（Ubuntu開発元）が中央管理．バックエンドは事実上プロプライエタリ</td>
<td>コミュニティ主体．仕様やコードはオープン</td>
</tr>
<tr class="even">
<td><strong>システム統合</strong></td>
<td>Snapごとにマウントされるため，<code>lsblk</code> 出力を汚す（多数のloopデバイスが見える）</td>
<td>そうした副作用はない</td>
</tr>
<tr class="odd">
<td><strong>アップデート制御</strong></td>
<td>強制的に自動更新され，ユーザーが制御できない</td>
<td>ユーザーが更新のタイミングを選べる</td>
</tr>
<tr class="even">
<td><strong>アプリ（バックエンド系）</strong></td>
<td>CLIツールやバックエンド系アプリなどインフラ関連をCanonicalが公式に提供</td>
<td>基本はGUIデスクトップアプリ中心</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="flatpak-setup-and-meld-install" class="level3">
<h3 class="anchored" data-anchor-id="flatpak-setup-and-meld-install">flatpak Setup and Meld Install</h3>
<p><span class="mini-section">Step 1: Flatpakのインストール</span></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt install flatpak</span></code></pre></div>
<p><span class="mini-section">Step 2: GNOME Software pluginのインストール</span></p>
<p>Flatpak アプリを GNOME Softwareから扱えるようにするためFlatpak用のpluginを導入します．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># プラグイン導入</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt install gnome-software-plugin-flatpak</span></code></pre></div>
<p><span class="mini-section">Step 3: リポジトリ登録</span></p>
<p>初期状態ではどこのリポジトリも登録されていないので，リポジトリ登録します</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flathub（Flatpak のメインリポジトリ）を追加</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> flatpak remote-add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--if-not-exists</span> flathub https://flathub.org/repo/flathub.flatpakrepo</span></code></pre></div>
<p><span class="mini-section">Step 4: Restart system</span></p>
<p>システムの再起動を行うことで，GNOME Softwareが Flatpak への対応が完了します．</p>
<p><span class="mini-section">Step 5: Meldのインストール</span></p>
<p>CLIでインストールする場合は以下のコマンドを実行します</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> flatpak install flathub org.gnome.meld</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Publisherの確認のすすめ
</div>
</div>
<div class="callout-body-container callout-body">
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<ul>
<li>FlatpakでGoogle chromeパッケージは提供されていますが，提供元は <code>verified</code> されていません．おそらく問題はないですがパッケージインストール時に確認するクセをつけましょう．</li>
<li>Firefoxの方は<code>verified</code> されたMozillaが提供していることが確認できます</li>
</ul>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://github.com/ryonakimageserver/dataserver-for-blog/blob/main/Linux/flatpak/flatpak_not_verified_googlechrome.png?raw=true" class="img-fluid figure-img"></p>
<figcaption>chrome not verified</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://github.com/ryonakimageserver/dataserver-for-blog/blob/main/Linux/flatpak/flatpak_verified_firefox.png?raw=true" class="img-fluid figure-img"></p>
<figcaption>firefox verified</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="flatpakの使い方" class="level3">
<h3 class="anchored" data-anchor-id="flatpakの使い方">flatpakの使い方</h3>
<p><span class="mini-section">install syntax</span></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">flatpak</span> install flathub com.github.tchx84.Flatseal</span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>flatpak</code></td>
<td>faltpak command</td>
</tr>
<tr class="even">
<td><code>install</code></td>
<td>faltpak commandへの指示コマンド</td>
</tr>
<tr class="odd">
<td><code>flathub</code></td>
<td>ダウンロードパッケージの登録レポジトリ</td>
</tr>
<tr class="even">
<td><code>com.github.tchx84.Flatseal</code></td>
<td>パッケージ名</td>
</tr>
</tbody>
</table>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Flatsealパッケージ
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Flatpakパッケージのpermission管理用のツール</li>
<li>GUIベースでAppごとにリソースマネジメントが可能</li>
</ul>
</div>
</div>
<p>[インストールの種類: User vs System Mode]</p>
<p>デフォルトではFlatpakはアプリをsystem modeでインストールします．ユーザーAがThunderbirdをflatpakでインストールすると，同じシステムの別ユーザーもアプリを利用することができます． ユーザー専用でアプリを使用したい場合は</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">flatpak</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span> install flathub org.mozilla.Thunderbird</span></code></pre></div>
<p>となります．<code>--user</code> optionを利用してインストールしたアプリを削除するときは</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">flatpak</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span> uninstall org.mozilla.Thunderbird</span></code></pre></div>
<p>とする必要があります．<code>flatpak update</code> についても同様です．</p>
<p><span class="mini-section">flatpak appのconfig格納先</span></p>
<p>homeディレクトリ下の <code>.var</code> に以下にconfigファイルを含めた形で格納されています</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> ls ~/.var/app</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">org.gnome.meld/</span></span></code></pre></div>
<p><span class="mini-section">その他コマンド</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 57%">
<col style="width: 42%">
</colgroup>
<thead>
<tr class="header">
<th>コマンド</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>flatpak remotes</code></td>
<td>登録されたリポジトリリストの確認</td>
</tr>
<tr class="even">
<td><code>flatpak remote-delete &lt;repository&gt;</code></td>
<td>登録されたリポジトリの削除</td>
</tr>
<tr class="odd">
<td><code>flatpak update</code></td>
<td>インストール済み Flatpak アプリ・ランタイムを更新する</td>
</tr>
<tr class="even">
<td><code>flatpak list</code></td>
<td>インストール済みのすべての Flatpak を一覧表示する</td>
</tr>
<tr class="odd">
<td><code>flatpak list --app</code></td>
<td>インストール済みのアプリ（アプリケーションのみ）を一覧表示する</td>
</tr>
<tr class="even">
<td><code>flatpak history</code></td>
<td>インストール・削除・更新などの操作履歴を確認する</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://meldmerge.org/">Meld</a></li>
<li><a href="https://flatpak.org/setup/Ubuntu">Flatpak Ubuntu Quick Setup</a></li>
<li><a href="https://docs.flatpak.org/en/latest/using-flatpak.html">Flatpak documentation &gt; Using Flatpak</a></li>
<li><a href="https://flathub.org/ja/apps/org.gnome.meld">Flathub &gt; Meld</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-18-install-meld-via-flatpak/</guid>
  <pubDate>Mon, 18 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>clam antivirusの導入</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-17-clam-antivirus/</link>
  <description><![CDATA[ 






<section id="clam-antivirusの導入" class="level2">
<h2 class="anchored" data-anchor-id="clam-antivirusの導入">clam antivirusの導入</h2>
<p>Linux系でも利用できるウイルス対策ソフトウェアとして ClamAV があります．ウイルス定義データベースに登録してあるパターンに従ってウイルスをスキャンしてくれます． ClamAV の利用形態は以下の２つが存在します．</p>
<ul>
<li><code>clamscam</code>: ユーザーが実行可能なコマンド，adhoc用途</li>
<li><code>clamav-daemon.service</code>: <code>systemctl</code>で管理可能なclamscan daemon service, ただし常時動いている関係でメモリを多く消費する</li>
</ul>
<p>今回は，前者のインストールと設定について紹介します．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
False Positive Risk
</div>
</div>
<div class="callout-body-container callout-body">
<p>ClamAVはトロイの木馬やMirai, BASHLITEといったLinuxワームを検出してくれますが，<a href="https://forum.snapcraft.io/t/clamav-found-mirai-trojan-in-slack-snap/7194">Slack snap versionのケース</a> のようにFalse Positive Reportを上げる可能性もあります．</p>
</div>
</div>
</section>
<section id="clamavのインストール" class="level2">
<h2 class="anchored" data-anchor-id="clamavのインストール"><code>clamav</code>のインストール</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt install clamav</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> clamscan <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ClamAV</span> 1.4.3/27737/Tue Aug 19 17:27:27 2025</span></code></pre></div>
</section>
<section id="clamav-freshclamの設定" class="level2">
<h2 class="anchored" data-anchor-id="clamav-freshclamの設定"><code>clamav-freshclam</code>の設定</h2>
<p>ClamAVがウイルス検知に利用するウイルス定義データベースの更新方法は</p>
<ul>
<li><code>freshclam</code>コマンド</li>
<li>systemctl serviceとしての<code>clamav-freshclam</code></li>
</ul>
<p>の２つの方法があります．基本的には後者の方法で運用しますが，インストール直後に念の為手動で <code>freshclam</code> コマンドを実行しておきます．</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo freshclam</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERROR:</span> Failed to lock the log file /var/log/clamav/freshclam.log: Resource temporarily unavailable</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERROR:</span> Problem with internal logger <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">UpdateLogFile = /var/log/clamav/freshclam.log</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span>.</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERROR:</span> initialize: libfreshclam init failed.</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERROR:</span> Initialization error!</span></code></pre></div>
<p>インストール直後に実行すると上記のようなエラーが発生します．<code>clamav-freshclam.service</code> がenabledだと <code>sudo freshclam</code> の手動実行ができなくなってしまうためです． なので一時的にstopして更新します．</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># service statusの確認</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl status clamav-freshclam</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">●</span> clamav-freshclam.service <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> ClamAV virus database updater</span>
<span id="cb3-4">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Loaded:</span> loaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(/us</span>r/lib/<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">systemd/system/clamav-fr</span>eshclam.service; disabled; preset: enabled)</span>
<span id="cb3-5">     Active: active (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">running)</span> since Wed 2025-08-20 12:05:21 JST<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">44s</span> ago</span>
<span id="cb3-6">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Docs:</span> man:freshclam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(1)</span></span>
<span id="cb3-7">             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">man:freshclam.conf</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">5</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-8">             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://docs.clamav.net/</span></span>
<span id="cb3-9">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Main</span> PID: 43196 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(fr</span>eshclam)</span>
<span id="cb3-10">      Tasks: 1 (limit: 75871)</span>
<span id="cb3-11">     Memory: 235.9M (peak: 849.9M)</span>
<span id="cb3-12">        CPU: 7.825s</span>
<span id="cb3-13">     CGroup: /system.slice/clamav-freshclam.service</span>
<span id="cb3-14">             └─43196 /usr/bin/freshclam -d --foreground=true</span>
<span id="cb3-15"></span>
<span id="cb3-16"># serviceのstop</span>
<span id="cb3-17">% sudo systemctl stop clamav-freshclam.service</span>
<span id="cb3-18"></span>
<span id="cb3-19"># 手動更新</span>
<span id="cb3-20">% sudo freshclam</span>
<span id="cb3-21">ClamAV update process started at Wed Aug 20 12:07:24 2025</span>
<span id="cb3-22">Wed Aug 20 12:07:24 2025 -&gt; daily.cvd database is up-to-date (version: 27737<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sigs: 2076445<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> f-level: 90<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> builder: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">raynman)</span></span>
<span id="cb3-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Wed</span> Aug 20 12:07:24 2025 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> main.cvd database is up-to-date <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">version: 62, sigs: 6647427, f-level: 90, builder: sigmgr</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Wed</span> Aug 20 12:07:24 2025 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bytecode.cvd database is up-to-date <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">version: 336, sigs: 83, f-level: 90, builder: nrandolp</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>ウイルス情報データベースのディレクトリは，デフォルトなら<code>/var/lib/clamav</code>になっているはずです． 次に，<code>clamav-freshclam</code> をenableして，restartしておきます</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># enable設定</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl enable clamav-freshclam</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Synchronizing</span> state of clamav-freshclam.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.</span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Executing:</span> /usr/lib/systemd/systemd-sysv-install enable clamav-freshclam</span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Created</span> symlink /etc/systemd/system/multi-user.target.wants/clamav-freshclam.service → /usr/lib/systemd/system/clamav-freshclam.service.</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># restart設定</span></span>
<span id="cb4-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl restart clamav-freshclam</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># status確認</span></span>
<span id="cb4-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl status clamav-freshclam</span>
<span id="cb4-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">●</span> clamav-freshclam.service <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> ClamAV virus database updater</span>
<span id="cb4-13">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Loaded:</span> loaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(/us</span>r/lib/<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">systemd/system/clamav-fr</span>eshclam.service; enabled; preset: enabled)</span>
<span id="cb4-14">     Active: active (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">running)</span> since Wed 2025-08-20 12:07:40 JST<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2s</span> ago</span>
<span id="cb4-15">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Docs:</span> man:freshclam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(1)</span></span>
<span id="cb4-16">             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">man:freshclam.conf</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">5</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-17">             <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://docs.clamav.net/</span></span>
<span id="cb4-18">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Main</span> PID: 48177 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(fr</span>eshclam)</span>
<span id="cb4-19">      Tasks: 1 (limit: 75871)</span>
<span id="cb4-20">     Memory: 2.4M (peak: 3.2M)</span>
<span id="cb4-21">        CPU: 6ms</span>
<span id="cb4-22">     CGroup: /system.slice/clamav-freshclam.service</span>
<span id="cb4-23">             └─48177 /usr/bin/freshclam -d --foreground=true</span></code></pre></div>
</section>
<section id="freshclamの設定ファイルの編集" class="level2">
<h2 class="anchored" data-anchor-id="freshclamの設定ファイルの編集"><code>freshclam</code>の設定ファイルの編集</h2>
<p><code>freshclam</code>の設定ファイルは<code>/etc/clamav/freshclam.conf</code>にあります．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Checks</code></td>
<td>データベース更新頻度</td>
</tr>
<tr class="even">
<td><code>DatabaseOwner</code></td>
<td>データベースファイルの所有者ユーザー</td>
</tr>
<tr class="odd">
<td><code>DatabaseDirectory</code></td>
<td>データベースディレクトリ</td>
</tr>
<tr class="even">
<td><code>UpdateLogFile</code></td>
<td>更新のログの出力先</td>
</tr>
<tr class="odd">
<td><code>LogTime</code></td>
<td>ログにタイムスタンプを付与</td>
</tr>
<tr class="even">
<td><code>NotifyClamd</code></td>
<td>clamd デーモンに更新通知を送る</td>
</tr>
<tr class="odd">
<td><code>Foreground</code></td>
<td>デーモンをフォアグラウンドで実行するか</td>
</tr>
</tbody>
</table>
</div>
<p>編集する場合は <code>vim</code> とかで直接編集しちゃいます．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> vim /etc/clamav/freshclam.conf</span></code></pre></div>
<p>設定変更後はサービスの再起動をしときます</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl restart clamav-freshclam</span></code></pre></div>
</section>
<section id="clamscanコマンドの使い方" class="level2">
<h2 class="anchored" data-anchor-id="clamscanコマンドの使い方"><code>clamscan</code>コマンドの使い方</h2>
<p>デーモンを起動していないと，<code>clamscan</code>コマンドはシングルスレッド(<code>--multiscan</code>オプションが利用できない)の動作となるので， 基本的にはスキャンするターゲットをしっかり事前に決めて検査することが良いと思います．</p>
<p><span class="mini-section">実行例</span></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo clamscan <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--max-filesize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>100M <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> ~/Downloads</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-----------</span> SCAN SUMMARY <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-----------</span></span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Known</span> viruses: 8708210</span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Engine</span> version: 1.4.3</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Scanned</span> directories: 1</span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Scanned</span> files: 20</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Infected</span> files: 0</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Data</span> scanned: 114.28 MB</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Data</span> read: 32.92 MB <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">ratio 3.47:1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Time:</span> 14.845 sec <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">0 m 14 s</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Start</span> Date: 2025:08:20 12:24:37</span>
<span id="cb7-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">End</span> Date:   2025:08:20 12:24:52</span></code></pre></div>
<p><span class="mini-section">options</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 28%">
<col style="width: 26%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>オプション</th>
<th>説明</th>
<th>推奨 / 補足</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>-r</code>, <code>--recursive</code></td>
<td>ディレクトリを再帰的にスキャン</td>
<td>ディレクトリ全体をスキャンする場合は必須</td>
</tr>
<tr class="even">
<td><code>-i</code>, <code>--infected</code></td>
<td>感染ファイルのみ表示</td>
<td>レポートを簡潔にしたい場合に便利</td>
</tr>
<tr class="odd">
<td><code>-l &lt;ファイル&gt;</code></td>
<td>スキャンログを指定ファイルに出力</td>
<td>例：<code>-l /var/log/clamav/scan.log</code></td>
</tr>
<tr class="even">
<td><code>--bell</code></td>
<td>感染ファイル検出時にベル音を鳴らす</td>
<td>ターミナルで確認しやすい</td>
</tr>
<tr class="odd">
<td><code>--remove</code></td>
<td>感染ファイルを自動削除</td>
<td>False Positive Riskがあるので基本的には使用しない</td>
</tr>
<tr class="even">
<td><code>--max-filesize=&lt;SIZE&gt;</code></td>
<td>スキャンする最大ファイルサイズを指定</td>
<td>大きなファイルを除外して高速化</td>
</tr>
<tr class="odd">
<td><code>--max-scansize=&lt;SIZE&gt;</code></td>
<td>スキャンする最大アーカイブサイズを指定</td>
<td>大規模アーカイブの処理制限</td>
</tr>
<tr class="even">
<td><code>--quiet</code></td>
<td>通常メッセージを抑制</td>
<td>感染ファイルのみ出力したい場合</td>
</tr>
<tr class="odd">
<td><code>--no-summary</code></td>
<td>スキャン終了時のサマリ表示を抑制</td>
<td>自動スクリプトでの利用時に便利</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">強引にマルチスレッドでスキャン</span></p>
<ul>
<li>ホームディレクトリ直下のファイルを対象に ClamAV で並列スキャン</li>
<li>logファイルは実行時間のタイムスタンプ付きファイル</li>
<li><code>--quiet</code>で非感染ファイルは表示しない</li>
<li><code>-i</code>で感染ファイルのみ表示</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> ~/ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-mindepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-maxdepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xargs</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-P</span> 8 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-I</span> {} bash <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sudo clamscan --quiet -i --no-summary {}'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/Documents/clamav_log/clamscam_<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +%Y%m%d_%H%M%S<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>.log <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://docs.clamav.net/">ClamAV Documentation</a></li>
<li><a href="https://forum.snapcraft.io/t/clamav-found-mirai-trojan-in-slack-snap/7194">Slack snap versionのケース</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>Linux</category>
  <category>security</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-17-clam-antivirus/</guid>
  <pubDate>Sun, 17 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Ubuntu 24.04.3へのupgrade</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-16-ubuntu-upgrade/</link>
  <description><![CDATA[ 






<section id="ltsから24.04-ltsへのupgrade備忘録" class="level2">
<h2 class="anchored" data-anchor-id="ltsから24.04-ltsへのupgrade備忘録">22.04 LTSから24.04 LTSへのupgrade備忘録</h2>
<ul>
<li><a href="https://lists.ubuntu.com/archives/ubuntu-announce/2025-August/000315.html">Ubuntu 24.04.3 LTS</a>が2025-08-07にリリースされたので，22.04.4 LTSからアップグレード</li>
<li>UbuntuはLTSといっても <code>xx.xx.2</code> 以降を待ったほうが，安定性やセキュリティパッチの恩恵を利用開始時から享受することができる</li>
</ul>
<section id="ubuntu-22.04-ltsと24.04ltsの変更点" class="level3">
<h3 class="anchored" data-anchor-id="ubuntu-22.04-ltsと24.04ltsの変更点">Ubuntu 22.04 LTSと24.04LTSの変更点</h3>
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>22.04 LTS</th>
<th>24.04 LTS</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>gnome-shell --versio</code></td>
<td>42.x</td>
<td>46.x</td>
</tr>
<tr class="even">
<td><code>python3 --version</code></td>
<td>3.10.x</td>
<td>3.12.x</td>
</tr>
<tr class="odd">
<td><code>gcc --version</code></td>
<td>11.x</td>
<td>13.x</td>
</tr>
<tr class="even">
<td>System monitorバー表示</td>
<td>-</td>
<td>System Extensionsで設定可能</td>
</tr>
</tbody>
</table>
</section>
<section id="ubuntu-os-upgradeとトラブルシューティング" class="level3">
<h3 class="anchored" data-anchor-id="ubuntu-os-upgradeとトラブルシューティング">Ubuntu OS upgradeとトラブルシューティング</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Ubuntu OS upgradeの手順
</div>
</div>
<div class="callout-body-container callout-body">
<p>基本的には, 以下の手順で行います</p>
<ol type="1">
<li><code>sudo update-manager -c</code>を実行し，Ubuntu の GUI アップデートマネージャ経由で新しいリリースがあるか確認</li>
<li>表示内容に応じて「OSアップグレード」を実行</li>
<li>アップグレードが完了したら，指示に従い <code>reboot</code></li>
</ol>
</div>
</div>
<p>今回この手順で実行したところエラーが表示されたのでその解決方法を備忘録的に以下にまとめます．</p>
<p><span class="mini-section">Step 1: パッケージ情報の更新</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt update</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt upgrade</span></code></pre></div>
<p><span class="mini-section">Step 2: OS upgradeの実行と問題の発覚</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo update-manager <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Errors</span> were encountered while processing:</span>
<span id="cb2-4"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">thunderbird-locale-en</span></span>
<span id="cb2-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">thunderbird-locale-en-us</span></span>
<span id="cb2-6"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">thunderbird-locale-ja</span></span>
<span id="cb2-7"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">thunderbird-locale-en-gb</span></span></code></pre></div>
<p>上記のコマンドでOSのupgradeを試したところ，<code>thunderbird</code>関連のパッケージが原因でOSアップグレードができないというエラーが発生．</p>
<p><span class="mini-section">Step 3: 問題パッケージの再確認</span></p>
<p><code>apt upgrade</code> や <code>apt install</code> 実行中に失敗したDebianパッケージの一覧に<code>thunderbird</code>は出てくるはずです．</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--configure</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span></code></pre></div>
<p>で何も出力されないのが理想ですが，設定途中に失敗したパッケージがあると一覧として出力されます．</p>
<p><span class="mini-section">Step 4: thunderbirdのpurge</span></p>
<p>thunderbirdはあとでもう一回設定しなおせば良いので，<code>apt remove --purge</code>の実行を決断．</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt remove <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--purge</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'thunderbird*'</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt autoremove</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt clean</span></code></pre></div>
<ul>
<li><code>apt-get purge</code> ではなくて <code>apt remove --purge</code> を用いた理由は対話式で削除パッケージを確認したかったため</li>
<li><code>apt autoremove</code> で不要なパッケージ（メタ情報的に依存関係に組み込まれていないパッケージ）を削除</li>
<li><code>apt clean</code>は<code>/var/cache/apt/archives</code>以下にキャッシュされた <code>.deb</code>形式ファイルを削除するコマンド</li>
</ul>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<code>apt autoremove</code> の注意点
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>apt autoremove</code> の対象は以下の２つの基準によって抽出されます</p>
<ol type="1">
<li><code>manual</code>ではなく<code>auto</code>として<code>apt-mark</code>されている(=インストールが手動ではない)</li>
<li>そのパッケージに対して，手動でインストールされたパッケージが依存していない</li>
</ol>
<p>たまに使っているけれども <code>auto</code> でインストールされたパッケージがある場合，<code>apt autoremove</code> の候補に上がってきてしまう可能性があるので，事前にどのパッケージが削除されるのか ユーザー自身で確認することが重要です．</p>
<p><span class="mini-section">自動的にインストールされたパッケージの確認</span></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aptitude</span> search <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~i !~M'</span></span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>パターン</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>!pattern</code></td>
<td><code>pattern</code> に一致しないパッケージを選択</td>
</tr>
<tr class="even">
<td><code>~M</code></td>
<td>自動的にインストールされたパッケージを選択</td>
</tr>
<tr class="odd">
<td><code>~i</code></td>
<td>インストールされているパッケージを選択</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p><span class="mini-section">Step 5: OS upgrade</span></p>
<p>OSアップグレード中断の原因となったパッケージを除去した後，再度GUIベースでupdate managerを起動し作業を進めます．</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-manager <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span></span></code></pre></div>
<p>これで晴れて Ubuntu 24.04.3 LTSへのアップグレードが完了．</p>
</section>
</section>
<section id="upgrade後の対応" class="level2">
<h2 class="anchored" data-anchor-id="upgrade後の対応">Upgrade後の対応</h2>
<section id="x11の有効化" class="level3">
<h3 class="anchored" data-anchor-id="x11の有効化">X11の有効化</h3>
<p>Ubuntu 22.04 LTSの段階から <code>/etc/gdm3/custom.conf</code> にて</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[daemon]</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Uncomment the line below to force the login screen to use Xorg</span></span>
<span id="cb7-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WaylandEnable</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span></span></code></pre></div>
<p>と設定していたので，作業は特段発生しません．セッションがX11かどうかを確認する場合は</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$XDG_SESSION_TYPE</span></span></code></pre></div>
<p>を実行して，<code>x11</code> と表示されれば問題ありません．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Waylandを採用しない理由
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>スクリーンレコーダーソフト Kazam が未対応のため</li>
</ul>
</div>
</div>
</section>
<section id="hweのインストール" class="level3">
<h3 class="anchored" data-anchor-id="hweのインストール">24.04 HWEのインストール</h3>
<p>なぜか <code>uname -r</code> で確認するとkernelがまだ <code>6.8.0-78-generic</code> であったので，24.04 HWEを改めてインストールする</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--install-recommends</span> linux-generic-hwe-24.04</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 依存関係エラーが発生していたなら</span></span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix-broken</span> install</span></code></pre></div>
<p>その後, rebootして以下のようになっていれば問題なしです．</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> uname <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">6.14.0-28-generic</span></span></code></pre></div>
<p><span class="mini-section">古いkernelとパッケージの削除</span></p>
<p><code>dpkg -l</code>でシステムにインストール済みのパッケージを確認すると</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> linux-generic</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ii</span>  linux-generic-hwe-22.04                        6.8.0-65.68<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">~</span>22.04.1                     amd64        Complete Generic Linux kernel and header</span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ii</span>  linux-generic-hwe-24.04                        6.14.0-28.28<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">~</span>24.04.1                    amd64        Complete Generic Linux kernel and headers</span></code></pre></div>
<p>となっていました．<code>linux-generic-hwe-22.04</code>は必要ないので</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get purge linux-generic-hwe-22.04</span></code></pre></div>
<p>で消し去ります．また合わせて，古いカーネルを <code>sudo apt autoremove</code> などで除去しとします．最後にGRUBの設定(<code>/etc/default/grub</code>)をupdateしときます</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> update-grub</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
GRUB
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>GRUB(GRand Unified Bootloader)はLinuxで一般的に使われているブートローダー</li>
<li>複数のOSやカーネルがインストールされている場合は，それらの切り替えを行うことができる</li>
<li>設定ファイルは <code>/etc/default/grub</code></li>
<li>設定を変更する際は<span class="regmonkey-bold">必ずバックアップを取るようにしましょう</span></li>
</ul>
</div>
</div>
</section>
<section id="etcaptsources.list.d以下の.listファイルの更新" class="level3">
<h3 class="anchored" data-anchor-id="etcaptsources.list.d以下の.listファイルの更新"><code>/etc/apt/sources.list.d/</code>以下の<code>.list</code>ファイルの更新</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
再設定方針
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>OS upgradeの際に，自動的にjammyからnobleに書き換えてくれますが，ユーザーが設定したパッケージレポジトリ設定は書き換えてくれないので，強引に設定し直します．</li>
<li>基本的には公式インストール手順の内，レポジトリ設定の箇所だけ実行します</li>
</ul>
</div>
</div>
<p><span class="mini-section">Docker Engine</span></p>
<p>基本的にはgpg keyとかはUbuntuならば共通のものを使っているようだったので，repository updateのみで十分と判断</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--print-architecture</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /etc/os-release <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${UBUNTU_CODENAME</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERSION_CODENAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> stable"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/docker.list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get update</span></code></pre></div>
<p><span class="mini-section">tailscale</span></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://pkgs.tailscale.com/stable/ubuntu/noble.noarmor.gpg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /usr/share/keyrings/tailscale-archive-keyring.gpg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\n</span>curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://pkgs.tailscale.com/stable/ubuntu/noble.tailscale-keyring.list <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/tailscale.list</span></code></pre></div>
<p><span class="mini-section">その他</span></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jammy"</span> /etc/apt/sources.list.d/ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">egrep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"distUpgrade:"</span></span></code></pre></div>
<p>で22.04 LTSベースの<code>.list</code>ファイルがないかを確認し，必要に応じて<code>rm</code>を実行．</p>
</section>
<section id="nvidia-gpu-driverとcuda13.0のupgrade" class="level3">
<h3 class="anchored" data-anchor-id="nvidia-gpu-driverとcuda13.0のupgrade">NVIDIA GPU Driverとcuda13.0のupgrade</h3>
<p><span class="mini-section">section</span></p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> ubuntu-drivers devices</span>
<span id="cb17-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">udevadm</span> hwdb is deprecated. Use systemd-hwdb instead.</span>
<span id="cb17-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb17-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">driver</span>   : nvidia-driver-580-open <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> third-party non-free recommended</span></code></pre></div>
<p>とあったので，</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> nvidia-driver-580-open</span></code></pre></div>
<p><span class="mini-section">cuda toolkit</span></p>
<p><a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=Ubuntu&amp;target_version=24.04&amp;target_type=deb_local">公式のインストール手順</a>に従い以下を実行</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin</span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo mv cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600</span>
<span id="cb19-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> wget https://developer.download.nvidia.com/compute/cuda/13.0.0/local_installers/cuda-repo-ubuntu2404-13-0-local_13.0.0-580.65.06-1_amd64.deb</span>
<span id="cb19-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> cuda-repo-ubuntu2404-13-0-local_13.0.0-580.65.06-1_amd64.deb</span>
<span id="cb19-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo cp /var/cuda-repo-ubuntu2404-13-0-local/cuda-<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>-keyring.gpg /usr/share/keyrings/</span>
<span id="cb19-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt-get update</span>
<span id="cb19-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> install cuda-toolkit-13-0</span></code></pre></div>
<p><span class="mini-section">reboot後の確認</span></p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU driver</span></span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> nvidia-smi</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CUDA compiler version</span></span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pathが通っていない場合</span></span>
<span id="cb20-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/local/cuda-13.0/bin/nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
nvidia-smiのcuda version
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><code>nvidia-smi</code>で出力される CUDA Versionは実際のCUDA versionではなく，対応可能な最大バージョンを示しています</li>
<li>インストールされているCUDA versionを確認する場合は <code>nvcc --version</code> を実行する必要があります</li>
</ul>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> nvidia-smi         </span>
<span id="cb21-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Wed</span> Aug 20 02:15:15 2025       </span>
<span id="cb21-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+-----------------------------------------------------------------------------------------+</span></span>
<span id="cb21-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">NVIDIA-SMI</span> 580.65.06              Driver Version: 580.65.06      CUDA Version: 13.0     <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+-----------------------------------------+------------------------+----------------------+</span></span>
<span id="cb21-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GPU</span>  Name                 Persistence-M <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Bus-Id</span>          Disp.A <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Volatile</span> Uncorr. ECC <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Fan</span>  Temp   Perf          Pwr:Usage/Cap <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>           <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Memory-Usage</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">GPU-Util</span>  Compute M. <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>               <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">MIG</span> M. <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=========================================+========================+======================</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0</span>  NVIDIA GeForce RTX 4070        On  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">00000000:01:00.0</span>  On <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">N/A</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0%</span>   33C    P5             13W /  215W <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1167MiB</span> /  12282MiB <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">4%</span>      Default <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                                         <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">N/A</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb21-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+-----------------------------------------+------------------------+----------------------+</span></span></code></pre></div>
</div>
</div>
</section>
<section id="pipx関係パッケージの再インストール" class="level3">
<h3 class="anchored" data-anchor-id="pipx関係パッケージの再インストール"><code>pipx</code>関係パッケージの再インストール</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>DefaultのPython versisonが変化したので基本的に<code>pipx</code>で導入したものは再インストールが必要です</li>
<li><code>pipx uninstall</code>はconfigファイルまでは消去しないので，uninstall→installの手順でOKです</li>
</ul>
</div>
</div>
<p><span class="mini-section">gpustatsの再インストール</span></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## uninstall</span></span>
<span id="cb22-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pipx uninstall gpustat</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## re-intsall</span></span>
<span id="cb22-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pipx install gpustat</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## check command</span></span>
<span id="cb22-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> gpustat</span></code></pre></div>
<p><span class="mini-section">Poetryの再インストール</span></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## uninstall</span></span>
<span id="cb23-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pipx uninstall poetry</span>
<span id="cb23-3"></span>
<span id="cb23-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## re-intsall</span></span>
<span id="cb23-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pipx install poetry</span>
<span id="cb23-6"></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## check command</span></span>
<span id="cb23-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> poetry <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--versison</span></span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## extensionsのre-innstall</span></span>
<span id="cb23-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> pipx inject poetry poetry-plugin-shell</span></code></pre></div>
</section>
<section id="docker-desktopの再インストール" class="level3">
<h3 class="anchored" data-anchor-id="docker-desktopの再インストール">Docker Desktopの再インストール</h3>
<p><span class="mini-section">問題事象</span></p>
<ul>
<li>Docker Desktopがうまく起動しない問題が発生</li>
</ul>
<p><span class="mini-section">原因調査</span></p>
<p>Docker自体が死んでいるかどうかをまず調査</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb24-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> docker run hello-world</span>
<span id="cb24-2"></span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> from Docker!</span>
<span id="cb24-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">This</span> message shows that your installation appears to be working correctly.</span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> generate this message, Docker took the following steps:</span>
<span id="cb24-8"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1.</span> The Docker client contacted the Docker daemon.</span>
<span id="cb24-9"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2.</span> The Docker daemon pulled the <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello-world"</span> image from the Docker Hub.</span>
<span id="cb24-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">amd64</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb24-11"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3.</span> The Docker daemon created a new container from that image which runs the</span>
<span id="cb24-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executable</span> that produces the output you are currently reading.</span>
<span id="cb24-13"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">4.</span> The Docker daemon streamed that output to the Docker client, which sent it</span>
<span id="cb24-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> your terminal.</span>
<span id="cb24-15"></span>
<span id="cb24-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> try something more ambitious, you can run an Ubuntu container with:</span>
<span id="cb24-17"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> ubuntu bash</span>
<span id="cb24-18"></span>
<span id="cb24-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Share</span> images, automate workflows, and more with a free Docker ID:</span>
<span id="cb24-20"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://hub.docker.com/</span></span>
<span id="cb24-21"></span>
<span id="cb24-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">For</span> more examples and ideas, visit:</span>
<span id="cb24-23"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://docs.docker.com/get-started/</span></span>
<span id="cb24-24"></span>
<span id="cb24-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> docker <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span>
<span id="cb24-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Docker</span> version 28.3.3, build 980b856</span></code></pre></div>
<p>Docker自体は問題がないと判断し，あくまで<code>docker-desktop</code>がうまく起動しないとして問題に対処しました．</p>
<p><span class="mini-section">トラブルシューティング</span></p>
<p><code>systemctl --failed</code> や <code>sudo journalctl -p err | grep "docker" | less</code> コマンドを実行すると</p>
<pre><code>Failed to start app-gnome-docker</code></pre>
<p>というエラーメッセージが出現していたので，設定ファイルを消さずに再インストールを行います．</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt remove docker-desktop</span></code></pre></div>
<p>その後，<a href="https://desktop.docker.com/linux/main/amd64/docker-desktop-amd64.deb?utm_source=docker&amp;utm_medium=webreferral&amp;utm_campaign=docs-driven-download-linux-amd64&amp;_gl=1*1cq0d3i*_gcl_au*MzU3ODA5NTU2LjE3NTUzNDE4NTY.*_ga*OTgyMTc5NDU2LjE3NTUzNDExODM.*_ga_XJWPQMJYHQ*czE3NTU2MTk5NDIkbzQkZzEkdDE3NTU2MTk5NTYkajQ2JGwwJGgw">Docker公式ページが配布しているDebianパッケージ</a>をダウンロードして，</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install ./docker-desktop-amd64.deb</span></code></pre></div>
<p>を実行すれば終了です．</p>
</section>
<section id="cups-browsed-serviceの無効化" class="level3">
<h3 class="anchored" data-anchor-id="cups-browsed-serviceの無効化"><code>cups-browsed</code> serviceの無効化</h3>
<p><span class="mini-section">cups-browsedサービス</span></p>
<ul>
<li>DNS-SD を使ってネットワーク上のプリンタや USB 接続の IPP プリンタ，プリンタアプリ，リモート CUPS キューなどの印刷サービスを自動で見つけてくれるサービス</li>
<li>プリンターは特に使わないのでdisableしておく</li>
</ul>
<p><span class="mini-section">手順</span></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># サービスのstop</span></span>
<span id="cb28-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo systemctl stop cups-browsed</span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># サービスの無効化</span></span>
<span id="cb28-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> systemctl disable cups-browsed</span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># status確認</span></span>
<span id="cb28-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> systemctl status cups-browsed   </span>
<span id="cb28-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">○</span> cups-browsed.service <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> Make remote CUPS printers available locally</span>
<span id="cb28-10">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Loaded:</span> loaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(/us</span>r/lib/<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">systemd/system/cup</span>s-browsed.service; disabled; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">pres</span>et: enabled)</span>
<span id="cb28-11">     Active: inactive (dead)</span></code></pre></div>
</section>
</section>
<section id="appendix-インストール後の-.debファイルの取り扱い" class="level2">
<h2 class="anchored" data-anchor-id="appendix-インストール後の-.debファイルの取り扱い">Appendix: インストール後の <code>.deb</code>ファイルの取り扱い</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<code>.deb</code>ファイルの取り扱い
</div>
</div>
<div class="callout-body-container callout-body">
<p>プログラムのインストールに必要なファイルをまとめたものが<code>.deb</code>ファイルなので，インストール後は基本的に削除してしまって問題ありません．</p>
</div>
</div>
<p>Ubuntuで<code>apt-get</code>を使ってインストールする場合，</p>
<ol type="1">
<li><code>/var/cache/apt/archives</code> に <code>.deb</code>ファイルをダウンロード</li>
<li><code>dpkg</code>コマンドを用いて，プログラムをインストール</li>
</ol>
<p>という流れになります．<code>/var/cache/apt/archives</code>以下は基本的に再インストールしたい場合などを除いて使いみちがないので削除してしまっても問題ありません． <code>rm</code> コマンドを用いるよりかは，</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## interactiveに結果を確認したい場合</span></span>
<span id="cb29-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt clean</span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## スクリプトで実行する場合(標準出力が簡素)</span></span>
<span id="cb29-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get clean</span></code></pre></div>
<p>を実行してクリーンすることが推奨されます．</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://askubuntu.com/questions/1511919/ubuntu-24-04-nvidia-drivers">ask Ubuntu &gt; Ubuntu 24.04 Nvidia drivers</a></li>
<li><a href="https://www.debian.org/doc/manuals/aptitude/ch02s04s05.en.html">aptitude Search patterns</a></li>
<li><a href="https://github.com/OpenPrinting/cups-browsed">cups-browsed</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>Linux</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-16-ubuntu-upgrade/</guid>
  <pubDate>Sat, 16 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Ubuntu 22.04でのfirewall設定</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-01-firewall-settings/</link>
  <description><![CDATA[ 






<section id="ゴール" class="level2">
<h2 class="anchored" data-anchor-id="ゴール">🎯 ゴール</h2>
<ul>
<li><code>ufw</code>を用いてUbuntu 22.04用のファイアウォールルールを設定する</li>
</ul>
<p><span class="mini-section">Prerequisites</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>条件</th>
<th>備考</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ufw</code>インストール済み</td>
<td><code>apt-get install ufw</code></td>
</tr>
<tr class="even">
<td><code>ufw</code>有効化</td>
<td><code>sudo  ufw enable</code></td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="ufwとは" class="level2">
<h2 class="anchored" data-anchor-id="ufwとは">ufwとは？</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">ufw(Unbcomplicated Firewall)</span></p>
<ul>
<li>Ubuntu のファイアウォール設定ツール</li>
<li>iptablesのフロントエンド</li>
<li>初期状態では無効になっており，ユーザーが手動で有効にする必要がある</li>
<li>設定内容は <code>/etc/ufw/user.rules</code> (IPv4) と <code>/etc/ufw/user6.rules</code> (IPv6) に保存される</li>
</ul>
</div>
<p>ufwは，netfilter を管理するためのフレームワークと，ファイアウォールを操作するためのCLIを提供してくれるソフトです．</p>
<p>Linuxカーネルには，Netfilterというパケットフィルタリング機能があります．パケットの通過の可否の判断は，基本的に通信経路，IPアドレス，ポート番号，ポリシーの組み合わせで行われます． なお，デフォルトでは外部からは必要最低限のネットワーク通信しか受け付けないようにファイアウォールが設定されています．</p>
<p><span class="mini-section">通信経路</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>通信経路</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>入力(Incoming)</td>
<td>外部からLinuxへ入ってくる通信経路</td>
</tr>
<tr class="even">
<td>出力(Outgoing)</td>
<td>Linuxから外部へ出ていく通信経路</td>
</tr>
<tr class="odd">
<td>転送(Routed)</td>
<td>別ホストへ転送する通信経路</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">IPアドレス</span></p>
<ul>
<li>特定のクライアントのみに接続を許可したい場合のルール</li>
<li>不特定多数に提供するサービスのサーバーでは設定が困難</li>
</ul>
<p>特定のIPからだけ3000ポートへの入力を許可する場合は</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow from 192.168.1.100 to any port 3000</span></code></pre></div>
<p><span class="mini-section">送信先ポート番号</span></p>
<p>入力方向(IN)の場合，任意の送信元IPからポート3000へのアクセス許可をする場合は</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow to any port 3000</span></code></pre></div>
<p><span class="mini-section">ポリシー</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>ポリシー</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>allow</td>
<td>ルールにマッチしなかった通信を許可</td>
</tr>
<tr class="even">
<td>deny</td>
<td>通信を破棄</td>
</tr>
<tr class="odd">
<td>reject</td>
<td>通信を拒否してエラーを返す</td>
</tr>
</tbody>
</table>
</div>
<section id="ufw-defaultの設定書式" class="level3">
<h3 class="anchored" data-anchor-id="ufw-defaultの設定書式"><code>ufw default</code>の設定書式</h3>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> default allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deny</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reject</span> [incomming<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">outgoing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">routed]</span></span></code></pre></div>
</div>
<ul>
<li>通常は内部から外部へのOutgoingのみallowにすることを推奨</li>
</ul>
</section>
</section>
<section id="ufwコマンドを用いたファイヤーウォール設定" class="level2">
<h2 class="anchored" data-anchor-id="ufwコマンドを用いたファイヤーウォール設定">ufwコマンドを用いたファイヤーウォール設定</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>ファイル</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>/etc/ufw/ufw.conf</code></td>
<td>ufwの有効ステータス及びLOGLEVELの設定ファイル</td>
</tr>
<tr class="even">
<td><code>/etc/ufw/user.rules</code></td>
<td>IPv4に関連するufwルールの設定ファイル</td>
</tr>
<tr class="odd">
<td><code>/etc/ufw/user6.rules</code></td>
<td>IPv6に関連するufwルールの設定ファイル</td>
</tr>
</tbody>
</table>
<ul>
<li>基本的には以下で解説するコマンド経由の設定で十分</li>
<li>きめ細かい設定をする場合を上記のファイルを直接編集</li>
</ul>
</div>
<p><span class="mini-section">ufw enable/disable</span></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ufwを有効にしたい場合</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw enable</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ufwを無効にしたい場合</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw disable</span></code></pre></div>
<p><code>ufw disable</code>しても，設定したルールは残されています．次回有効にしたときに以前設定したファイアウォールルールを再利用することができます．</p>
<p><span class="mini-section">ufw status</span></p>
<p>設定と動作状況を確認したい場合は <code>ufw status</code> コマンドを実行します．コマンド実行により以下の内容が確認できます</p>
<ul>
<li>ファイアウォールの動作状況: <code>active</code> or <code>inactive</code></li>
<li>設定されているルール一覧</li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 設定と動作状況を表示</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo ufw status</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Status:</span> active</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span>                         Action      From</span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span>                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">------</span>      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">----</span></span>
<span id="cb5-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> on tailscale0     ALLOW       Anywhere                  </span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">22/tcp</span>                     LIMIT       Anywhere                  </span>
<span id="cb5-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on</span> tailscale0 ALLOW       Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>             </span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">22/tcp</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LIMIT</span>       Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>  </span></code></pre></div>
<p>ルールを削除挿入する場合はルール番号がわかると便利です．ルール番号を表示させたい場合は</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ルール番号を表示する</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo ufw status numbered</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Status:</span> active</span>
<span id="cb6-4"></span>
<span id="cb6-5">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span>                         Action      From</span>
<span id="cb6-6">     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span>                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">------</span>      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">----</span></span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> 1] Anywhere on <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">tailscale0</span>     <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALLOW</span> IN    Anywhere                  </span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> 2] 22/tcp                     LIMIT <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">IN</span>    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span>                  </span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> 3] Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span>v6<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">on</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tailscale0</span> ALLOW IN    Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>             </span>
<span id="cb6-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> 4] 22/tcp <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span>v6<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span>                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">LIMIT</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IN</span>    Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>   </span></code></pre></div>
<p><span class="mini-section">ufw status verbose</span></p>
<p>ロギングモードやデフォルトポリシーを表示させる場合は <code>ufw status verbose</code> を実行します</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> sudo ufw status verbose </span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Status:</span> active</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Logging:</span> on <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">high</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Default:</span> deny <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">incoming</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> allow <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">outgoing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> deny <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">routed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">New</span> profiles: skip</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span>                         Action      From</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span>                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">------</span>      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">----</span></span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> on tailscale0     ALLOW IN    Anywhere                  </span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">22/tcp</span>                     LIMIT IN    Anywhere                  </span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on</span> tailscale0 ALLOW IN    Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>             </span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">22/tcp</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LIMIT</span> IN    Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>    </span></code></pre></div>
<p><span class="mini-section">ufw logging</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> logging off<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">low</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">medium</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">high</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">full</span></span></code></pre></div>
<ul>
<li><code>rsyslog</code>が設定されているシステムでは，<code>/var/log/ufw.log</code> にログが記録される</li>
<li>LEVEL(<code>off|low|medium|high|full</code>)を指定すると，logging頻度が設定される</li>
<li>defaultのlog levelは <code>low</code></li>
</ul>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 9%">
<col style="width: 90%">
</colgroup>
<thead>
<tr class="header">
<th>パラメーター</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>off</code></td>
<td>ログを記録しない</td>
</tr>
<tr class="even">
<td><code>low</code></td>
<td>定義されたポリシーに一致しないすべてのブロックされたパケット（レート制限付き） + ログルールに一致するパケットを記録</td>
</tr>
<tr class="odd">
<td><code>medium</code></td>
<td><code>low</code>に加え，ポリシーにマッチせず許可された通信，INVALIDなパケット，新規の接続をレート制限付きで記録</td>
</tr>
<tr class="even">
<td><code>high</code></td>
<td><code>medium</code> レベルのログ（レート制限なし）に加え，すべてのパケットをレート制限付きでログに記録</td>
</tr>
<tr class="odd">
<td><code>full</code></td>
<td><code>high</code> レベルのログ（レート制限なし）をすべて記録</td>
</tr>
</tbody>
</table>
</div>
<p><code>medium</code> より上のログレベルは，たくさんのログ出力を生成し，ディスクを短時間で使い切ってしまう可能性があります．ですので迷ったならば</p>
<ul>
<li>サーバー使用: <code>medium</code></li>
<li>個人用デスクトップ: <code>low</code></li>
</ul>
<p>という設定で十分だと思います．</p>
<p><span class="mini-section">ufw allow</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Synatx</span></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> allow service<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">protocol</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IP</span> address</span></code></pre></div>
<ul>
<li>特定のポートやサービスへのアクセスを許可するルールを設定する際に使用</li>
</ul>
</div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SSH を許可</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow 22/tcp</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HTTP を許可</span></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow http</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 192.168.1.0/24の範囲からのアクセスを許可</span></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow from 192.168.1.0/24</span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 192.168.1.0/24の範囲からport 80へのアクセスを許可</span></span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw allow from 192.168.1.0/24 to any port 80</span></code></pre></div>
<p><span class="mini-section">ufw deny</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> deny service<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">protocol</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IP</span> address</span></code></pre></div>
<ul>
<li>特定のポートやサービスへのアクセスを拒否するルールを設定する際に使用</li>
</ul>
</div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Telnet を拒否</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw deny 23/tcp</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10.0.0.5からのアクセスを拒否</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw deny from 10.0.0.5</span></code></pre></div>
<p><span class="mini-section">ufw delete</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> delete NUM<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rule</span></span></code></pre></div>
<ul>
<li>既存のルールを削除する際に使用</li>
<li>NUM は <code>ufw status numbered</code> で確認したルール番号</li>
</ul>
</div>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 22番ポートの許可を削除</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw delete allow 22/tcp</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 23番ポートの拒否を削除</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw delete deny 23/tcp</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 23番ポートの制限許可を削除</span></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw delete limit 22/tcp </span>
<span id="cb14-9"></span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ルール 5~9 を削除(降順にすること)</span></span>
<span id="cb14-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> 9 8 7 6 5<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> delete <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$n</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span> </span></code></pre></div>
<p><span class="mini-section">ufw insert</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> insert NUM allow<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deny</span> service<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">protocol</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IP</span> address</span></code></pre></div>
<ul>
<li>ルールを指定した順番に挿入する際に使用</li>
<li>NUM は挿入する位置番号</li>
</ul>
</div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 80番ポート許可を最初のルールに挿入</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw insert 1 allow 80/tcp</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 192.168.1.100からのアクセス拒否ルールを２番に挿入</span></span>
<span id="cb16-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw insert 2 deny from 192.168.1.100</span></code></pre></div>
<p><span class="mini-section">ufw limit</span></p>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">Syntax</span></p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ufw</span> limit service<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">port</span></span></code></pre></div>
<ul>
<li>指定したポートやサービスへのアクセスを制限（レート制限）する際に使用</li>
<li>DoS 攻撃やブルートフォース攻撃対策に便利</li>
</ul>
</div>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SSH に対して接続レート制限を設定</span></span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw limit 22/tcp</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 192.168.1.0/24範囲からポート443への接続をレート制限</span></span>
<span id="cb18-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw limit from 192.168.1.0/24 to any port 443</span></code></pre></div>
<section id="ufw-tailscaleの設定" class="level3">
<h3 class="anchored" data-anchor-id="ufw-tailscaleの設定">ufw + tailscaleの設定</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
ファイアウォール設定方針
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Tailscale以外のすべてのincoming通信を拒絶</li>
<li>すべてのOutgoingトラフィックを許可</li>
</ul>
</div>
</div>
<p><span class="mini-section">Prerequisites</span></p>
<ul>
<li>tailscaleがサーバー側でインストール済み</li>
<li>ufwがサーバー側でインストール済み</li>
<li>tailscale経由でssh接続可能</li>
</ul>
<section id="defaultルールの設定" class="level4">
<h4 class="anchored" data-anchor-id="defaultルールの設定">Defaultルールの設定</h4>
<p>tailscale sshでサーバーにログインした後に，ufw defaultルールを設定します</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># incoming rule</span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw default deny incoming</span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outgoing rule</span></span>
<span id="cb19-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ufw default allow outgoing</span></code></pre></div>
<p>verboseを用いてDefaultルール設定を確認します．<code>Default</code>セクションについて，以下のような設定になっていればOKです</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo ufw status verbose</span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Status:</span> active</span>
<span id="cb20-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Logging:</span> on <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">high</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Default:</span> deny <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">incoming</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> allow <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">outgoing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> deny <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">routed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">New</span> profiles: skip</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span>                         Action      From</span>
<span id="cb20-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span>                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">------</span>      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">----</span></span>
<span id="cb20-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div>
<p>次に，<code>tailscale</code> のincoming設定をします</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo ufw allow in on tailscale0</span></code></pre></div>
<p>改めてルール設定を確認します</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo ufw status                </span>
<span id="cb22-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Status:</span> active</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span>                         Action      From</span>
<span id="cb22-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span>                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">------</span>      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">----</span></span>
<span id="cb22-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> on tailscale0     ALLOW       Anywhere                  </span>
<span id="cb22-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Anywhere</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">on</span> tailscale0 ALLOW       Anywhere <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> </span></code></pre></div>
<p>ルール設定後，ufwをリフレッシュして完了です</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo ufw reload</span></code></pre></div>
<div class="blog-custom-border">
<p><span class="def-title-no-before">📘 REMARKS</span></p>
<ul>
<li>上記のufwルール設定ではincomingがデフォルトでdeny, tailscale経由のみをincomingアクセスを許可</li>
<li>tailscaleを経由しないsshは拒絶されるが，tailscale + sshは機能するはずです</li>
</ul>
</div>
</section>
</section>
</section>
<section id="トラブルシューティング" class="level2">
<h2 class="anchored" data-anchor-id="トラブルシューティング">トラブルシューティング</h2>
<section id="varlogufw.logが生成されない" class="level3">
<h3 class="anchored" data-anchor-id="varlogufw.logが生成されない"><code>/var/log/ufw.log</code>が生成されない</h3>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Problem
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>sudo ufw status verbose</code> でlogging on担っているにも関わらず，<code>/var/log/ufw.log</code> が生成されない</p>
</div>
</div>
<p><span class="mini-section">原因調査</span></p>
<p><code>ufw.log</code> は <code>rsyslog</code> 経由で書き込まれるはずなので，<code>rsyslog</code> 自体のログを確認してみます．</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cat /var/log/syslog <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ufw"</span></span></code></pre></div>
<p>ファイルを見てみると</p>
<pre class="log"><code>rsyslogd: file '/var/log/ufw.log': open error: Permission denied [v8.2312.0 try https://www.rsyslog.com/e/2433 ]</code></pre>
<p>というラインが登場したならば，Permissionの問題であると考えることができます．</p>
<p><span class="mini-section">対策</span></p>
<p><code>/var/log</code>のdefault permissonは</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>設定値</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>owner</td>
<td><code>root</code></td>
</tr>
<tr class="even">
<td>group</td>
<td><code>syslog</code></td>
</tr>
<tr class="odd">
<td>permission</td>
<td><code>755</code>(<code>drwxr-xr-x</code>)</td>
</tr>
</tbody>
</table>
</div>
<p><code>/var/log</code> 自体には 書き込み権限を付けないのが推奨及びデフォルトなので，個別ファイル(今回ならば <code>/var/log/ufw.log</code>) に権限をつけることが対応策となります．従って，</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 空のlogファイル生成</span></span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> touch /var/log/ufw.log</span>
<span id="cb26-3"></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># owner:groupの変更</span></span>
<span id="cb26-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chown syslog:adm /var/log/ufw.log</span></code></pre></div>
<p>もろもろがめんどくさい場合は <code>sudo chmod 775 /var/log</code> を実行します．</p>
</section>
</section>
<section id="appendix-ipアドレスとサブネットマスク" class="level2">
<h2 class="anchored" data-anchor-id="appendix-ipアドレスとサブネットマスク">Appendix: IPアドレスとサブネットマスク</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">IPアドレスの構成</span></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb27-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">IP address:   192.168.0.1</span></span>
<span id="cb27-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Subnet mask:  255.255.255.0</span></span></code></pre></div>
<p>というIPv4アドレスはネットワークパートとホストパートの２つの要素によって構成されています：</p>
<ul>
<li>Newwork Identifier: デバイスがどのネットワークに属しているかを示す識別子</li>
<li>Host Identifier: 属しているネットワーク上でデバイスに対して付与される識別子</li>
</ul>
<p>サブネットマスクはIPアドレスの内，どのビットまでがNetwork Identifierなのかを示します．</p>
</div>
<p>IPv4アドレスは32-bitで定義されています．<code>192.168.0.1</code>はそれを読みやすくしたものであり，binary表記と対応させると</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb28-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">192.168.0.1 </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb28-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">11000000.10101000.00000000.00000001</span></span></code></pre></div>
<p>サブネットマスクも同様で</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb29-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.255.255.0 </span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb29-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">11111111.11111111.11111111.00000000</span></span></code></pre></div>
<ul>
<li><code>1</code>: network portion</li>
<li><code>0</code>: host portion</li>
</ul>
<p>解釈すると，<code>192.168.0</code> がネットワーク識別子で，<code>1</code>がホスト識別子となります．</p>
<p><span class="mini-section">IPv4とサブネットマスクの解釈</span></p>
<div class="no-border-top-table no-header">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 35%">
<col style="width: 45%">
</colgroup>
<tbody>
<tr class="odd">
<td>Network ID</td>
<td><code>192.168.0.0</code></td>
<td></td>
</tr>
<tr class="even">
<td>Broadcast address</td>
<td><code>192.168.0.255</code></td>
<td>同じネットワークに属するすべてのデバイスに一斉にメッセージを届けるための特別なIPアドレスのこと</td>
</tr>
<tr class="odd">
<td>Valid hosts</td>
<td><code>192.168.0.1</code> ~ <code>192.168.0.254</code></td>
<td>254個のデバイスが同一ネットワークに登録可能</td>
</tr>
</tbody>
</table>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Broadcast address vs <code>0.0.0.0</code>
</div>
</div>
<div class="callout-body-container callout-body">
<p>Broadcast addressは通信の宛先アドレスですが，<code>0.0.0.0</code> は宛先ではなく「このマシンが持つ全てのIPv4アドレスで待ち受ける」という意味になります．間隔としては，</p>
<ul>
<li><code>0.0.0.0</code>: 自分の家の全てのドアを開けて待っている（誰でも入れる状態にする）</li>
<li><code>192.168.0.255</code>: 町内の 全住人にスピーカーで呼びかける</li>
</ul>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 26%">
<col style="width: 47%">
<col style="width: 26%">
</colgroup>
<thead>
<tr class="header">
<th>アドレス</th>
<th>意味</th>
<th>使い方</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>0.0.0.0</code></td>
<td>「全ての自分のIPアドレスで待ち受ける」</td>
<td>サーバープログラムのバインド用</td>
</tr>
<tr class="even">
<td><code>192.168.0.255</code></td>
<td>「192.168.0.0/24 の全ホストに送信する」</td>
<td>ブロードキャスト通信の宛先</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<section id="cidr表記" class="level3">
<h3 class="anchored" data-anchor-id="cidr表記">CIDR表記</h3>
<p>フルのサブネットマスク（<code>255.255.255.0</code>）のように表記する代わりに，ネットワーク部に使うビット数だけを指定する方法をCIDR表記といいます．</p>
<ul>
<li><code>192.168.1.10/24</code>: <code>24</code> はネットワーク部が 24 ビットという意味（マスクは <code>255.255.255.0</code>）</li>
<li><code>10.0.0.1/8</code>: <code>/8</code> はネットワーク部が 8 ビットという意味（マスクは <code>255.0.0.0</code>）</li>
</ul>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <br></p>
<p><code>172.18.1.10/12</code> のネットワークの有効ホスト範囲とブロードキャストアドレスは</p>
<ul>
<li>有効ホスト範囲: <code>172.16.0.1</code>～ <code>172.31.255.254</code></li>
<li>ブロードキャストアドレス: <code>172.31.255.255</code></li>
</ul>
</div>
<hr>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://manpages.ubuntu.com/manpages/noble/en/man8/ufw.8.html">Ubuntu manuals &gt; ufw</a></li>
<li><a href="https://tailscale.com/kb/1077/secure-server-ubuntu">Tailscale &gt; Use UFW to lock down an Ubuntu server</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>Linux</category>
  <category>firewall</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-08-01-firewall-settings/</guid>
  <pubDate>Fri, 01 Aug 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto Projectへのpseudocode extensions導入</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-31-how-to-write-pseudocode-in-quarto/</link>
  <description><![CDATA[ 






<section id="ゴール" class="level2">
<h2 class="anchored" data-anchor-id="ゴール">🎯 ゴール</h2>
<ul>
<li>Quarto PropjectのHTMLレンダリングで<a href="https://github.com/SaswatPadhi/pseudocode.js">Pseudocode</a>を利用可能にする</li>
</ul>
<section id="requirements" class="level3">
<h3 class="anchored" data-anchor-id="requirements">💻 Requirements</h3>
<ul>
<li>Quarto がインストール済み</li>
<li>Quarto プロジェクト（blogやbook）を作成済み</li>
</ul>
</section>
</section>
<section id="拡張機能のインストール" class="level2">
<h2 class="anchored" data-anchor-id="拡張機能のインストール">✅ 拡張機能のインストール</h2>
<p><a href="https://github.com/leovan/quarto-pseudocode#readme">Quarto Pseudocode Extension</a>をQuarto Projectに<code>quarto</code>コマンドでインストールします:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> add leovan/quarto-pseudocode</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/_extensions</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> leovan</span>
<span id="cb2-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> pseudocode</span>
<span id="cb2-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _extension.yml</span>
<span id="cb2-5">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> pseudocode.lua</span>
<span id="cb2-6">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> pseudocode.min.css</span>
<span id="cb2-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> pseudocode.min.js</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
REMARKS
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Project単位でのインストールとなります</li>
</ul>
</div>
</div>
</section>
<section id="拡張機能利用のための設定" class="level2">
<h2 class="anchored" data-anchor-id="拡張機能利用のための設定">🔨 拡張機能利用のための設定</h2>
<p><code>_quarto.yml</code> に対して <code>filters</code>項目を以下のように追加します:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output-dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> _site</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pseudocode</span></span></code></pre></div>
</div>
<section id="math-setup" class="level3">
<h3 class="anchored" data-anchor-id="math-setup">Math Setup</h3>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-in-header</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> include/mathjax.html</span></span></code></pre></div>
</div>
<p>上記の<code>include/mathjax.html</code>に対して以下のようなLinesを設定します</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>include/mathjax.html</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="include/mathjax.html" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-2">    MathJax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-3">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb5-4">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">inlineMath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">('</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-5">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">displayMath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$$'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$$'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">['</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]'</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-6">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">processEscapes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-7">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">processEnvironments</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-8">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-9">        }</span>
<span id="cb5-10">    }</span>
<span id="cb5-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-chtml-full.js"</span></span>
<span id="cb5-13"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">        integrity</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-kbAFUDxdHwlYv01zraGjvjNZayxKtdoiJ38bDTFJtaQ="</span></span>
<span id="cb5-14"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">        crossorigin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anonymous"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<p><span class="mini-section">MathJax Options</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 21%">
<col style="width: 78%">
</colgroup>
<thead>
<tr class="header">
<th>Keys</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>inlineMath</code></td>
<td><strong>インライン数式</strong> のマーカー指定．<br>例：<code>$a^2 + b^2 = c^2$</code> または <code>\(...\)</code></td>
</tr>
<tr class="even">
<td><code>displayMath</code></td>
<td><strong>ディスプレイ数式（中央寄せで大きく表示）</strong> のマーカー指定．<br>例：<code>$$E = mc^2$$</code> または <code>\[...\]</code></td>
</tr>
<tr class="odd">
<td><code>processEscapes</code></td>
<td>バックスラッシュを <strong>エスケープとして解釈するか</strong>．<code>true</code> にすると <code>\\(</code> を <code>\(</code> として扱えるようになる</td>
</tr>
<tr class="even">
<td><code>processEnvironments</code></td>
<td><code>\begin{...} ... \end{...}</code> 形式の <strong>LaTeX 環境</strong> を使えるようにする</td>
</tr>
<tr class="odd">
<td><code>tags: 'all'</code></td>
<td>式番号を付ける場所の指定．<br><code>'all'</code> は <strong>display 数式すべて</strong> に番号を振る（<code>\begin{equation}</code> でなくても）</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">MathJax本体の読み込み設定</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 24%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>属性</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>src</code></td>
<td>CDN 上の MathJax v3 スクリプト．<code>tex-chtml-full.js</code> は <strong>LaTeX入力 + HTML/CSS出力</strong> 対応の完全版</td>
</tr>
<tr class="even">
<td><code>integrity</code></td>
<td><strong>Subresource Integrity（SRI）</strong> チェック用ハッシュ（改ざん防止）</td>
</tr>
<tr class="odd">
<td><code>crossorigin="anonymous"</code></td>
<td>SRI を有効にするための指定</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="algorithm表記設定" class="level3">
<h3 class="anchored" data-anchor-id="algorithm表記設定">Algorithm表記設定</h3>
<p>Pseudocodeの参照または参照時の表示を設定する場合，<code>_quarto.yml</code>に以下のように記載します</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pseudocode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caption-prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"アルゴリズム"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # DefaultはAlgorithm</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reference-prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"アルゴリズム"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # DefaultはAlgorithm</span></span></code></pre></div>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 17%">
<col style="width: 26%">
<col style="width: 12%">
<col style="width: 42%">
</colgroup>
<thead>
<tr class="header">
<th>オプション名</th>
<th>意味</th>
<th>デフォルト</th>
<th>解説</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>caption-prefix</code></td>
<td>キャプションの前に付ける語句</td>
<td><code>"Algorithm"</code></td>
<td>例：<code>Algorithm 1: Euclidean</code> のような見出しに使われる</td>
</tr>
<tr class="even">
<td><code>reference-prefix</code></td>
<td><code>@ref(fig:xxx)</code> のような参照時の接頭辞</td>
<td><code>"Algorithm"</code></td>
<td>参照時に <code>Algorithm 1</code> のように表示されます</td>
</tr>
<tr class="odd">
<td><code>caption-number</code></td>
<td>番号付けの有無</td>
<td><code>true</code></td>
<td><code>false</code> にすると <code>Algorithm: xxx</code> のように番号なしになる</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="pseudocode-blockの記述方法" class="level2">
<h2 class="anchored" data-anchor-id="pseudocode-blockの記述方法">📘 Pseudocode Blockの記述方法</h2>
<p><code>pseudocode</code>コードブロックの中にPseudocodeを以下のように記述すると，Algorithm 1 のような出力になります．</p>
<pre>```pseudocode
#| html-indent-size: "1.2em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: false
#| pdf-placement: "htb!"
#| pdf-line-number: true

\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\Procedure{Quicksort}{$A, p, r$}
  \If{$p &lt; r$}
    \State $q = $ \Call{Partition}{$A, p, r$}
    \State \Call{Quicksort}{$A, p, q - 1$}
    \State \Call{Quicksort}{$A, q + 1, r$}
  \EndIf
\EndProcedure
\Procedure{Partition}{$A, p, r$}
  \State $x = A[r]$
  \State $i = p - 1$
  \For{$j = p$ \To $r - 1$}
    \If{$A[j] &lt; x$}
      \State $i = i + 1$
      \State exchange
      $A[i]$ with     $A[j]$
    \EndIf
    \State exchange $A[i]$ with $A[r]$
  \EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}
```
</pre>
<div id="alg-quicksort" class="pseudocode-container quarto-float" data-line-number-punc=":" data-no-end="false" data-comment-delimiter="//" data-caption-prefix="Algorithm" data-pseudocode-number="1" data-indent-size="1.2em" data-line-number="true">
<div class="pseudocode">
\begin{algorithm} \caption{Quicksort} \begin{algorithmic} \Procedure{Quicksort}{$A, p, r$} \If{$p &lt; r$} \State $q = $ \Call{Partition}{$A, p, r$} \State \Call{Quicksort}{$A, p, q - 1$} \State \Call{Quicksort}{$A, q + 1, r$} \EndIf \EndProcedure \Procedure{Partition}{$A, p, r$} \State $x = A[r]$ \State $i = p - 1$ \For{$j = p$ \To $r - 1$} \If{$A[j] &lt; x$} \State $i = i + 1$ \State exchange $A[i]$ with $A[j]$ \EndIf \State exchange $A[i]$ with $A[r]$ \EndFor \EndProcedure \end{algorithmic} \end{algorithm}
</div>
</div>
</section>
<section id="quarto-pseudocode-の仕様" class="level2">
<h2 class="anchored" data-anchor-id="quarto-pseudocode-の仕様"><code>quarto-pseudocode</code> の仕様</h2>
<p><span class="mini-section">Syntax</span></p>
<ul>
<li>キーワードには大文字と小文字の形式(UpperCamelCase) (例: <code>\Procedure</code>, <code>\If</code>, <code>\EndIf</code>) を使用</li>
<li>数式は標準の LaTeX 数式構文をサポート</li>
</ul>
<p><span class="mini-section">Block Parameters</span></p>
<p>コメント形式のパラメーターを以下のように記載することができます．</p>
<pre><code>#| label: alg-my-algorithm
#| html-indent-size: "1.2em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: false
#| pdf-placement: "htb!"
#| pdf-line-number: true

\begin{algorithm}
\caption{My Algorithm}
\begin{algorithmic}
...
\end{algorithmic}
\end{algorithm}</code></pre>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>パラメーター</th>
<th>デフォルト</th>
<th>形式</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>label</code></td>
<td></td>
<td>all</td>
<td>クロス参照用のラベル (alg- で始まる必要があります)</td>
</tr>
<tr class="even">
<td><code>html-indent-size</code></td>
<td>“1.2em”</td>
<td>HTML</td>
<td>ネストされたブロックのインデント サイズ</td>
</tr>
<tr class="odd">
<td><code>html-comment-delimiter</code></td>
<td>“//”</td>
<td>HTML</td>
<td>コメント デリミタ文字</td>
</tr>
<tr class="even">
<td><code>html-line-number</code></td>
<td>true</td>
<td>HTML</td>
<td>行番号を表示</td>
</tr>
<tr class="odd">
<td><code>html-line-number-punc</code></td>
<td>“:”</td>
<td>HTML</td>
<td>行番号の句読点</td>
</tr>
<tr class="even">
<td><code>html-no-end</code></td>
<td>false</td>
<td>HTML</td>
<td>末尾のキーワードを非表示</td>
</tr>
<tr class="odd">
<td><code>pdf-placement</code></td>
<td>“H”</td>
<td>PDF</td>
<td>フロート配置 (htbp!)</td>
</tr>
<tr class="even">
<td><code>pdf-line-number</code></td>
<td>true</td>
<td>PDF</td>
<td>行番号を表示</td>
</tr>
</tbody>
</table>
<p><span class="mini-section">CSS styleの設定</span></p>
<p>設定用CSSファイルに以下のような記述をすることでfontやcontainerの設定ができます</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.pseudocode-container</span> {</span>
<span id="cb8-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">solid</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">#ddd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border-radius</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">padding</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">}</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.ps-algorithm</span> {</span>
<span id="cb8-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-family</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Courier New'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">monospace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">}</span></code></pre></div>
</section>
<section id="appendix-uppercamelcase" class="level2">
<h2 class="anchored" data-anchor-id="appendix-uppercamelcase">Appendix: UpperCamelCase</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 21%">
<col style="width: 49%">
<col style="width: 28%">
</colgroup>
<thead>
<tr class="header">
<th>名称</th>
<th>例</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ALL UPPERCASE</strong></td>
<td><code>PROJECT</code>, <code>TYPE</code>, <code>EXTENSIONS</code></td>
<td>全部大文字</td>
</tr>
<tr class="even">
<td><strong>UpperCamelCase</strong></td>
<td><code>Project</code>, <code>Type</code>, <code>Extensions</code></td>
<td>各単語の先頭が大文字（キャメルケース）</td>
</tr>
<tr class="odd">
<td><strong>lowerCamelCase</strong></td>
<td><code>project</code>, <code>projectType</code>, <code>extensionList</code></td>
<td>1語目は小文字で始め，2語目以降の先頭を大文字</td>
</tr>
<tr class="even">
<td><strong>snake_case</strong></td>
<td><code>project_type</code>, <code>extension_list</code></td>
<td>単語をアンダースコア <code>_</code> でつなぐ</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://github.com/leovan/quarto-pseudocode#readme">Quarto Pseudocode Extension</a></li>
</ul>


</section>

 ]]></description>
  <category>pseudocode</category>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-31-how-to-write-pseudocode-in-quarto/</guid>
  <pubDate>Thu, 31 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>なぜテキストファイルは改行で終わるべきなのか？</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-30-POSIX-File-end-with-newline/</link>
  <description><![CDATA[ 






<section id="posix標準の考え方" class="level2">
<h2 class="anchored" data-anchor-id="posix標準の考え方">POSIX標準の考え方</h2>
<div id="def-posix-incompete" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">3.195 Incomplete Line</span></p>
<ul>
<li>A sequence of one or more non-<code>&lt;newline&gt;</code> characters at the end of the file.</li>
</ul>
</div>
<div id="def-posix" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">3.206 Line</span></p>
<ul>
<li>A sequence of zero or more non-<code>&lt;newline&gt;</code> characters plus a terminating <code>&lt;newline&gt;</code> character.</li>
<li>Lineとは，1つ以上の <code>&lt;newline&gt;</code> 文字以外の文字と，行末の <code>&lt;newline&gt;</code> 文字によって成り立つ</li>
</ul>
</div>
<p>多くのUNIX系のツールは Definition&nbsp;2 に基づいており，改行文字で終わらない「行」は Definition&nbsp;1 のように「行」とはみなされません．</p>
<p><span class="mini-section">Editorと改行</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 28%">
<col style="width: 71%">
</colgroup>
<thead>
<tr class="header">
<th>エディタ</th>
<th>末尾の改行の挙動</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>VS Code</strong></td>
<td>設定次第で自動追加 (<code>files.insertFinalNewline</code>)</td>
</tr>
<tr class="even">
<td><strong>Vim</strong></td>
<td>デフォルトで改行追加（<code>:set nofixeol</code> で抑制可）</td>
</tr>
<tr class="odd">
<td><strong>Emacs</strong></td>
<td>デフォルトで改行追加（<code>require-final-newline</code> 変数）</td>
</tr>
</tbody>
</table>
<section id="catコマンドと結合" class="level3">
<h3 class="anchored" data-anchor-id="catコマンドと結合"><code>cat</code>コマンドと結合</h3>
<p><code>cat</code> でファイルを結合する場合，改行で終わるファイル (<code>a.txt</code> と <code>c.txt</code>) と改行で終わらないファイル (<code>b.txt</code>) では，結合時の挙動が異なります．</p>
<p>まず，改行ありと改行なしの<code>.txt</code>ファイルを生成します</p>
<p><span class="mini-section">改行ありファイルの生成</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Bash</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Zsh</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb1-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb1-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> {1..<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb2-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb2-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
</div>
<p><span class="mini-section">改行なしファイルの生成</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Bash</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Zsh</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb3-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%s"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_without_newline.txt"</span></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> {1..<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb4-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%s"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_without_newline.txt"</span></span>
<span id="cb4-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
</div>
<p>つぎに <code>cat</code>コマンドで結合をしてみます．</p>
<p><span class="mini-section">cat コマンドで結合</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">改行ありファイル</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">改行なしファイル</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>.txt</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">foo</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bar</span></span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">baz</span></span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>_without_newline.txt      </span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">foobarbaz%</span> </span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="wc-commandと改行" class="level3">
<h3 class="anchored" data-anchor-id="wc-commandと改行"><code>wc</code> commandと改行</h3>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3</strong></span> <span class="def-title"><code>wc</code> コマンドマニュアル</span></p>
<ul>
<li>A line is defined as a string of characters delimited by a <code>&lt;newline&gt;</code> character.</li>
</ul>
</div>
<p><code>wc</code>コマンドは <code>&lt;newline&gt;</code> の数で行数を数えています．実際に</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 改行なし</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line not ending in a new line"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 改行あり</span></span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line ending with a new line"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">結合ファイルと<code>wc</code>コマンド</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">改行ありファイル</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">改行なしファイル</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>.txt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>_without_newline.txt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<hr>
</section>
</section>
<section id="git-trackingテキストファイルを対象に改行有無判定スクリプト" class="level2">
<h2 class="anchored" data-anchor-id="git-trackingテキストファイルを対象に改行有無判定スクリプト">git trackingテキストファイルを対象に改行有無判定スクリプト</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
スクリプト全体
</div>
</div>
<div class="callout-body-container callout-body">
<p>以下のシェルスクリプトは，バイナリファイルを除外した上で，ファイル末尾の改行の有無をチェックするスクリプトです</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> ls-files <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-z</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb10-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing newline: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
<p><span class="mini-section">アルゴリズム</span></p>
<pre id="git-check-newline">\begin{algorithm}
\caption{Checking Files for Missing Trailing Newlines}
\begin{algorithmic}
\State file\_list \(\leftarrow\) Get all Git-tracked files with NUL delimiter
\ForAll{file in file\_list}
    \State mime\_info \(\leftarrow\) \texttt{file --mime file}
    \If{mime\_info contains "charset=binary" OR "image/svg+xml"}
        \State \textbf{continue (skip binary/SVG files)}
    \Else
        \State last\_byte \(\leftarrow\) Get final byte of file
        \If{last\_byte is not newline character}
            \State Output "Missing newline: file"
        \EndIf
    \EndIf
\EndFor
\end{algorithmic}
\end{algorithm}
</pre>
<script>
    pseudocode.renderElement(document.getElementById("git-check-newline"));
</script>
<p><span class="mini-section">各コマンド</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 43%">
<col style="width: 56%">
</colgroup>
<thead>
<tr class="header">
<th>コマンド</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>git ls-files -z</code></td>
<td>Gitで管理されているファイルを一覧表示<br><code>-z</code>オプションで区切り文字としてNUL文字を使用（ファイル名に特殊文字が含まれる場合の安全な処理のため）</td>
</tr>
<tr class="even">
<td><code>while IFS= read -r -d '' file</code></td>
<td>NUL文字を区切りとしてファイルを順次処理<br><code>IFS=</code>で空白文字の保持<br><code>-r</code>でバックスラッシュの解釈を防止<br><code>-d ''：read</code> でヌル文字区切りに対応</td>
</tr>
<tr class="odd">
<td><code>file --mime "${file}" | grep -q -e "charset=binary" -e "image/svg+xml" ||</code></td>
<td>バイナリファイルとSVGファイルをスキップ<br>テキストファイルのみを処理<br><code>||</code>は「このコマンドが失敗した場合に次のコマンドを実行」を意味</td>
</tr>
<tr class="even">
<td><code>tail -c1 "${file}" | read -r _ ||</code></td>
<td>ファイルの最後の1バイトをチェック<br><code>read</code>は改行があれば0，なければ1を返す</td>
</tr>
<tr class="odd">
<td><code>echo "Missing newline: ${file}"</code></td>
<td>改行のないファイルを報告</td>
</tr>
</tbody>
</table>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">カレントディレクトリ以下のファイルに対しての改行判定スクリプト</span></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-maxdepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb11-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing newline: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<ul>
<li><code>-print0</code>: 各ファイル名の末尾に NUL文字 (<code>\0</code>) を付けて出力</li>
</ul>
</div>
<hr>
<section id="改行なしと判定されたファイルに対してnewlineを付与する" class="level3">
<h3 class="anchored" data-anchor-id="改行なしと判定されたファイルに対してnewlineを付与する">改行なしと判定されたファイルに対して<code>&lt;newline&gt;</code>を付与する</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
シェルスクリプト
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-maxdepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># バイナリファイルやSVGはスキップ</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb12-4"></span>
<span id="cb12-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 最後の1バイトを確認（改行がないなら）</span></span>
<span id="cb12-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb12-7">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✓ Newline added to: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb12-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
<ul>
<li><code>echo &gt;&gt; "$file"</code> で<code>&lt;newline&gt;</code>を行末に追加</li>
</ul>
</section>
</section>
<section id="改行忘れの対策" class="level2">
<h2 class="anchored" data-anchor-id="改行忘れの対策">改行忘れの対策</h2>
<section id="editorconfigの用いた改行設定" class="level3">
<h3 class="anchored" data-anchor-id="editorconfigの用いた改行設定"><code>.editorconfig</code>の用いた改行設定</h3>
<p><span class="mini-section">EditorConfigとは?</span></p>
<ul>
<li>コードスタイル（インデントや改行コードなど）を統一するための設定ファイルの仕組み</li>
<li>異なるエディタ・OS間でのコードスタイルを統一させたいときに便利なツール</li>
</ul>
<p><span class="mini-section">EditorConfigによる改行設定例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 31%">
<col style="width: 38%">
</colgroup>
<thead>
<tr class="header">
<th>プロパティ名</th>
<th>内容</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>indent_style</code></td>
<td>インデントの種類（<code>space</code> または <code>tab</code>）</td>
<td><code>indent_style = space</code></td>
</tr>
<tr class="even">
<td><code>indent_size</code></td>
<td>インデントの幅</td>
<td><code>indent_size = 4</code></td>
</tr>
<tr class="odd">
<td><code>end_of_line</code></td>
<td>改行コード（<code>lf</code>/<code>crlf</code>/<code>cr</code>）</td>
<td><code>end_of_line = lf</code></td>
</tr>
<tr class="even">
<td><code>charset</code></td>
<td>文字コード</td>
<td><code>charset = utf-8</code></td>
</tr>
<tr class="odd">
<td><code>trim_trailing_whitespace</code></td>
<td>行末の空白を削除するか</td>
<td><code>trim_trailing_whitespace = true</code></td>
</tr>
<tr class="even">
<td><code>insert_final_newline</code></td>
<td>最終行の末尾に改行を追加するか</td>
<td><code>insert_final_newline = true</code></td>
</tr>
</tbody>
</table>
</div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .editorconfig</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># このファイルが設定のルートであることを示す</span></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root</span> = true</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># すべてのファイルに適用</span></span>
<span id="cb13-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[*]</span></span>
<span id="cb13-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">indent_style</span> = space</span>
<span id="cb13-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">indent_size</span> = 4</span>
<span id="cb13-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">end_of_line</span> = lf</span>
<span id="cb13-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">charset</span> = utf-8</span>
<span id="cb13-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trim_trailing_whitespace</span> = true</span>
<span id="cb13-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">insert_final_newline</span> = true</span></code></pre></div>
</section>
<section id="vscodeでの改行設定" class="level3">
<h3 class="anchored" data-anchor-id="vscodeでの改行設定">VSCodeでの改行設定</h3>
<p><code>settings.json</code>で以下の項目を追加します</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Editor</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Settings</span></span>
<span id="cb14-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"files.insertFinalNewline"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"notebook.insertFinalNewline"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 40%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>設定キー</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>"files.insertFinalNewline": true</code></td>
<td>ファイル保存時に、末尾に改行を自動で追加します（通常の <code>.txt</code>, <code>.js</code>, <code>.py</code> などすべて対象）</td>
</tr>
<tr class="even">
<td><code>"notebook.insertFinalNewline": true</code></td>
<td>Jupyter Notebook（<code>.ipynb</code>）などのノートブック形式のファイルにおいて、セル内のソースに末尾改行を追加する設定（拡張機能依存）</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="appendix-改行コードの種類" class="level2">
<h2 class="anchored" data-anchor-id="appendix-改行コードの種類">Appendix: 改行コードの種類</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 5%">
<col style="width: 23%">
<col style="width: 20%">
<col style="width: 14%">
<col style="width: 26%">
</colgroup>
<thead>
<tr class="header">
<th>改行コード</th>
<th>記号</th>
<th>名称</th>
<th>主なOS</th>
<th>バイナリ表現</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>LF</code></td>
<td><code>\n</code></td>
<td>Line Feed（行送り）</td>
<td>Linux / macOS（Unix系）</td>
<td><code>0x0A</code></td>
<td>行末で「次の行の先頭」に移動</td>
</tr>
<tr class="even">
<td><code>CRLF</code></td>
<td><code>\r\n</code></td>
<td>Carriage Return + Line Feed</td>
<td>Windows</td>
<td><code>0x0D 0x0A</code></td>
<td>行頭に戻りつつ次の行へ（古いタイプライタ由来）</td>
</tr>
<tr class="odd">
<td><code>CR</code></td>
<td><code>\r</code></td>
<td>Carriage Return（復帰）</td>
<td>古いMac OS（〜OS9）</td>
<td><code>0x0D</code></td>
<td>行頭に戻るだけ（現在はほぼ使われない）</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">歴史的背景</span></p>
<p>タイプライターの動きと対応させると改行には３つの考え方がありました</p>
<ul>
<li><code>LF</code> は紙を上に移動させ (水平方向の位置は変わらない)</li>
<li><code>CR</code> は「キャリッジ」を戻して，次の入力文字が紙の左端の同じ行に表示</li>
<li><code>CR+LF</code> は両方を実行し，新しい行の入力準備</li>
</ul>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_206">POSIX standard</a></li>
<li><a href="https://editorconfig.org/">EditorConfig</a></li>
</ul>


</section>

 ]]></description>
  <category>coding</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-30-POSIX-File-end-with-newline/</guid>
  <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto Version更新用スクリプト</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-29-update-quarto/</link>
  <description><![CDATA[ 






<section id="quarto-version-updateスクリプト" class="level2">
<h2 class="anchored" data-anchor-id="quarto-version-updateスクリプト">📘 Quarto Version Updateスクリプト</h2>
<ul>
<li>現在インストールされているQuarto Versionを削除し，GitHubから対応する <code>.deb</code> ファイルをダウンロードして，指定したバージョンをインストールします</li>
<li>実行前に，<a href="https://quarto.org/docs/download/">公式のQuartoダウンロードページ</a>で利用可能なQuarto Versionを確認してください</li>
<li>実行の結果，<code>/opt/quarto</code> にQuartoがインストールされます</li>
</ul>
<section id="requirements" class="level3">
<h3 class="anchored" data-anchor-id="requirements">💻 Requirements</h3>
<ul>
<li>Debian/Ubuntu-based Linux OS</li>
<li><code>curl</code>, <code>dpkg</code>, <code>gdebi-core</code>, <code>sudo</code></li>
<li>インターネット接続環境</li>
<li>管理者権限 <code>27(sudo)</code></li>
</ul>
</section>
</section>
<section id="メインスクリプト" class="level2">
<h2 class="anchored" data-anchor-id="メインスクリプト">🔨 メインスクリプト</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: please check https://quarto.org/docs/download/ before running this script</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-euo</span> pipefail</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check for updates</span></span>
<span id="cb1-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto is not installed. Please install it first."</span></span>
<span id="cb1-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb1-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prompt for confirmation</span></span>
<span id="cb1-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do you want to update Quarto? (y/n): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">confirm</span></span>
<span id="cb1-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$confirm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">^</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Yy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]$</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update cancelled."</span></span>
<span id="cb1-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb1-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ask user for version</span></span>
<span id="cb1-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter the Quarto version you want to install (e.g., 1.7.32): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_VERSION</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm version input is non-empty</span></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$QUARTO_VERSION</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-26">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No version specified. Aborting."</span></span>
<span id="cb1-27">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define download URL and file name</span></span>
<span id="cb1-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb1-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_FILE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove existing version</span></span>
<span id="cb1-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Removing existing Quarto installation..."</span></span>
<span id="cb1-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> quarto <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto was not fully removed, continuing..."</span></span>
<span id="cb1-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download and install the specified version</span></span>
<span id="cb1-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading Quarto version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span></span>
<span id="cb1-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_URL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-43"></span>
<span id="cb1-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installing Quarto..."</span></span>
<span id="cb1-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gdebi <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation failed."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb1-46"></span>
<span id="cb1-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto updated successfully to version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span></span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify installation</span></span>
<span id="cb1-50"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-52">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check</span>
<span id="cb1-53"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb1-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto installation failed. Please check the logs."</span></span>
<span id="cb1-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-57"></span>
<span id="cb1-58"></span>
<span id="cb1-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean up</span></span>
<span id="cb1-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-61"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temporary files cleaned up."</span></span></code></pre></div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">実行例</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ./quarto-update.sh</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> version: 1.4.550</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Do</span> you want to update Quarto<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y/n</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> y</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Enter</span> the Quarto version you want to install <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">e.g.,</span> 1.7.32<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> 1.7.32</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Removing</span> existing Quarto installation...</span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Downloading</span> Quarto version 1.7.32...</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Installing</span> Quarto...</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> updated successfully to version 1.7.32.</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> version: 1.7.32</span></code></pre></div>
</div>
<hr>
<section id="スクリプト解説" class="level3">
<h3 class="anchored" data-anchor-id="スクリプト解説">🔍 スクリプト解説</h3>
<p><span class="mini-section">初期設定部分</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-euo</span> pipefail</span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>option</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>-e</code></td>
<td>エラーが発生した時点でスクリプトを終了</td>
</tr>
<tr class="even">
<td><code>-u</code></td>
<td>未定義の変数を使用した際にエラーを発生</td>
</tr>
<tr class="odd">
<td><code>-o pipefail</code></td>
<td>パイプラインの途中でエラーが発生した場合に検知</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">ユーザー確認と入力</span></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do you want to update Quarto? (y/n): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">confirm</span></span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$confirm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">^</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Yy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]$</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update cancelled."</span></span>
<span id="cb4-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter the Quarto version you want to install (e.g., 1.7.32): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_VERSION</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$QUARTO_VERSION</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No version specified. Aborting."</span></span>
<span id="cb4-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb4-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>アップデートの実行確認をユーザーに求める</li>
<li>インストールしたいQuartoのバージョンを入力させる</li>
<li>バージョン番号が未入力の場合は，<code>exit 1</code></li>
</ul>
<p><span class="mini-section">ダウンロードとインストールの準備</span></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_FILE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span></code></pre></div>
<ul>
<li>GitHubからダウンロードするdebパッケージのURLを構築</li>
<li>ローカルに保存するファイル名を設定</li>
</ul>
<p><span class="mini-section">既存のQuartoの削除</span></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Removing existing Quarto installation..."</span></span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> quarto <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto was not fully removed, continuing..."</span></span>
<span id="cb6-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>既存のQuartoインストールを検出して削除</li>
<li>削除に失敗してもスクリプトは継続</li>
</ul>
<p><span class="mini-section">新バージョンのインストール</span></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading Quarto version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_URL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installing Quarto..."</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gdebi <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation failed."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li><code>gdebi</code> コマンドでインストールを実行</li>
<li><code>dpkg -i</code>でも良いが，<code>gdebi</code>は必要な依存関係を自動で解決してくれます</li>
</ul>
<p><span class="mini-section">インストール確認</span></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb8-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check</span>
<span id="cb8-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb8-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto installation failed. Please check the logs."</span></span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb8-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>インストールが成功したか確認</li>
<li>新しいバージョンを表示</li>
<li><code>quarto check</code>でシステム要件を確認</li>
</ul>
<p><span class="mini-section">command -v quarto &amp;&gt; /dev/null コマンド</span></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>command-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>シェルの組み込みコマンドで指定されたコマンドのパスを探索してくれます</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>command</code></td>
<td>シェルの組み込みコマンドで，指定されたコマンドのパスを探索</td>
</tr>
<tr class="even">
<td><code>-v</code></td>
<td>コマンドのフルパスを表示</td>
</tr>
<tr class="odd">
<td><code>quarto</code></td>
<td>ここでは検索対象のコマンド名</td>
</tr>
<tr class="even">
<td><code>&amp;&gt;</code></td>
<td>標準出力(stdout)と標準エラー出力(stderr)の両方をリダイレクト</td>
</tr>
<tr class="odd">
<td><code>/dev/null</code></td>
<td>全ての出力を破棄する特殊なデバイスファイル</td>
</tr>
</tbody>
</table>
</div>
<p><code>&amp;&gt; /dev/null</code> を設定することによって，</p>
<ul>
<li>コマンドが見つかった場合: パスの出力は<code>/dev/null</code>に捨てた上で，<code>exit 0</code>（終了コード0）</li>
<li>コマンドが見つからない場合: エラーメッセージは<code>/dev/null</code>に捨てられるが，<code>exit 1</code>（終了コード1） 扱い</li>
</ul>
<p><span class="mini-section">不要な .deb ファイルの削除</span></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temporary files cleaned up."</span></span></code></pre></div>
<ul>
<li>ダウンロードした<code>.deb</code>パッケージを削除</li>
</ul>


</section>
</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-29-update-quarto/</guid>
  <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>実行時間計測デコレーター</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-20-decorator-checking-running-time/</link>
  <description><![CDATA[ 






<section id="実行時間を秒単位で表示するデコレータ" class="level2">
<h2 class="anchored" data-anchor-id="実行時間を秒単位で表示するデコレータ">実行時間を秒単位で表示するデコレータ</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">デコレーター</span></p>
<ul>
<li>デコレータとは，関数の前後に追加処理（ロギング・計測・バリデーションなど）を組み込む仕組み</li>
</ul>
</div>
<div id="966d2791" class="cell" data-execution_count="1">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> time <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time, sleep</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> running_time(func):</span>
<span id="cb1-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    関数の実行時間（秒）を有効桁小数点３桁で表示して、元の関数の戻り値を返すデコレータ</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb1-8">        start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb1-9">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb1-10">        end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb1-11">        elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb1-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span>
<span id="cb1-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span></code></pre></div>
</details>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">カントールの対関数の逆関数と実行時間計算</span></p>
<div id="ba4b4da0" class="cell" data-execution_count="2">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@running_time</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_contor_inverse(J: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Compute the inverse of the Cantor pairing function.</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The Cantor pairing function maps pairs of natural numbers to single natural numbers.</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function computes the inverse mapping, taking a natural number and returning the </span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    original pair of numbers.</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        J (int): A natural number that was produced by the Cantor pairing function.</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Must be non-negative.</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tuple[int, int]: A pair (x, y) of numbers such that their Cantor pairing </span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        would produce J. The first element x represents the first number in the original </span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pair, and y represents the second number.</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-20"></span>
<span id="cb2-21">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>((np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> J) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-22">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> J</span>
<span id="cb2-23">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> J <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-24"></span>
<span id="cb2-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x, y</span>
<span id="cb2-26"></span>
<span id="cb2-27"></span>
<span id="cb2-28">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_contor_inverse(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 0.000 seconds
(1018, 9)</code></pre>
</div>
</div>
</div>
<hr>
</section>
<section id="デコレーター自身に引数を読み込ませる場合" class="level2">
<h2 class="anchored" data-anchor-id="デコレーター自身に引数を読み込ませる場合">デコレーター自身に引数を読み込ませる場合</h2>
<p>上記の <code>running_time</code> で小数点桁数を３桁固定としていましたが，これを引数に応じて変化させる場合を考えます．</p>
<div id="b8454087" class="cell" data-execution_count="3">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> time <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time, sleep</span>
<span id="cb4-2"></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> running_time_with_input(decimal: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb4-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> decorator(func):</span>
<span id="cb4-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        関数の実行時間（秒）を有効桁小数点３桁で表示して、元の関数の戻り値を返すデコレータ</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-9"></span>
<span id="cb4-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb4-11">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb4-12">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb4-13">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb4-14">            elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb4-15">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.</span>{decimal}f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span>
<span id="cb4-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span>
<span id="cb4-17"></span>
<span id="cb4-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span>
<span id="cb4-19"></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> decorator</span></code></pre></div>
</details>
</div>
<p><span class="mini-section">実行例</span></p>
<div id="adcd9aa1" class="cell" data-execution_count="4">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@running_time_with_input</span>(decimal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> do_task():</span>
<span id="cb5-3">    sleep(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2345</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">do_task()</span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># =&gt; Execution time: 1.23 seconds</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 1.2346415520 seconds</code></pre>
</div>
</div>
</section>
<section id="appendix-args-と-kwargs" class="level2">
<h2 class="anchored" data-anchor-id="appendix-args-と-kwargs">Appendix: <code>*args</code> と <code>**kwargs</code></h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 45%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>書き方</th>
<th>意味</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>*args</code></td>
<td>タプルとして位置引数を全部受け取る</td>
<td><code>func(1, 2, 3)</code> → <code>args = (1, 2, 3)</code></td>
</tr>
<tr class="even">
<td><code>**kwargs</code></td>
<td>辞書としてキーワード引数を全部受け取る</td>
<td><code>func(a=10, b=20)</code> → <code>kwargs = {'a': 10, 'b': 20}</code></td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">動作確認</span></p>
<div id="84971ad2" class="cell" data-execution_count="5">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> example(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb7-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args:"</span>, args)</span>
<span id="cb7-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kwargs:"</span>, kwargs)</span>
<span id="cb7-4"></span>
<span id="cb7-5">example(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>args: (1, 2, 3)
kwargs: {'a': 10, 'b': 20}</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>python</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-20-decorator-checking-running-time/</guid>
  <pubDate>Sun, 20 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>NautilusからSSH先のファイルを操作する</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/</link>
  <description><![CDATA[ 






<section id="ssh先のファイルをnautilusで操作する" class="level2">
<h2 class="anchored" data-anchor-id="ssh先のファイルをnautilusで操作する">SSH先のファイルをNautilusで操作する</h2>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">手順</span></p>
<ol type="1">
<li>NautilusをClient側で開く</li>
<li>サイドバー下部の「その他の場所」をクリック</li>
<li>「サーバーへ接続」に以下を入力：</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ユーザー名<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>@<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ホスト名またはIPアドレス<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<p><span class="mini-section">入力箇所</span></p>
<p>Nautilusのbottom sectionにある「Connect to Server」の<code>Enter server address ...</code> の部分で接続設定をします．<code>.ssh/config</code>で</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host pupupuserver</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName 192.168.1.100</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span></code></pre></div>
<p>とHost設定を行っていれば</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://pupupuserver</span></span></code></pre></div>
<p>と入力してもOKです．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/nautilus.png" class="img-fluid figure-img"></p>
<figcaption>nautilus</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
sshfsを用いたmount
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> ./remote</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sshfs</span> pupupuserver:/home/kirby ./remote</span></code></pre></div>
<p>とすれば，ローカルのフォルダに直接ssh接続先ディレクトリをマウントすることができます．個人の方針として，</p>
<ul>
<li>アクセスしたいディレクトリが明確に定まっている状況</li>
<li>分析プロジェクトとかでVSCode経由でSサーバーディレクトリを操作したいとき</li>
</ul>
<p>という状況のときに使用しています．</p>
</div>
</div>
</section>
<section id="多段ssh踏み台サーバ経由の場合" class="level2">
<h2 class="anchored" data-anchor-id="多段ssh踏み台サーバ経由の場合">多段SSH（踏み台サーバ経由）の場合</h2>
<p>踏み台設定は以下のような状況を考えます</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host jumpserver</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName jump.example.com</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host targetserver</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName 192.168.1.110</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span></code></pre></div>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">手順: SSHトンネルを張ってlocalhostに接続</span></p>
<ol type="1">
<li>SSHトンネルを貼る</li>
</ol>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> 2222:192.168.1.110:22 kirby@jump.example.com</span></code></pre></div>
<ol start="2" type="1">
<li>サイドバー下部の「その他の場所」をクリック</li>
<li>「サーバーへ接続」に以下を入力：</li>
</ol>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://kirby@localhost:2222</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>Linux</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/</guid>
  <pubDate>Sat, 19 Jul 2025 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
