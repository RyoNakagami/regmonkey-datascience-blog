<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>regmonkey datascience blog</title>
<link>https://ryonakagami.github.io/regmonkey-datascience-blog/</link>
<atom:link href="https://ryonakagami.github.io/regmonkey-datascience-blog/index.xml" rel="self" type="application/rss+xml"/>
<description>日々の徒然勉強日記</description>
<generator>quarto-1.7.33</generator>
<lastBuildDate>Thu, 31 Jul 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Quarto Projectへのpseudocode extensions導入</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-31-how-to-write-pseudocode-in-quarto/</link>
  <description><![CDATA[ 






<section id="ゴール" class="level2">
<h2 class="anchored" data-anchor-id="ゴール">🎯 ゴール</h2>
<ul>
<li>Quarto PropjectのHTMLレンダリングで<a href="https://github.com/SaswatPadhi/pseudocode.js">Pseudocode</a>を利用可能にする</li>
</ul>
<section id="requirements" class="level3">
<h3 class="anchored" data-anchor-id="requirements">💻 Requirements</h3>
<ul>
<li>Quarto がインストール済み</li>
<li>Quarto プロジェクト（blogやbook）を作成済み</li>
</ul>
</section>
</section>
<section id="拡張機能のインストール" class="level2">
<h2 class="anchored" data-anchor-id="拡張機能のインストール">✅ 拡張機能のインストール</h2>
<p><a href="https://github.com/leovan/quarto-pseudocode#readme">Quarto Pseudocode Extension</a>をQuarto Projectに<code>quarto</code>コマンドでインストールします:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> add leovan/quarto-pseudocode</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/_extensions</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> leovan</span>
<span id="cb2-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> pseudocode</span>
<span id="cb2-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> _extension.yml</span>
<span id="cb2-5">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> pseudocode.lua</span>
<span id="cb2-6">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> pseudocode.min.css</span>
<span id="cb2-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> pseudocode.min.js</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
REMARKS
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Project単位でのインストールとなります</li>
</ul>
</div>
</div>
</section>
<section id="拡張機能利用のための設定" class="level2">
<h2 class="anchored" data-anchor-id="拡張機能利用のための設定">🔨 拡張機能利用のための設定</h2>
<p><code>_quarto.yml</code> に対して <code>filters</code>項目を以下のように追加します:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output-dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> _site</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pseudocode</span></span></code></pre></div>
</div>
<section id="math-setup" class="level3">
<h3 class="anchored" data-anchor-id="math-setup">Math Setup</h3>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-in-header</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> include/mathjax.html</span></span></code></pre></div>
</div>
<p>上記の<code>include/mathjax.html</code>に対して以下のようなLinesを設定します</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>include/mathjax.html</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="include/mathjax.html" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-2">    MathJax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-3">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb5-4">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">inlineMath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">('</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-5">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">displayMath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$$'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$$'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">['</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]'</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-6">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">processEscapes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-7">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">processEnvironments</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-8">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-9">        }</span>
<span id="cb5-10">    }</span>
<span id="cb5-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-chtml-full.js"</span></span>
<span id="cb5-13"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">        integrity</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-kbAFUDxdHwlYv01zraGjvjNZayxKtdoiJ38bDTFJtaQ="</span></span>
<span id="cb5-14"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">        crossorigin</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anonymous"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<p><span class="mini-section">MathJax Options</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 21%">
<col style="width: 78%">
</colgroup>
<thead>
<tr class="header">
<th>Keys</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>inlineMath</code></td>
<td><strong>インライン数式</strong> のマーカー指定．<br>例：<code>$a^2 + b^2 = c^2$</code> または <code>\(...\)</code></td>
</tr>
<tr class="even">
<td><code>displayMath</code></td>
<td><strong>ディスプレイ数式（中央寄せで大きく表示）</strong> のマーカー指定．<br>例：<code>$$E = mc^2$$</code> または <code>\[...\]</code></td>
</tr>
<tr class="odd">
<td><code>processEscapes</code></td>
<td>バックスラッシュを <strong>エスケープとして解釈するか</strong>．<code>true</code> にすると <code>\\(</code> を <code>\(</code> として扱えるようになる</td>
</tr>
<tr class="even">
<td><code>processEnvironments</code></td>
<td><code>\begin{...} ... \end{...}</code> 形式の <strong>LaTeX 環境</strong> を使えるようにする</td>
</tr>
<tr class="odd">
<td><code>tags: 'all'</code></td>
<td>式番号を付ける場所の指定．<br><code>'all'</code> は <strong>display 数式すべて</strong> に番号を振る（<code>\begin{equation}</code> でなくても）</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">MathJax本体の読み込み設定</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 24%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>属性</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>src</code></td>
<td>CDN 上の MathJax v3 スクリプト．<code>tex-chtml-full.js</code> は <strong>LaTeX入力 + HTML/CSS出力</strong> 対応の完全版</td>
</tr>
<tr class="even">
<td><code>integrity</code></td>
<td><strong>Subresource Integrity（SRI）</strong> チェック用ハッシュ（改ざん防止）</td>
</tr>
<tr class="odd">
<td><code>crossorigin="anonymous"</code></td>
<td>SRI を有効にするための指定</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="algorithm表記設定" class="level3">
<h3 class="anchored" data-anchor-id="algorithm表記設定">Algorithm表記設定</h3>
<p>Pseudocodeの参照または参照時の表示を設定する場合，<code>_quarto.yml</code>に以下のように記載します</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pseudocode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caption-prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"アルゴリズム"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # DefaultはAlgorithm</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reference-prefix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"アルゴリズム"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # DefaultはAlgorithm</span></span></code></pre></div>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 17%">
<col style="width: 26%">
<col style="width: 12%">
<col style="width: 42%">
</colgroup>
<thead>
<tr class="header">
<th>オプション名</th>
<th>意味</th>
<th>デフォルト</th>
<th>解説</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>caption-prefix</code></td>
<td>キャプションの前に付ける語句</td>
<td><code>"Algorithm"</code></td>
<td>例：<code>Algorithm 1: Euclidean</code> のような見出しに使われる</td>
</tr>
<tr class="even">
<td><code>reference-prefix</code></td>
<td><code>@ref(fig:xxx)</code> のような参照時の接頭辞</td>
<td><code>"Algorithm"</code></td>
<td>参照時に <code>Algorithm 1</code> のように表示されます</td>
</tr>
<tr class="odd">
<td><code>caption-number</code></td>
<td>番号付けの有無</td>
<td><code>true</code></td>
<td><code>false</code> にすると <code>Algorithm: xxx</code> のように番号なしになる</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="pseudocode-blockの記述方法" class="level2">
<h2 class="anchored" data-anchor-id="pseudocode-blockの記述方法">📘 Pseudocode Blockの記述方法</h2>
<p><code>pseudocode</code>コードブロックの中にPseudocodeを以下のように記述すると，Algorithm 1 のような出力になります．</p>
<pre>```pseudocode
#| html-indent-size: "1.2em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: false
#| pdf-placement: "htb!"
#| pdf-line-number: true

\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\Procedure{Quicksort}{$A, p, r$}
  \If{$p &lt; r$}
    \State $q = $ \Call{Partition}{$A, p, r$}
    \State \Call{Quicksort}{$A, p, q - 1$}
    \State \Call{Quicksort}{$A, q + 1, r$}
  \EndIf
\EndProcedure
\Procedure{Partition}{$A, p, r$}
  \State $x = A[r]$
  \State $i = p - 1$
  \For{$j = p$ \To $r - 1$}
    \If{$A[j] &lt; x$}
      \State $i = i + 1$
      \State exchange
      $A[i]$ with     $A[j]$
    \EndIf
    \State exchange $A[i]$ with $A[r]$
  \EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}
```
</pre>
<div id="alg-quicksort" class="pseudocode-container quarto-float" data-line-number="true" data-caption-prefix="Algorithm" data-line-number-punc=":" data-comment-delimiter="//" data-pseudocode-number="1" data-no-end="false" data-indent-size="1.2em">
<div class="pseudocode">
\begin{algorithm} \caption{Quicksort} \begin{algorithmic} \Procedure{Quicksort}{$A, p, r$} \If{$p &lt; r$} \State $q = $ \Call{Partition}{$A, p, r$} \State \Call{Quicksort}{$A, p, q - 1$} \State \Call{Quicksort}{$A, q + 1, r$} \EndIf \EndProcedure \Procedure{Partition}{$A, p, r$} \State $x = A[r]$ \State $i = p - 1$ \For{$j = p$ \To $r - 1$} \If{$A[j] &lt; x$} \State $i = i + 1$ \State exchange $A[i]$ with $A[j]$ \EndIf \State exchange $A[i]$ with $A[r]$ \EndFor \EndProcedure \end{algorithmic} \end{algorithm}
</div>
</div>
</section>
<section id="quarto-pseudocode-の仕様" class="level2">
<h2 class="anchored" data-anchor-id="quarto-pseudocode-の仕様"><code>quarto-pseudocode</code> の仕様</h2>
<p><span class="mini-section">Syntax</span></p>
<ul>
<li>キーワードには大文字と小文字の形式(UpperCamelCase) (例: <code>\Procedure</code>, <code>\If</code>, <code>\EndIf</code>) を使用</li>
<li>数式は標準の LaTeX 数式構文をサポート</li>
</ul>
<p><span class="mini-section">Block Parameters</span></p>
<p>コメント形式のパラメーターを以下のように記載することができます．</p>
<pre><code>#| label: alg-my-algorithm
#| html-indent-size: "1.2em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: false
#| pdf-placement: "htb!"
#| pdf-line-number: true

\begin{algorithm}
\caption{My Algorithm}
\begin{algorithmic}
...
\end{algorithmic}
\end{algorithm}</code></pre>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>パラメーター</th>
<th>デフォルト</th>
<th>形式</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>label</code></td>
<td></td>
<td>all</td>
<td>クロス参照用のラベル (alg- で始まる必要があります)</td>
</tr>
<tr class="even">
<td><code>html-indent-size</code></td>
<td>“1.2em”</td>
<td>HTML</td>
<td>ネストされたブロックのインデント サイズ</td>
</tr>
<tr class="odd">
<td><code>html-comment-delimiter</code></td>
<td>“//”</td>
<td>HTML</td>
<td>コメント デリミタ文字</td>
</tr>
<tr class="even">
<td><code>html-line-number</code></td>
<td>true</td>
<td>HTML</td>
<td>行番号を表示</td>
</tr>
<tr class="odd">
<td><code>html-line-number-punc</code></td>
<td>“:”</td>
<td>HTML</td>
<td>行番号の句読点</td>
</tr>
<tr class="even">
<td><code>html-no-end</code></td>
<td>false</td>
<td>HTML</td>
<td>末尾のキーワードを非表示</td>
</tr>
<tr class="odd">
<td><code>pdf-placement</code></td>
<td>“H”</td>
<td>PDF</td>
<td>フロート配置 (htbp!)</td>
</tr>
<tr class="even">
<td><code>pdf-line-number</code></td>
<td>true</td>
<td>PDF</td>
<td>行番号を表示</td>
</tr>
</tbody>
</table>
<p><span class="mini-section">CSS styleの設定</span></p>
<p>設定用CSSファイルに以下のような記述をすることでfontやcontainerの設定ができます</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.pseudocode-container</span> {</span>
<span id="cb8-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">solid</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">#ddd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border-radius</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">padding</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">}</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.ps-algorithm</span> {</span>
<span id="cb8-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">font-family</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Courier New'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">monospace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">}</span></code></pre></div>
</section>
<section id="appendix-uppercamelcase" class="level2">
<h2 class="anchored" data-anchor-id="appendix-uppercamelcase">Appendix: UpperCamelCase</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 21%">
<col style="width: 49%">
<col style="width: 28%">
</colgroup>
<thead>
<tr class="header">
<th>名称</th>
<th>例</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ALL UPPERCASE</strong></td>
<td><code>PROJECT</code>, <code>TYPE</code>, <code>EXTENSIONS</code></td>
<td>全部大文字</td>
</tr>
<tr class="even">
<td><strong>UpperCamelCase</strong></td>
<td><code>Project</code>, <code>Type</code>, <code>Extensions</code></td>
<td>各単語の先頭が大文字（キャメルケース）</td>
</tr>
<tr class="odd">
<td><strong>lowerCamelCase</strong></td>
<td><code>project</code>, <code>projectType</code>, <code>extensionList</code></td>
<td>1語目は小文字で始め，2語目以降の先頭を大文字</td>
</tr>
<tr class="even">
<td><strong>snake_case</strong></td>
<td><code>project_type</code>, <code>extension_list</code></td>
<td>単語をアンダースコア <code>_</code> でつなぐ</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://github.com/leovan/quarto-pseudocode#readme">Quarto Pseudocode Extension</a></li>
</ul>


</section>

 ]]></description>
  <category>pseudocode</category>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-31-how-to-write-pseudocode-in-quarto/</guid>
  <pubDate>Thu, 31 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>なぜテキストファイルは改行で終わるべきなのか？</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-30-POSIX-File-end-with-newline/</link>
  <description><![CDATA[ 






<section id="posix標準の考え方" class="level2">
<h2 class="anchored" data-anchor-id="posix標準の考え方">POSIX標準の考え方</h2>
<div id="def-posix-incompete" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">3.195 Incomplete Line</span></p>
<ul>
<li>A sequence of one or more non-<code>&lt;newline&gt;</code> characters at the end of the file.</li>
</ul>
</div>
<div id="def-posix" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">3.206 Line</span></p>
<ul>
<li>A sequence of zero or more non-<code>&lt;newline&gt;</code> characters plus a terminating <code>&lt;newline&gt;</code> character.</li>
<li>Lineとは，1つ以上の <code>&lt;newline&gt;</code> 文字以外の文字と，行末の <code>&lt;newline&gt;</code> 文字によって成り立つ</li>
</ul>
</div>
<p>多くのUNIX系のツールは Definition&nbsp;2 に基づいており，改行文字で終わらない「行」は Definition&nbsp;1 のように「行」とはみなされません．</p>
<p><span class="mini-section">Editorと改行</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 28%">
<col style="width: 71%">
</colgroup>
<thead>
<tr class="header">
<th>エディタ</th>
<th>末尾の改行の挙動</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>VS Code</strong></td>
<td>設定次第で自動追加 (<code>files.insertFinalNewline</code>)</td>
</tr>
<tr class="even">
<td><strong>Vim</strong></td>
<td>デフォルトで改行追加（<code>:set nofixeol</code> で抑制可）</td>
</tr>
<tr class="odd">
<td><strong>Emacs</strong></td>
<td>デフォルトで改行追加（<code>require-final-newline</code> 変数）</td>
</tr>
</tbody>
</table>
<section id="catコマンドと結合" class="level3">
<h3 class="anchored" data-anchor-id="catコマンドと結合"><code>cat</code>コマンドと結合</h3>
<p><code>cat</code> でファイルを結合する場合，改行で終わるファイル (<code>a.txt</code> と <code>c.txt</code>) と改行で終わらないファイル (<code>b.txt</code>) では，結合時の挙動が異なります．</p>
<p>まず，改行ありと改行なしの<code>.txt</code>ファイルを生成します</p>
<p><span class="mini-section">改行ありファイルの生成</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Bash</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Zsh</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb1-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb1-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> {1..<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb2-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.txt"</span></span>
<span id="cb2-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
</div>
<p><span class="mini-section">改行なしファイルの生成</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset" data-group="language">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Bash</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Zsh</a></li></ul>
<div class="tab-content" data-group="language">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb3-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%s"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_without_newline.txt"</span></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>foo bar baz<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span>a b c<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> {1..<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span>}<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb4-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%s"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${words</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_without_newline.txt"</span></span>
<span id="cb4-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
</div>
<p>つぎに <code>cat</code>コマンドで結合をしてみます．</p>
<p><span class="mini-section">cat コマンドで結合</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">改行ありファイル</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">改行なしファイル</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>.txt</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">foo</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bar</span></span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">baz</span></span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>_without_newline.txt      </span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">foobarbaz%</span> </span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="wc-commandと改行" class="level3">
<h3 class="anchored" data-anchor-id="wc-commandと改行"><code>wc</code> commandと改行</h3>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3</strong></span> <span class="def-title"><code>wc</code> コマンドマニュアル</span></p>
<ul>
<li>A line is defined as a string of characters delimited by a <code>&lt;newline&gt;</code> character.</li>
</ul>
</div>
<p><code>wc</code>コマンドは <code>&lt;newline&gt;</code> の数で行数を数えています．実際に</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 改行なし</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line not ending in a new line"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 改行あり</span></span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line ending with a new line"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">結合ファイルと<code>wc</code>コマンド</span></p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">改行ありファイル</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">改行なしファイル</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>.txt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span> cat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">c}</span>_without_newline.txt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<hr>
</section>
</section>
<section id="git-trackingテキストファイルを対象に改行有無判定スクリプト" class="level2">
<h2 class="anchored" data-anchor-id="git-trackingテキストファイルを対象に改行有無判定スクリプト">git trackingテキストファイルを対象に改行有無判定スクリプト</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
スクリプト全体
</div>
</div>
<div class="callout-body-container callout-body">
<p>以下のシェルスクリプトは，バイナリファイルを除外した上で，ファイル末尾の改行の有無をチェックするスクリプトです</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> ls-files <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-z</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb10-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing newline: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
<p><span class="mini-section">アルゴリズム</span></p>
<pre id="git-check-newline">\begin{algorithm}
\caption{Checking Files for Missing Trailing Newlines}
\begin{algorithmic}
\State file\_list \(\leftarrow\) Get all Git-tracked files with NUL delimiter
\ForAll{file in file\_list}
    \State mime\_info \(\leftarrow\) \texttt{file --mime file}
    \If{mime\_info contains "charset=binary" OR "image/svg+xml"}
        \State \textbf{continue (skip binary/SVG files)}
    \Else
        \State last\_byte \(\leftarrow\) Get final byte of file
        \If{last\_byte is not newline character}
            \State Output "Missing newline: file"
        \EndIf
    \EndIf
\EndFor
\end{algorithmic}
\end{algorithm}
</pre>
<script>
    pseudocode.renderElement(document.getElementById("git-check-newline"));
</script>
<p><span class="mini-section">各コマンド</span></p>
<table class="caption-top table">
<colgroup>
<col style="width: 43%">
<col style="width: 56%">
</colgroup>
<thead>
<tr class="header">
<th>コマンド</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>git ls-files -z</code></td>
<td>Gitで管理されているファイルを一覧表示<br><code>-z</code>オプションで区切り文字としてNUL文字を使用（ファイル名に特殊文字が含まれる場合の安全な処理のため）</td>
</tr>
<tr class="even">
<td><code>while IFS= read -r -d '' file</code></td>
<td>NUL文字を区切りとしてファイルを順次処理<br><code>IFS=</code>で空白文字の保持<br><code>-r</code>でバックスラッシュの解釈を防止<br><code>-d ''：read</code> でヌル文字区切りに対応</td>
</tr>
<tr class="odd">
<td><code>file --mime "${file}" | grep -q -e "charset=binary" -e "image/svg+xml" ||</code></td>
<td>バイナリファイルとSVGファイルをスキップ<br>テキストファイルのみを処理<br><code>||</code>は「このコマンドが失敗した場合に次のコマンドを実行」を意味</td>
</tr>
<tr class="even">
<td><code>tail -c1 "${file}" | read -r _ ||</code></td>
<td>ファイルの最後の1バイトをチェック<br><code>read</code>は改行があれば0，なければ1を返す</td>
</tr>
<tr class="odd">
<td><code>echo "Missing newline: ${file}"</code></td>
<td>改行のないファイルを報告</td>
</tr>
</tbody>
</table>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">カレントディレクトリ以下のファイルに対しての改行判定スクリプト</span></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-maxdepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span></span>
<span id="cb11-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing newline: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<ul>
<li><code>-print0</code>: 各ファイル名の末尾に NUL文字 (<code>\0</code>) を付けて出力</li>
</ul>
</div>
<hr>
<section id="改行なしと判定されたファイルに対してnewlineを付与する" class="level3">
<h3 class="anchored" data-anchor-id="改行なしと判定されたファイルに対してnewlineを付与する">改行なしと判定されたファイルに対して<code>&lt;newline&gt;</code>を付与する</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
シェルスクリプト
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-maxdepth</span> 1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># バイナリファイルやSVGはスキップ</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mime</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charset=binary"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"image/svg+xml"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb12-4"></span>
<span id="cb12-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 最後の1バイトを確認（改行がないなら）</span></span>
<span id="cb12-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">_</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb12-7">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✓ Newline added to: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb12-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
</div>
<ul>
<li><code>echo &gt;&gt; "$file"</code> で<code>&lt;newline&gt;</code>を行末に追加</li>
</ul>
</section>
</section>
<section id="改行忘れの対策" class="level2">
<h2 class="anchored" data-anchor-id="改行忘れの対策">改行忘れの対策</h2>
<section id="editorconfigの用いた改行設定" class="level3">
<h3 class="anchored" data-anchor-id="editorconfigの用いた改行設定"><code>.editorconfig</code>の用いた改行設定</h3>
<p><span class="mini-section">EditorConfigとは?</span></p>
<ul>
<li>コードスタイル（インデントや改行コードなど）を統一するための設定ファイルの仕組み</li>
<li>異なるエディタ・OS間でのコードスタイルを統一させたいときに便利なツール</li>
</ul>
<p><span class="mini-section">EditorConfigによる改行設定例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 31%">
<col style="width: 38%">
</colgroup>
<thead>
<tr class="header">
<th>プロパティ名</th>
<th>内容</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>indent_style</code></td>
<td>インデントの種類（<code>space</code> または <code>tab</code>）</td>
<td><code>indent_style = space</code></td>
</tr>
<tr class="even">
<td><code>indent_size</code></td>
<td>インデントの幅</td>
<td><code>indent_size = 4</code></td>
</tr>
<tr class="odd">
<td><code>end_of_line</code></td>
<td>改行コード（<code>lf</code>/<code>crlf</code>/<code>cr</code>）</td>
<td><code>end_of_line = lf</code></td>
</tr>
<tr class="even">
<td><code>charset</code></td>
<td>文字コード</td>
<td><code>charset = utf-8</code></td>
</tr>
<tr class="odd">
<td><code>trim_trailing_whitespace</code></td>
<td>行末の空白を削除するか</td>
<td><code>trim_trailing_whitespace = true</code></td>
</tr>
<tr class="even">
<td><code>insert_final_newline</code></td>
<td>最終行の末尾に改行を追加するか</td>
<td><code>insert_final_newline = true</code></td>
</tr>
</tbody>
</table>
</div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .editorconfig</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># このファイルが設定のルートであることを示す</span></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root</span> = true</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># すべてのファイルに適用</span></span>
<span id="cb13-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[*]</span></span>
<span id="cb13-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">indent_style</span> = space</span>
<span id="cb13-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">indent_size</span> = 4</span>
<span id="cb13-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">end_of_line</span> = lf</span>
<span id="cb13-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">charset</span> = utf-8</span>
<span id="cb13-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trim_trailing_whitespace</span> = true</span>
<span id="cb13-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">insert_final_newline</span> = true</span></code></pre></div>
</section>
<section id="vscodeでの改行設定" class="level3">
<h3 class="anchored" data-anchor-id="vscodeでの改行設定">VSCodeでの改行設定</h3>
<p><code>settings.json</code>で以下の項目を追加します</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">//</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Editor</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">Settings</span></span>
<span id="cb14-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"files.insertFinalNewline"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"notebook.insertFinalNewline"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 40%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>設定キー</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>"files.insertFinalNewline": true</code></td>
<td>ファイル保存時に、末尾に改行を自動で追加します（通常の <code>.txt</code>, <code>.js</code>, <code>.py</code> などすべて対象）</td>
</tr>
<tr class="even">
<td><code>"notebook.insertFinalNewline": true</code></td>
<td>Jupyter Notebook（<code>.ipynb</code>）などのノートブック形式のファイルにおいて、セル内のソースに末尾改行を追加する設定（拡張機能依存）</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="appendix-改行コードの種類" class="level2">
<h2 class="anchored" data-anchor-id="appendix-改行コードの種類">Appendix: 改行コードの種類</h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 5%">
<col style="width: 23%">
<col style="width: 20%">
<col style="width: 14%">
<col style="width: 26%">
</colgroup>
<thead>
<tr class="header">
<th>改行コード</th>
<th>記号</th>
<th>名称</th>
<th>主なOS</th>
<th>バイナリ表現</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>LF</code></td>
<td><code>\n</code></td>
<td>Line Feed（行送り）</td>
<td>Linux / macOS（Unix系）</td>
<td><code>0x0A</code></td>
<td>行末で「次の行の先頭」に移動</td>
</tr>
<tr class="even">
<td><code>CRLF</code></td>
<td><code>\r\n</code></td>
<td>Carriage Return + Line Feed</td>
<td>Windows</td>
<td><code>0x0D 0x0A</code></td>
<td>行頭に戻りつつ次の行へ（古いタイプライタ由来）</td>
</tr>
<tr class="odd">
<td><code>CR</code></td>
<td><code>\r</code></td>
<td>Carriage Return（復帰）</td>
<td>古いMac OS（〜OS9）</td>
<td><code>0x0D</code></td>
<td>行頭に戻るだけ（現在はほぼ使われない）</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">歴史的背景</span></p>
<p>タイプライターの動きと対応させると改行には３つの考え方がありました</p>
<ul>
<li><code>LF</code> は紙を上に移動させ (水平方向の位置は変わらない)</li>
<li><code>CR</code> は「キャリッジ」を戻して，次の入力文字が紙の左端の同じ行に表示</li>
<li><code>CR+LF</code> は両方を実行し，新しい行の入力準備</li>
</ul>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_206">POSIX standard</a></li>
<li><a href="https://editorconfig.org/">EditorConfig</a></li>
</ul>


</section>

 ]]></description>
  <category>coding</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-30-POSIX-File-end-with-newline/</guid>
  <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto Version更新用スクリプト</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-29-update-quarto/</link>
  <description><![CDATA[ 






<section id="quarto-version-updateスクリプト" class="level2">
<h2 class="anchored" data-anchor-id="quarto-version-updateスクリプト">📘 Quarto Version Updateスクリプト</h2>
<ul>
<li>現在インストールされているQuarto Versionを削除し，GitHubから対応する <code>.deb</code> ファイルをダウンロードして，指定したバージョンをインストールします</li>
<li>実行前に，<a href="https://quarto.org/docs/download/">公式のQuartoダウンロードページ</a>で利用可能なQuarto Versionを確認してください</li>
<li>実行の結果，<code>/opt/quarto</code> にQuartoがインストールされます</li>
</ul>
<section id="requirements" class="level3">
<h3 class="anchored" data-anchor-id="requirements">💻 Requirements</h3>
<ul>
<li>Debian/Ubuntu-based Linux OS</li>
<li><code>curl</code>, <code>dpkg</code>, <code>gdebi-core</code>, <code>sudo</code></li>
<li>インターネット接続環境</li>
<li>管理者権限 <code>27(sudo)</code></li>
</ul>
</section>
</section>
<section id="メインスクリプト" class="level2">
<h2 class="anchored" data-anchor-id="メインスクリプト">🔨 メインスクリプト</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: please check https://quarto.org/docs/download/ before running this script</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-euo</span> pipefail</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check for updates</span></span>
<span id="cb1-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto is not installed. Please install it first."</span></span>
<span id="cb1-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb1-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prompt for confirmation</span></span>
<span id="cb1-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do you want to update Quarto? (y/n): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">confirm</span></span>
<span id="cb1-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$confirm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">^</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Yy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]$</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update cancelled."</span></span>
<span id="cb1-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb1-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ask user for version</span></span>
<span id="cb1-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter the Quarto version you want to install (e.g., 1.7.32): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_VERSION</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm version input is non-empty</span></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$QUARTO_VERSION</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-26">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No version specified. Aborting."</span></span>
<span id="cb1-27">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define download URL and file name</span></span>
<span id="cb1-31"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb1-32"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_FILE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove existing version</span></span>
<span id="cb1-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Removing existing Quarto installation..."</span></span>
<span id="cb1-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> quarto <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto was not fully removed, continuing..."</span></span>
<span id="cb1-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download and install the specified version</span></span>
<span id="cb1-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading Quarto version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span></span>
<span id="cb1-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_URL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-43"></span>
<span id="cb1-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installing Quarto..."</span></span>
<span id="cb1-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gdebi <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation failed."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb1-46"></span>
<span id="cb1-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto updated successfully to version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span></span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify installation</span></span>
<span id="cb1-50"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-52">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check</span>
<span id="cb1-53"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb1-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto installation failed. Please check the logs."</span></span>
<span id="cb1-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb1-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb1-57"></span>
<span id="cb1-58"></span>
<span id="cb1-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean up</span></span>
<span id="cb1-60"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-61"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temporary files cleaned up."</span></span></code></pre></div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">実行例</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ./quarto-update.sh</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> version: 1.4.550</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Do</span> you want to update Quarto<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y/n</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> y</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Enter</span> the Quarto version you want to install <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">e.g.,</span> 1.7.32<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> 1.7.32</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Removing</span> existing Quarto installation...</span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Downloading</span> Quarto version 1.7.32...</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Installing</span> Quarto...</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> updated successfully to version 1.7.32.</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Quarto</span> version: 1.7.32</span></code></pre></div>
</div>
<hr>
<section id="スクリプト解説" class="level3">
<h3 class="anchored" data-anchor-id="スクリプト解説">🔍 スクリプト解説</h3>
<p><span class="mini-section">初期設定部分</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-euo</span> pipefail</span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>option</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>-e</code></td>
<td>エラーが発生した時点でスクリプトを終了</td>
</tr>
<tr class="even">
<td><code>-u</code></td>
<td>未定義の変数を使用した際にエラーを発生</td>
</tr>
<tr class="odd">
<td><code>-o pipefail</code></td>
<td>パイプラインの途中でエラーが発生した場合に検知</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">ユーザー確認と入力</span></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Do you want to update Quarto? (y/n): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">confirm</span></span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$confirm</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=~</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">^</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Yy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]$</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update cancelled."</span></span>
<span id="cb4-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter the Quarto version you want to install (e.g., 1.7.32): "</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_VERSION</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$QUARTO_VERSION</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No version specified. Aborting."</span></span>
<span id="cb4-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb4-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>アップデートの実行確認をユーザーに求める</li>
<li>インストールしたいQuartoのバージョンを入力させる</li>
<li>バージョン番号が未入力の場合は，<code>exit 1</code></li>
</ul>
<p><span class="mini-section">ダウンロードとインストールの準備</span></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_URL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEB_FILE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.deb"</span></span></code></pre></div>
<ul>
<li>GitHubからダウンロードするdebパッケージのURLを構築</li>
<li>ローカルに保存するファイル名を設定</li>
</ul>
<p><span class="mini-section">既存のQuartoの削除</span></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Removing existing Quarto installation..."</span></span>
<span id="cb6-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dpkg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> quarto <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto was not fully removed, continuing..."</span></span>
<span id="cb6-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>既存のQuartoインストールを検出して削除</li>
<li>削除に失敗してもスクリプトは継続</li>
</ul>
<p><span class="mini-section">新バージョンのインストール</span></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading Quarto version </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${QUARTO_VERSION}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_URL</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installing Quarto..."</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gdebi <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Installation failed."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li><code>gdebi</code> コマンドでインストールを実行</li>
<li><code>dpkg -i</code>でも良いが，<code>gdebi</code>は必要な依存関係を自動で解決してくれます</li>
</ul>
<p><span class="mini-section">インストール確認</span></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> quarto <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb8-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto version: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check</span>
<span id="cb8-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb8-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto installation failed. Please check the logs."</span></span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb8-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
<ul>
<li>インストールが成功したか確認</li>
<li>新しいバージョンを表示</li>
<li><code>quarto check</code>でシステム要件を確認</li>
</ul>
<p><span class="mini-section">command -v quarto &amp;&gt; /dev/null コマンド</span></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">command</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>command-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>シェルの組み込みコマンドで指定されたコマンドのパスを探索してくれます</p>
<div class="no-border-top-table">
<table class="caption-top table">
<thead>
<tr class="header">
<th>項目</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>command</code></td>
<td>シェルの組み込みコマンドで，指定されたコマンドのパスを探索</td>
</tr>
<tr class="even">
<td><code>-v</code></td>
<td>コマンドのフルパスを表示</td>
</tr>
<tr class="odd">
<td><code>quarto</code></td>
<td>ここでは検索対象のコマンド名</td>
</tr>
<tr class="even">
<td><code>&amp;&gt;</code></td>
<td>標準出力(stdout)と標準エラー出力(stderr)の両方をリダイレクト</td>
</tr>
<tr class="odd">
<td><code>/dev/null</code></td>
<td>全ての出力を破棄する特殊なデバイスファイル</td>
</tr>
</tbody>
</table>
</div>
<p><code>&amp;&gt; /dev/null</code> を設定することによって，</p>
<ul>
<li>コマンドが見つかった場合: パスの出力は<code>/dev/null</code>に捨てた上で，<code>exit 0</code>（終了コード0）</li>
<li>コマンドが見つからない場合: エラーメッセージは<code>/dev/null</code>に捨てられるが，<code>exit 1</code>（終了コード1） 扱い</li>
</ul>
<p><span class="mini-section">不要な .deb ファイルの削除</span></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$DEB_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temporary files cleaned up."</span></span></code></pre></div>
<ul>
<li>ダウンロードした<code>.deb</code>パッケージを削除</li>
</ul>


</section>
</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-29-update-quarto/</guid>
  <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>実行時間計測デコレーター</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-20-decorator-checking-running-time/</link>
  <description><![CDATA[ 






<section id="実行時間を秒単位で表示するデコレータ" class="level2">
<h2 class="anchored" data-anchor-id="実行時間を秒単位で表示するデコレータ">実行時間を秒単位で表示するデコレータ</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">デコレーター</span></p>
<ul>
<li>デコレータとは，関数の前後に追加処理（ロギング・計測・バリデーションなど）を組み込む仕組み</li>
</ul>
</div>
<div id="9941af17" class="cell" data-execution_count="1">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> time <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time, sleep</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> running_time(func):</span>
<span id="cb1-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    関数の実行時間（秒）を有効桁小数点３桁で表示して、元の関数の戻り値を返すデコレータ</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb1-8">        start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb1-9">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb1-10">        end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb1-11">        elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb1-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span>
<span id="cb1-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span></code></pre></div>
</details>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">カントールの対関数の逆関数と実行時間計算</span></p>
<div id="3985cacd" class="cell" data-execution_count="2">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@running_time</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_contor_inverse(J: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Compute the inverse of the Cantor pairing function.</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The Cantor pairing function maps pairs of natural numbers to single natural numbers.</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function computes the inverse mapping, taking a natural number and returning the </span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    original pair of numbers.</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        J (int): A natural number that was produced by the Cantor pairing function.</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            Must be non-negative.</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tuple[int, int]: A pair (x, y) of numbers such that their Cantor pairing </span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        would produce J. The first element x represents the first number in the original </span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pair, and y represents the second number.</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-20"></span>
<span id="cb2-21">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>((np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> J) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-22">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> J</span>
<span id="cb2-23">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> J <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-24"></span>
<span id="cb2-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x, y</span>
<span id="cb2-26"></span>
<span id="cb2-27"></span>
<span id="cb2-28">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compute_contor_inverse(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 0.000 seconds
(1018, 9)</code></pre>
</div>
</div>
</div>
<hr>
</section>
<section id="デコレーター自身に引数を読み込ませる場合" class="level2">
<h2 class="anchored" data-anchor-id="デコレーター自身に引数を読み込ませる場合">デコレーター自身に引数を読み込ませる場合</h2>
<p>上記の <code>running_time</code> で小数点桁数を３桁固定としていましたが，これを引数に応じて変化させる場合を考えます．</p>
<div id="4e9c597e" class="cell" data-execution_count="3">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> time <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time, sleep</span>
<span id="cb4-2"></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> running_time_with_input(decimal: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb4-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> decorator(func):</span>
<span id="cb4-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        関数の実行時間（秒）を有効桁小数点３桁で表示して、元の関数の戻り値を返すデコレータ</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb4-9"></span>
<span id="cb4-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb4-11">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb4-12">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb4-13">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time()</span>
<span id="cb4-14">            elapsed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb4-15">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elapsed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.</span>{decimal}f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span>
<span id="cb4-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span>
<span id="cb4-17"></span>
<span id="cb4-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span>
<span id="cb4-19"></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> decorator</span></code></pre></div>
</details>
</div>
<p><span class="mini-section">実行例</span></p>
<div id="d8d04998" class="cell" data-execution_count="4">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@running_time_with_input</span>(decimal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> do_task():</span>
<span id="cb5-3">    sleep(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2345</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">do_task()</span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># =&gt; Execution time: 1.23 seconds</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 1.2346103191 seconds</code></pre>
</div>
</div>
</section>
<section id="appendix-args-と-kwargs" class="level2">
<h2 class="anchored" data-anchor-id="appendix-args-と-kwargs">Appendix: <code>*args</code> と <code>**kwargs</code></h2>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 45%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>書き方</th>
<th>意味</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>*args</code></td>
<td>タプルとして位置引数を全部受け取る</td>
<td><code>func(1, 2, 3)</code> → <code>args = (1, 2, 3)</code></td>
</tr>
<tr class="even">
<td><code>**kwargs</code></td>
<td>辞書としてキーワード引数を全部受け取る</td>
<td><code>func(a=10, b=20)</code> → <code>kwargs = {'a': 10, 'b': 20}</code></td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">動作確認</span></p>
<div id="ad81d4a5" class="cell" data-execution_count="5">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-overflow-wrap code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> example(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb7-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args:"</span>, args)</span>
<span id="cb7-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kwargs:"</span>, kwargs)</span>
<span id="cb7-4"></span>
<span id="cb7-5">example(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>args: (1, 2, 3)
kwargs: {'a': 10, 'b': 20}</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>python</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-20-decorator-checking-running-time/</guid>
  <pubDate>Sun, 20 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>NautilusからSSH先のファイルを操作する</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/</link>
  <description><![CDATA[ 






<section id="ssh先のファイルをnautilusで操作する" class="level2">
<h2 class="anchored" data-anchor-id="ssh先のファイルをnautilusで操作する">SSH先のファイルをNautilusで操作する</h2>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">手順</span></p>
<ol type="1">
<li>NautilusをClient側で開く</li>
<li>サイドバー下部の「その他の場所」をクリック</li>
<li>「サーバーへ接続」に以下を入力：</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ユーザー名<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>@<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ホスト名またはIPアドレス<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<p><span class="mini-section">入力箇所</span></p>
<p>Nautilusのbottom sectionにある「Connect to Server」の<code>Enter server address ...</code> の部分で接続設定をします．<code>.ssh/config</code>で</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host pupupuserver</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName 192.168.1.100</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span></code></pre></div>
<p>とHost設定を行っていれば</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://pupupuserver</span></span></code></pre></div>
<p>と入力してもOKです．</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/nautilus.png" class="img-fluid figure-img"></p>
<figcaption>nautilus</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
sshfsを用いたmount
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> ./remote</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sshfs</span> pupupuserver:/home/kirby ./remote</span></code></pre></div>
<p>とすれば，ローカルのフォルダに直接ssh接続先ディレクトリをマウントすることができます．個人の方針として，</p>
<ul>
<li>アクセスしたいディレクトリが明確に定まっている状況</li>
<li>分析プロジェクトとかでVSCode経由でSサーバーディレクトリを操作したいとき</li>
</ul>
<p>という状況のときに使用しています．</p>
</div>
</div>
</section>
<section id="多段ssh踏み台サーバ経由の場合" class="level2">
<h2 class="anchored" data-anchor-id="多段ssh踏み台サーバ経由の場合">多段SSH（踏み台サーバ経由）の場合</h2>
<p>踏み台設定は以下のような状況を考えます</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host jumpserver</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName jump.example.com</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host targetserver</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  HostName 192.168.1.110</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  User kirby</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  LocalForward 8787 localhost:8787</span></span></code></pre></div>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">手順: SSHトンネルを張ってlocalhostに接続</span></p>
<ol type="1">
<li>SSHトンネルを貼る</li>
</ol>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> 2222:192.168.1.110:22 kirby@jump.example.com</span></code></pre></div>
<ol start="2" type="1">
<li>サイドバー下部の「その他の場所」をクリック</li>
<li>「サーバーへ接続」に以下を入力：</li>
</ol>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssh://kirby@localhost:2222</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>Linux</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-19-Ubuntu-Nautilus-and-ssh/</guid>
  <pubDate>Sat, 19 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>bq commandを用いたPatitioned BigQuery External Tableの作成</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-18-getting-started-with-google-cloud-storage/</link>
  <description><![CDATA[ 






<section id="google-cloud-storageでの保存形式" class="level2">
<h2 class="anchored" data-anchor-id="google-cloud-storageでの保存形式">Google Cloud Storageでの保存形式</h2>
<p>以下の形式でparquet fileがGoogle Cloud Storageで<code>gs://regression-monkey-data/pupupuland_store_pos/</code>以下に保存されているとします．</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pupupuland_store_pos</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> partition_dt=2023-09-23</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── part-0.parquet</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> partition_dt=2023-09-24</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── part-0.parquet</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> partition_dt=2023-09-25</span>
<span id="cb1-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> part-0.parquet</span></code></pre></div>
</section>
<section id="bq-command" class="level2">
<h2 class="anchored" data-anchor-id="bq-command">bq command</h2>
<p><span class="mini-section">partitiopn_dtをpartition columnとしたtableの作成</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bq_upload()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-2">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">project_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'regression-monkey-data'</span></span>
<span id="cb2-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dataset_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pupupuland'</span></span>
<span id="cb2-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pupupuland_store_pos'</span></span>
<span id="cb2-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">upload_target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${project_id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${dataset_id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${table_name}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bq</span> mkdef <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source_format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PARQUET <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--hive_partitioning_mode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>AUTO <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--hive_partitioning_source_uri_prefix</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gs://regression-monkey-data/pupupuland_store_pos/ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--require_hive_partition_filter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>false <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gs://regression-monkey-data/pupupuland_store_pos/*'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-13">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> pupupuland_store_pos_external_def.json</span>
<span id="cb2-14"></span>
<span id="cb2-15">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bq</span> mk <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--external_table_definition</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pupupuland_store_pos_external_def.json <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${upload_target}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># main</span></span>
<span id="cb2-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bq_upload</span></span></code></pre></div>
<section id="bq-mkdefの役割" class="level3">
<h3 class="anchored" data-anchor-id="bq-mkdefの役割"><code>bq mkdef</code>の役割</h3>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before"><code>bq mkdef</code>の役割</span></p>
<p>GCS 上の Parquet ファイルを外部テーブルとして定義するための JSON 定義ファイルを作成</p>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 45%">
<col style="width: 55%">
</colgroup>
<thead>
<tr class="header">
<th>オプション名</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>--source_format=PARQUET</code></td>
<td>読み込むファイル形式が Parquet であることを指定</td>
</tr>
<tr class="even">
<td><code>--hive_partitioning_mode=AUTO</code></td>
<td>Hive形式のディレクトリ構造（例：<code>partition_month=2024-07/</code>）からパーティション列を自動推定</td>
</tr>
<tr class="odd">
<td><code>--hive_partitioning_source_uri_prefix=gs://...</code></td>
<td>パーティション構造の共通プレフィックス（＝分岐が始まるルート）を指定</td>
</tr>
<tr class="even">
<td><code>--require_hive_partition_filter=false</code></td>
<td>パーティション列によるフィルターを必須にしない（＝全体スキャンも可能）</td>
</tr>
<tr class="odd">
<td><code>'gs://.../*'</code></td>
<td>対象とするファイル群のパス</td>
</tr>
<tr class="even">
<td><code>&gt; pupupuland_store_pos_external_def.json</code></td>
<td>結果として、外部テーブル定義を JSON ファイルに保存する</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="../2024-12-11-BQ-create-external-table/index.html">Cloud StorageからExternal Tableの作成</a></li>
</ul>


</section>

 ]]></description>
  <category>環境構築</category>
  <category>gcloud</category>
  <category>BigQuery</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-18-getting-started-with-google-cloud-storage/</guid>
  <pubDate>Fri, 18 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>モデル管理プラットフォームMLflowの設定</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-17-mlflow-setup/</link>
  <description><![CDATA[ 






<section id="mlflowサーバーアクセスイメージ" class="level2">
<h2 class="anchored" data-anchor-id="mlflowサーバーアクセスイメージ">MLflowサーバーアクセスイメージ</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
セキュリティを保ちつつローカルからリモート操作
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>クライアント視点では，自分の <code>localhost:5000</code> にアクセスしている体感</li>
<li>実際には <code>ssh -L</code> によってサーバの MLflow にトンネル転送されている</li>
</ul>
</div>
</div>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant ClientPC as クライアントPC&lt;br&gt;(Python)
    participant SSH as SSHトンネル&lt;br&gt;(ポートフォワーディング)
    participant MLflowServer as Docker上のMLflow Server&lt;br&gt;(mlflow server 起動中)

    ClientPC --&gt;&gt; SSH: HTTPリクエスト&lt;br&gt;(localhost:5000 → SSHトンネル)
    SSH --&gt;&gt; MLflowServer: HTTPリクエスト&lt;br&gt;(サーバlocalhost:5000)
    MLflowServer --&gt;&gt; SSH: HTTPレスポンス
    SSH --&gt;&gt; ClientPC: HTTPレスポンス
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
<p><span class="mini-section">スコープについて</span></p>
<ul>
<li>Artifact StoreやBackend Storeはサーバーのストーレージ領域を使用することにします</li>
</ul>
</section>
<section id="mlflowサーバーの保存領域" class="level2">
<h2 class="anchored" data-anchor-id="mlflowサーバーの保存領域">MLflowサーバーの保存領域</h2>
<p>ログやメタデータ，ファイル成果物を保存・管理する保存領域として，Artifact store と Backend storeの２種類があります．</p>
<div id="fig-plot" class="center quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TB
    A[MLflow Tracking&lt;br&gt;mlflow server] --&gt; B[Backend Store&lt;br&gt;メタデータ保存]
    A --&gt; C[Artifact Store&lt;br&gt;成果物ファイル保存]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2
</figcaption>
</figure>
</div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>保存領域</th>
<th>役割</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Artifact Store</td>
<td>実験で生成された Artifacts = 成果物（モデル，画像，ログファイルなど） を保存する領域</td>
</tr>
<tr class="even">
<td>Backend Store</td>
<td>モデルや実験やRunのメタデータ(パラメータ，Metricsなどを含む)を格納する領域</td>
</tr>
</tbody>
</table>
</div>
<section id="artifact-store" class="level3">
<h3 class="anchored" data-anchor-id="artifact-store">Artifact Store</h3>
<div class="columns">
<div class="column" style="width:50%;">
<p><span class="border-bottom-header">保存オブジェクト例</span></p>
<p>基本的には以下のような大容量になりがちなものを保存します</p>
<ul>
<li>学習済みモデル(<code>model.pkl</code>)</li>
<li>学習に出力した画像やプロット(<code>ts-plot.png</code>)</li>
<li>学習時に利用したデータ(<code>train.parquet</code>)</li>
</ul>
</div><div class="column" style="width:50%;">
<p><span class="border-bottom-header">サポートされる保存先</span></p>
<ul>
<li>ローカルディレクトリ(例: <code>/mlflow/mlruns</code>)</li>
<li>Amazon S3(例: <code>s3://&lt;bucket&gt;/&lt;path&gt;</code>)</li>
<li>Google Cloud Storage(例: <code>gs://&lt;bucket&gt;/&lt;path&gt;</code>)</li>
<li>Azure Blob Storage</li>
<li>FTP/SFTP ServerやNFS共有ディレクトリなど</li>
</ul>
</div>
</div>
</section>
<section id="backend-store" class="level3">
<h3 class="anchored" data-anchor-id="backend-store">Backend Store</h3>
<div class="columns">
<div class="column" style="width:50%;">
<p><span class="border-bottom-header">保存オブジェクト例</span></p>
<ul>
<li>Model ID</li>
<li>Run ID</li>
<li>Start &amp; end time</li>
<li>Parameters</li>
<li>Metrics</li>
<li>Source file name</li>
</ul>
</div><div class="column" style="width:50%;">
<p><span class="border-bottom-header">サポートされる保存先</span></p>
<ul>
<li>デフォルトではローカルの <code>./mlruns</code> ディレクトリに保存</li>
<li>configureでデータベースを指定可能</li>
</ul>
</div>
</div>
</section>
</section>
<section id="mlflowサーバー構築手順" class="level2">
<h2 class="anchored" data-anchor-id="mlflowサーバー構築手順">MLflowサーバー構築手順</h2>
<section id="サーバー側での公式mlflow-docker-imageのインストール" class="level3">
<h3 class="anchored" data-anchor-id="サーバー側での公式mlflow-docker-imageのインストール">サーバー側での公式MLflow Docker Imageのインストール</h3>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">最新版MLflowイメージのPull</span></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> pull ghcr.io/mlflow/mlflow:latest</span></code></pre></div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">MLflowイメージversionの確認</span></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> ghcr.io/mlflow/mlflow:latest mlflow <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
<div class="reveal_vspace" style="--vspace-height: 1em;"></div>
<p><span class="mini-section">MLflowイメージの削除</span></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> rmi ghcr.io/mlflow/mlflow:latest</span></code></pre></div>
</section>
<section id="dockerベースのmlflow環境の構築" class="level3">
<h3 class="anchored" data-anchor-id="dockerベースのmlflow環境の構築">DockerベースのMLflow環境の構築</h3>
<p>基本手順としては</p>
<ul>
<li>Artifact Storeの作成と指定(<code>./mlruns</code>)</li>
<li>Backend Storeの作成と指定(<code>./mlflow.db</code>)</li>
</ul>
<p>を行います．Dockerベースで行うため，Permissionの指定には注意します．</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MLflowのデータを保存したい任意のディレクトリに移動</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>target-directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tracking dataを保存するために使用する空のSQLiteデータベースファイルを作成</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> ./mlflow.db</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Artifact（モデル，プロットなど）を保存するためのディレクトリを作成</span></span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> ./mlruns</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MLflowデータベースファイルに読み書き権限を設定．Dockerコンテナ内でMLflowが正しく動作するために必要</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 666 ./mlflow.db</span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MLflowの実行（run）ディレクトリに読み書き実行権限を設定．MLflowがArtifactを作成&amp;保存可能にするため必要。</span></span>
<span id="cb4-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 777 ./mlruns</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MLflowサーバーをDockerコンテナとして起動．--host 0.0.0.0以下はMLflowサーバーに任意のIPアドレスからポート5000でアクセス可能にするため</span></span>
<span id="cb4-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> mlflow-server <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 5000:5000 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>/mlruns:/mlflow/mlruns <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb4-19">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>/mlflow.db:/mlflow/mlflow.db <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb4-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ghcr.io/mlflow/mlflow:latest</span> mlflow server <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb4-21">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--backend-store-uri</span> sqlite:///mlflow/mlflow.db <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb4-22">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--default-artifact-root</span> /mlflow/mlruns <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb4-23">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--host</span> 0.0.0.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> 5000</span></code></pre></div>
<p><span class="mini-section">MLflowコンテナの停止と削除</span></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 現在実行中のコンテナ mlflow-server を 停止 </span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> stop mlflow-server </span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 停止された mlflow-server コンテナを 削除 </span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> rm mlflow-server</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>コンテナを削除しても，<code>mlruns/</code> や <code>mlflow.db</code> がマウントされていれば中のデータは保持されます</li>
</ul>
</div>
</div>
</section>
<section id="docker-compose-fileの作成" class="level3">
<h3 class="anchored" data-anchor-id="docker-compose-fileの作成">Docker compose fileの作成</h3>
<ul>
<li>コンテナの構成・起動・管理を簡潔・再現可能にしたい</li>
<li>毎回 <code>docker run</code>の長いスクリプトを実施したくない</li>
</ul>
<p>以上の理由から，<code>docker-compose.yml</code>ベースでコンテナの起動を実施します．</p>
<p><span class="mini-section">docker-compose.ymlの実装</span></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ghcr.io/mlflow/mlflow:latest</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflow-server</span></span>
<span id="cb6-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5000:5000"</span></span>
<span id="cb6-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb6-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./mlruns:/mlflow/mlruns</span></span>
<span id="cb6-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./mlflow.db:/mlflow/mlflow.db</span></span>
<span id="cb6-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">    command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-11">      mlflow server</span>
<span id="cb6-12">      --backend-store-uri sqlite:///mlflow/mlflow.db</span>
<span id="cb6-13">      --default-artifact-root /mlflow/mlruns</span>
<span id="cb6-14">      --host 0.0.0.0</span>
<span id="cb6-15">      --port 5000</span></code></pre></div>
<p><span class="mini-section">servicesセクション</span></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span></code></pre></div>
<ul>
<li>Compose で起動するサービスの名前を <code>mlflow-server</code> と指定</li>
<li>あくまでコンテナ名ではなく，docker composeで管理するサービス名</li>
</ul>
<p><span class="mini-section">container_nameの指定</span></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflow-server</span></span></code></pre></div>
<ul>
<li>起動したコンテナの名前を明示的に <code>mlflow-server</code> に指定</li>
</ul>
<p><span class="mini-section">ポートの指定</span></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ports:</span></span>
<span id="cb9-2">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5000:5000"</span></span></code></pre></div>
<ul>
<li><code>host-port:container-port</code>の順番で指定</li>
<li>ホストのポート5000 を，コンテナのポート5000 にマッピング</li>
<li><code>http://localhost:5000</code> でブラウザからアクセスできるようになる</li>
</ul>
<p><span class="mini-section">Volumesの指定</span></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb10-2">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">-</span> ./mlruns:/mlflow/mlruns</span>
<span id="cb10-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">-</span> ./mlflow.db:/mlflow/mlflow.db</span></code></pre></div>
<ul>
<li>artifact（成果物）保存先: <code>./mlruns:/mlflow/mlruns</code></li>
<li>backend store保存先: <code>./mlflow.db:/mlflow/mlflow.db</code></li>
</ul>
<p><span class="mini-section">command</span></p>
<ul>
<li><code>mlflow server</code>: MLflow Tracking Server を起動</li>
<li><code>--backend-store-uri sqlite:///mlflow/mlflow.db</code>: SQLite を使用</li>
<li><code>--host 0.0.0.0</code>: 外部アクセスを許可</li>
</ul>
<p><span class="mini-section">実行方法</span></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># カレントディレクトリに mlflow.db が無いなら作成しておく</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> mlflow.db</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 666 mlflow.db  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SQLiteが読み書きできるように</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># コンテナ作成</span></span>
<span id="cb11-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># コンテナ起動</span></span>
<span id="cb11-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose start</span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 停止</span></span>
<span id="cb11-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose stop</span>
<span id="cb11-13"></span>
<span id="cb11-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 削除</span></span>
<span id="cb11-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose down</span>
<span id="cb11-16"></span>
<span id="cb11-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 稼動状況の確認</span></span>
<span id="cb11-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> ps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> name=mlflow-server</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
その他の設定例
</div>
</div>
<div class="callout-body-container callout-body">
<p>本記事では紹介しませんが，さらなる設定として以下のような方針が考えられます</p>
<ul>
<li>PostgreSQL や MySQL に backend-store を切り替える</li>
<li>S3 や MinIO に artifact-store を変更</li>
<li>systemd 経由で自動起動</li>
</ul>
</div>
</div>
</section>
</section>
<section id="ssh経由でのmlflowへのアクセス" class="level2">
<h2 class="anchored" data-anchor-id="ssh経由でのmlflowへのアクセス">ssh経由でのMLFlowへのアクセス</h2>
<p>ブラウザでlocalhostアクセスするためには，SSH接続時に自動的にポートフォワーディング（ローカルフォワード） する設定が必要です．これは</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> 5000:localhost:5000 user@remote</span></code></pre></div>
<p>というコマンドでも実現可能ですが，<code>.ssh/config</code> に以下のように記載したほうが楽に成ると判断しています．</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb13-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Host mlflowserver</span></span>
<span id="cb13-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    Hostname mlserver-desktop</span></span>
<span id="cb13-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    User hoshinokirby</span></span>
<span id="cb13-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    ForwardAgent yes</span></span>
<span id="cb13-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    RequestTTY yes </span></span>
<span id="cb13-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    LocalForward 5000 localhost:5000</span></span></code></pre></div>
<p>この設定のよって，<code>ssh user@remote</code> だけで，自動的にポートフォワーディングしてくれます．</p>
<section id="backgroundでssh接続" class="level3">
<h3 class="anchored" data-anchor-id="backgroundでssh接続">BackgroundでSSH接続</h3>
<div class="custom_problem blog-custom-border">
<p><span class="def-title-no-before">background接続</span></p>
<p>MLflowサーバーの <code>~/mlflow-playground</code> に<code>docker-compose.yml</code> があり，それを立ち上がっている状況で，backgroundでssh接続したい場合は以下のコマンドを実行します．</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> mlflowserver <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fN</span></span></code></pre></div>
</div>
<p><span class="mini-section"><code>-fN</code> オプション</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>オプション</th>
<th>動作</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>-f</code></td>
<td>SSH接続後，すぐにバックグラウンドに回る（foreground → background）</td>
</tr>
<tr class="even">
<td><code>-N</code></td>
<td>リモートでコマンドを実行せず、シェルも起動しない（トンネル用途向け）</td>
</tr>
<tr class="odd">
<td><code>-T</code></td>
<td>疑似ターミナル（tty）を割り当てない．対話的操作が不要な非対話型コマンドの実行時に使用</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">接続状況の確認</span></p>
<p>ssh コマンドがバックグラウンドでまだ動いているか確認したい場合，現在動作中の ssh 関連プロセスを表示することで確かめます．</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ps</span> aux <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ssh -fN -L 5000:localhost:5000"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> grep</span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 20%">
<col style="width: 79%">
</colgroup>
<thead>
<tr class="header">
<th>コマンド部分</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ps aux</code></td>
<td>全ユーザー（<code>a</code>）、端末に関係なく（<code>x</code>）、詳細情報（<code>u</code>）付きで <strong>すべてのプロセスを一覧表示</strong></td>
</tr>
<tr class="even">
<td><code>grep "ssh"</code></td>
<td>その中から <strong>「ssh」を含む行</strong>だけを抽出</td>
</tr>
<tr class="odd">
<td><code>grep -v grep</code></td>
<td>さらにそこから <strong><code>grep ssh</code> 自体の行を除外</strong><br>（<code>-v</code>は「除外」を意味）</td>
</tr>
</tbody>
</table>
</div>
<p>該当プロセスをkillしたい場合は</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ssh processをkill</span></span>
<span id="cb16-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">PID</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 強制kill</span></span>
<span id="cb16-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-9</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">PID</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>となります．または，<code>pkill</code>を用いて</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode zsh code-with-copy"><code class="sourceCode zsh"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pkill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ssh mlflowserver -fT"</span></span></code></pre></div>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 34%">
<col style="width: 65%">
</colgroup>
<thead>
<tr class="header">
<th>部分</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>pkill</code></td>
<td>条件に合うプロセスに**終了シグナル（デフォルトは <code>SIGTERM</code>）**を送る</td>
</tr>
<tr class="even">
<td><code>-f</code></td>
<td><strong>プロセス名だけでなくコマンドライン全体</strong>を検索対象にする</td>
</tr>
<tr class="odd">
<td><code>"ssh mlflowserver -fT"</code></td>
<td>条件：<code>ssh mlflowserver -fT</code> を含むコマンドを実行しているプロセス</td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="appendix-linux-file-permission" class="level1">
<h1>Appendix: Linux File Permission</h1>
<table class="caption-top table">
<thead>
<tr class="header">
<th>数値</th>
<th>パーミッション</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>4</td>
<td><code>r--</code></td>
<td><strong>read</strong>（読み取り）</td>
</tr>
<tr class="even">
<td>2</td>
<td><code>-w-</code></td>
<td><strong>write</strong>（書き込み）</td>
</tr>
<tr class="odd">
<td>1</td>
<td><code>--x</code></td>
<td><strong>execute</strong>（実行）</td>
</tr>
<tr class="even">
<td>0</td>
<td><code>---</code></td>
<td>何も許可しない</td>
</tr>
</tbody>
</table>
</section>
<section id="appendix-docker-compose-command" class="level1">
<h1>Appendix: Docker compose Command</h1>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 75%">
</colgroup>
<thead>
<tr class="header">
<th>コマンド</th>
<th>何をするか</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>docker compose up</code></td>
<td>コンテナを<strong>作成・起動</strong>．構成（Dockerfile, docker-compose.yml）が変われば再構築する</td>
</tr>
<tr class="even">
<td><code>docker compose start</code></td>
<td>すでに存在するコンテナを<strong>起動のみ</strong>する．構成変更は反映されない</td>
</tr>
<tr class="odd">
<td><code>docker compose stop</code></td>
<td><strong>コンテナを停止</strong>するが，<strong>定義やボリュームは残る</strong></td>
</tr>
<tr class="even">
<td><code>docker compose down</code></td>
<td><strong>コンテナを停止・削除</strong>し，<strong>ネットワークや定義も削除</strong></td>
</tr>
</tbody>
</table>
</div>


</section>

 ]]></description>
  <category>環境構築</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-17-mlflow-setup/</guid>
  <pubDate>Thu, 17 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>GitHub OSS Contribution: ForkからPull Request</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-11-oss-contribution/</link>
  <description><![CDATA[ 






<section id="スコープ" class="level2">
<h2 class="anchored" data-anchor-id="スコープ">🎯 スコープ</h2>
<ul>
<li>GitHubで ForkからPull Requestを出す手順を紹介します</li>
<li>修正箇所は事前に見つかっている前提とします</li>
</ul>
</section>
<section id="oss-contributionまでの手順" class="level2">
<h2 class="anchored" data-anchor-id="oss-contributionまでの手順">🔨 OSS contributionまでの手順</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">sequenceDiagram
    participant 開発者 as Local repo
    participant フォークしたリポジトリ as fork repo
    participant オリジナルのリポジトリ as original repo
    participant リポジトリの所有者 as repository owner

    オリジナルのリポジトリ-&gt;&gt;フォークしたリポジトリ: フォークする
    フォークしたリポジトリ-&gt;&gt;開発者: クローンを作成
    開発者-&gt;&gt;開発者: 機能ブランチを作成
    開発者-&gt;&gt;開発者: コードの変更とテスト
    開発者-&gt;&gt;フォークしたリポジトリ: 変更をpush
    フォークしたリポジトリ-&gt;&gt;オリジナルのリポジトリ: プルリクエストを送信
    オリジナルのリポジトリ-&gt;&gt;リポジトリの所有者: レビュー依頼
    リポジトリの所有者-&gt;&gt;オリジナルのリポジトリ: コメントとフィードバック
    オリジナルのリポジトリ-&gt;&gt;開発者: レビュー内容の共有
    開発者-&gt;&gt;開発者: 修正作業（ローカル）
    開発者-&gt;&gt;フォークしたリポジトリ: 修正をpush
    フォークしたリポジトリ-&gt;&gt;オリジナルのリポジトリ: プルリクエストを更新
    リポジトリの所有者-&gt;&gt;オリジナルのリポジトリ: プルリクエストを承認
    リポジトリの所有者-&gt;&gt;オリジナルのリポジトリ: プルリクエストをマージ
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
REMARKS
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>通常「repository owner」のみが，original repositoryに対して直接操作</li>
<li>実際の運用では，レビューは複数人で行われることもあるが，上のシークエンス図ではシンプルに一人と仮定</li>
</ul>
</div>
</div>
<section id="step-1-プロジェクトルールの事前確認" class="level3">
<h3 class="anchored" data-anchor-id="step-1-プロジェクトルールの事前確認">Step 1: プロジェクトルールの事前確認</h3>
<p>開発をスタートする前に，以下のルール文書を必ず確認してください．これらはコードレビューを円滑かつ効率的に進めるための共通認識を定めたもので，遵守することでPRは「内容」に集中した建設的なレビューになり，反復的なスタイル修正や手戻りを最小化できます．</p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 69%">
</colgroup>
<thead>
<tr class="header">
<th>ファイル名</th>
<th>目的・レビュー効率への寄与</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>contribution.md</code></td>
<td>PR 作成のフォーマットや粒度，コミットメッセージの書き方が明文化されており，認識のズレを減らせます．</td>
</tr>
<tr class="even">
<td><code>branch-strategy.md</code></td>
<td>適切なブランチ運用により，他の開発との競合やマージ事故を防ぎ，レビュー対象を明確にできます．</td>
</tr>
<tr class="odd">
<td><code>coding-convention.md</code></td>
<td>スタイルや命名規則が統一されていることで，コード内容の議論に集中でき，フォーマットの指摘を減らせます．</td>
</tr>
<tr class="even">
<td><code>.editorconfig</code></td>
<td>インデント幅・改行コード・文字コードなどのエディタ設定が統一され，スタイル差分の混入を防ぎます．</td>
</tr>
</tbody>
</table>
</div>
<p><span class="mini-section">プロジェクトルール確認チェックリスト</span></p>
<ul class="task-list">
<li><label><input type="checkbox"><code>contribution.md</code> を読んだ</label></li>
<li><label><input type="checkbox"><code>branch-strategy.md</code> に従ってブランチを作成した</label></li>
<li><label><input type="checkbox"><code>coding-convention.md</code> に準拠したコードを書いた</label></li>
<li><label><input type="checkbox"><code>.editorconfig</code> に準拠したエディタ設定を行っている</label></li>
</ul>
</section>
<section id="step-2-issueを作成" class="level3">
<h3 class="anchored">Step 2: Issueを作成</h3>
<p>PRを出す前に，まず Issue を作成して修正提案を相談します．</p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">🐞 Bug Report: caption-number: false is not respected in metadata</span></p>
<div style="font-size: 0.7em;  border: 1px solid #ddd; border-radius: 5px; padding: 10px; margin: 20px 0;">
<section id="description" class="level2">
<h2 class="anchored" data-anchor-id="description">Description</h2>
<p>When setting the following in Quarto YAML front matter:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pseudocode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caption-number</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
<p>the pseudocode filter still adds numbers to the captions. The expected behavior is that setting <code>caption-number: false</code> should disable caption numbering.</p>
</section>
<section id="current-behavior" class="level2">
<h2 class="anchored" data-anchor-id="current-behavior">Current Behavior</h2>
<p>The false value is ignored, because <code>false</code> or <code>x</code> always evaluates to <code>x</code> in Lua. Therefore, the default is used even when <code>false</code> is explicitly specified.</p>
</section>
<section id="proposed-fix" class="level2">
<h2 class="anchored" data-anchor-id="proposed-fix">Proposed Fix</h2>
<p>Replace line 268 in <code>pseudocode.lua</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb2-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pseudocode"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">][</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span></span></code></pre></div>
<p>with:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">nil</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb3-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<hr>
<p>Btw, thank you for developing this great extension — I really appreciate your work and love using it in my quarto projects!</p>
</section>
</div>
</div>
<hr>
</section>
<section id="step-3-forkリポジトリを複製" class="level3">
<h3 class="anchored" data-anchor-id="step-3-forkリポジトリを複製">Step 3: Fork（リポジトリを複製）</h3>
<ol type="1">
<li>PRを送りたいリポジトリにアクセス</li>
<li>右上の <code>[Fork]</code> ボタンをクリックして，自分のアカウントに複製</li>
</ol>
</section>
<section id="step-4-自分の環境にclone-開発用ブランチの作成" class="level3">
<h3 class="anchored" data-anchor-id="step-4-自分の環境にclone-開発用ブランチの作成">Step 4: 自分の環境にClone &amp; 開発用ブランチの作成</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/your-username/project-name.git</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> project-name</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> switch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> my-feature-or-fix</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>branch strategyに則ったブランチ名をつけるようにします</li>
</ul>
</div>
</div>
</section>
<section id="step-4-git-commit-and-push" class="level3">
<h3 class="anchored" data-anchor-id="step-4-git-commit-and-push">Step 4: git commit and push</h3>
<p>コードを編集し，コミットします</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 編集後</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fix: typo in README"</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fork repositoryへpush</span></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin my-feature-or-fix</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
commit message方針
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>contribution.md</code> や開発者ガイドに則したコミットメッセージを記載します．基本構造としては．</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode makefile code-with-copy"><code class="sourceCode makefile"><span id="cb6-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;タイプ&gt;:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;"> &lt;短く要点を伝えるメッセージ（50文字以内）&gt;</span></span></code></pre></div>
<p><span class="mini-section">Prefix例</span></p>
<div class="no-border-top-table">
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 44%">
<col style="width: 44%">
</colgroup>
<thead>
<tr class="header">
<th>Prefix</th>
<th>意味・用途</th>
<th>使用例（タイトル）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Fix</code></td>
<td><strong>バグ修正</strong></td>
<td><code>Fix: crash when input is null</code></td>
</tr>
<tr class="even">
<td><code>Implement</code></td>
<td><strong>ロジックや処理を新規実装</strong></td>
<td><code>Implement: user login logic with token generation</code></td>
</tr>
<tr class="odd">
<td><code>Enhance</code></td>
<td><strong>仕様に基づいた変更や改善</strong>．振る舞いを変更するがバグではない場合</td>
<td><code>Enhance: replace polling with websocket</code></td>
</tr>
<tr class="even">
<td><code>Remove</code></td>
<td><strong>機能やコードの削除</strong>．不要になった処理を明確に消すとき</td>
<td><code>Remove: deprecated API endpoint</code></td>
</tr>
<tr class="odd">
<td><code>Refactor</code></td>
<td><strong>動作に影響を与えない内部構造の改善</strong>（リネーム，分割，整理など）</td>
<td><code>Refactor: split UserService into modules</code></td>
</tr>
<tr class="even">
<td><code>Docs</code></td>
<td><strong>ドキュメントの変更</strong>（README，注釈，Wiki連携など）</td>
<td><code>Docs: fix typo in usage example</code></td>
</tr>
<tr class="odd">
<td><code>Test</code></td>
<td><strong>テストコードの追加・変更</strong></td>
<td><code>Test: add edge case test for empty array</code></td>
</tr>
<tr class="even">
<td><code>Style</code></td>
<td><strong>フォーマット・コードスタイル修正</strong>（意味のある動作変更なし）</td>
<td><code>Style: format code with Prettier</code></td>
</tr>
<tr class="odd">
<td><code>Revert</code></td>
<td><strong>以前のコミットを取り消す</strong></td>
<td><code>Revert: remove async version due to bug</code></td>
</tr>
<tr class="even">
<td><code>Perf</code></td>
<td><strong>パフォーマンス改善</strong></td>
<td><code>Perf: reduce image loading time by 50%</code></td>
</tr>
<tr class="odd">
<td><code>Build</code></td>
<td><strong>ビルドシステムや依存関係の変更</strong>（npm, poetry, Dockerなど）</td>
<td><code>Build: upgrade TypeScript to v5.3</code></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</section>
<section id="step-5-pull-request作成" class="level3">
<h3 class="anchored">Step 5: Pull Request作成</h3>
<ol type="1">
<li>GitHub上で，「Compare &amp; pull request」をクリックし，PRを作成します</li>
<li>PR作成後，diff内容に問題がなければ <code>Create Pull Request</code> をクリックします．</li>
</ol>
<p>これらの手続きを実行すると，PR送り先リポジトリの管理者にPRが作成されたことが通知されます．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
PR作成チェックリスト
</div>
</div>
<div class="callout-body-container callout-body">
<ul class="task-list">
<li><label><input type="checkbox">Issueを事前に作成している</label></li>
<li><label><input type="checkbox">タイトルと説明が明確</label></li>
<li><label><input type="checkbox">関連Issueがリンクされている</label></li>
</ul>
</div>
</div>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">FIX: respecting caption-number: false in user setting</span></p>
<div style="font-size: 0.7em;  border: 1px solid #ddd; border-radius: 5px; padding: 10px; margin: 20px 0;">
<section id="related-issue" class="level2">
<h2 class="anchored" data-anchor-id="related-issue">Related Issue</h2>
<ul>
<li>#8</li>
</ul>
</section>
<section id="description-1" class="level2">
<h2 class="anchored" data-anchor-id="description-1">Description</h2>
<p>This PR updates the logic assigning <code>global_options.caption_number</code> so that a user-specified false value in <code>doc.meta.pseudocode["caption-number"]</code> is not overridden by the default.</p>
<section id="before" class="level3">
<h3 class="anchored" data-anchor-id="before">Before</h3>
<p>The old logic:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb7-1">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pseudocode"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">][</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span></span></code></pre></div>
<p>caused issues when caption-number: false was explicitly set in metadata. Since false is <code>false</code> in Lua, it incorrectly fell back to the default.</p>
</section>
<section id="after" class="level3">
<h3 class="anchored" data-anchor-id="after">After</h3>
<p>This fix ensures that false is respected by explicitly checking for nil:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">nil</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb8-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pseudocode</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caption-number"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb8-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">global_options</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption_number</span></span>
<span id="cb8-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
</section>
</section>
</div>
</div>
<hr>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request">GitHub Docs &gt; Creating a pull request</a></li>
</ul>


</section>

 ]]></description>
  <category>方法論</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-11-oss-contribution/</guid>
  <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>集合列の和集合・直和・共通部分</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-09-set-operation/</link>
  <description><![CDATA[ 






<section id="上極限集合と下極限集合" class="level2">
<h2 class="anchored" data-anchor-id="上極限集合と下極限集合">上極限集合と下極限集合</h2>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 1</strong></span> <span class="def-title">集合列</span></p>
<p>集合 <img src="https://latex.codecogs.com/png.latex?%5CGamma"> が <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"> のとき，集合族 <img src="https://latex.codecogs.com/png.latex?%5C%7BA_%5Cgamma%5C%7D_%7B%5Cgamma%5Cin%20%5CGamma%7D"> は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5C%7BA_1,%20A_2,%20%5Ccdots,%20A_n,%20%5Ccdots%20%5C%7D%0A"></p>
<p>と表される．これを集合列という．</p>
</div>
<p><span class="mini-section">集合列の和集合・直和・共通部分</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7B%E9%9B%86%E5%90%88%E5%88%97%E3%81%AE%E5%92%8C%E9%9B%86%E5%90%88:%7D%20%5C%20%5C%20%20%20&amp;%20%5Cbigcup_%7Bn=1%7D%5E%5Cinfty%20A_n%5C%5C%0A%5Ctext%7B%E9%9B%86%E5%90%88%E5%88%97%E3%81%AE%E7%9B%B4%E5%92%8C:%7D%20%5C%20%5C%20%20%20%20&amp;%20%5Cbigsqcup_%7Bn=1%7D%5E%5Cinfty%20A_n%5C%5C%0A%5Ctext%7B%E9%9B%86%E5%90%88%E5%88%97%E3%81%AE%E5%85%B1%E9%80%9A%E9%83%A8%E5%88%86:%7D%20%5C%20%5C%20&amp;%20%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%20A_n%0A%5Cend%7Balign%7D%0A"></p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 2</strong></span> <span class="def-title">上極限集合</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%5Csup%20A_n%20=%20%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%0A"></p>
</div>
<p><img src="https://latex.codecogs.com/png.latex?x%5Cin%20%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k"> をまず考えます．これはすべての <img src="https://latex.codecogs.com/png.latex?n"> に対して</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cin%20%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%0A"></p>
<p>を意味します．一方，<img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k"> は <img src="https://latex.codecogs.com/png.latex?k%5Cgeq%20n"> を満たすある <img src="https://latex.codecogs.com/png.latex?k"> に対して</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%5Cin%20A_k%0A"></p>
<p>これらふたつをあわせると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%20=%20%5C%7Bx%20%7C%20%5Ctext%7B%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%20n%20%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%EF%BC%8C%E3%81%82%E3%82%8B%7D%20k%5Cgeq%20n%20%5Ctext%7B%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%A6%7D%20x%20%5Cin%20A_k%5C%7D%0A"></p>
<p><span class="mini-section">上極限集合を無限に多くの <img src="https://latex.codecogs.com/png.latex?k"> に対して <img src="https://latex.codecogs.com/png.latex?x%5Cin%20A_k"> と解釈する</span></p>
<p><img src="https://latex.codecogs.com/png.latex?x%5Cin%5Clim%5Csup%20A_n"> のとき，ある <img src="https://latex.codecogs.com/png.latex?k_1"> に対して <img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20A_%7Bk_1%7D"> となります．ここで</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%20=%20%5Cleft(%5Cbigcap_%7Bn=1%7D%5E%7Bk_1%7D%5Cbigcup_%7Bk=n%7D%5E%7B%5Cinfty%7D%20A_k%5Cright)%20%5Cbigcap%20%5Cleft(%5Cbigcap_%7Bn%3Ek_1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%5Cright)%0A"></p>
<p>であることから，<img src="https://latex.codecogs.com/png.latex?k%5Cgeq%20k_1%20+%201"> をみたすある <img src="https://latex.codecogs.com/png.latex?k_2"> についても</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cin%20A_%7Bk_2%7D%0A"></p>
<p>とならなくてはいけません．これを繰り返していくと <img src="https://latex.codecogs.com/png.latex?k_1%20%3C%20k_2%3C%20%5Ccdots%20%3C%20k_n%20%3C%20%5Ccdots"> で</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cin%20A_%7Bk_1%7D,%20x%20%5Cin%20A_%7Bk_2%7D,%20%5Ccdots,%20x%20%5Cin%20A_%7Bk_n%7D,%20%5Ccdots%0A"></p>
<p>つまり，<img src="https://latex.codecogs.com/png.latex?x%5Cin%5Clim%5Csup%20A_n"> であるならば，無限に多くの <img src="https://latex.codecogs.com/png.latex?k"> に対して <img src="https://latex.codecogs.com/png.latex?x%5Cin%20A_k"> ということになります．</p>
<p>逆に，「無限に多くの <img src="https://latex.codecogs.com/png.latex?k"> に対して <img src="https://latex.codecogs.com/png.latex?x%5Cin%20A_k">」であるならば，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%E4%BB%BB%E6%84%8F%E3%81%AE%20$n$%20%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%20$k%5Cgeq%20n$%20%E3%82%92%E6%BA%80%E3%81%9F%E3%81%99%7D%20%5C%20%5C%20x%5Cin%20A_%7Bk%7D%20%5C%20%5C%20%5Ctext%7B%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%88%E3%81%86%E3%81%AA%20$k$%20%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%7D%0A"></p>
<p>であるので，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%20=%20%5C%7Bx%20%7C%20%5Ctext%7B%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%20n%20%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%EF%BC%8C%E3%81%82%E3%82%8B%7D%20k%5Cgeq%20n%20%5Ctext%7B%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%A6%7D%20x%20%5Cin%20A_k%5C%7D%0A"></p>
<p>が成立します．</p>
<div id="def-" class="custom_problem blog-custom-border theorem definition">
<p><span class="theorem-title"><strong>Definition 3</strong></span> <span class="def-title">下極限集合</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%5Cinf%20A_n%20=%20%5Cbigcup_%7Bn=1%7D%5E%5Cinfty%5Cbigcap_%7Bk=n%7D%5E%5Cinfty%20A_k%0A"></p>
</div>
<p>下極限集合は，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%5Cinf%20A_n%20=%20%5C%7Bx%20%7C%20%5Ctext%7B%E3%81%82%E3%82%8B%20$n$%20%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%A6%EF%BC%8C$k%5Cgeq%20n$%20%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%88%E3%81%86%E3%81%AA%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%20$k$%20%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%20$x%20%5Cin%20A_k$%7D%5C%7D%0A"></p>
<p>と解釈できます</p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">supとinfの関係</span></p>
<p><img src="https://latex.codecogs.com/png.latex?i%20%5Cin%20%5Cmathbb%20N"> として，集合 <img src="https://latex.codecogs.com/png.latex?A_i"> を以下のように定義します</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA_i%20=%20%5Cleft%5C%7B(x,%20y)%20%7C%20t_i%20=%201%20-%20%5Cfrac%7B1%7D%7Bi%7D,%20(x%20-%20t_i)%5E2%20+%20y%5E2%20%3C%204%5Cright%5C%7D%0A"></p>
<p>このとき，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20%5Csup%20A_n%20&amp;=%20%5Ctext%7B%E9%9D%92%E3%81%AE%E5%A2%83%E7%95%8C%E3%82%92%E5%90%AB%E3%81%BE%E3%81%AA%E3%81%84%E9%96%8B%E9%9B%86%E5%90%88%7D%5C%5C%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20%5Cinf%20A_n%20&amp;=%20%5Ctext%7B%E9%BB%92%E6%96%9C%E7%B7%9A%E9%83%A8%E3%81%AE%E3%81%AE%E5%A2%83%E7%95%8C%E3%82%92%E5%90%AB%E3%81%BE%E3%81%AA%E3%81%84%E9%96%8B%E9%9B%86%E5%90%88%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>また，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20%5Cinf%20A_n%20%5Csubseteq%20%5Clim_%7Bn%5Cto%5Cinfty%7D%20%5Csup%20A_n%0A"></p>
<p>であることがわかります．</p>
<div id="cell-fig-ph-chart" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.patches <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpatches</span>
<span id="cb1-4"></span>
<span id="cb1-5">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-6">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-7">X, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(x, y)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Intersection region</span></span>
<span id="cb1-10">region1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-11">region2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-12">intersection_common <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> region1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> region2</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb1-15">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-16">plt.contourf(X, Y, region1, levels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#B4D7FF'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span>
<span id="cb1-17">plt.contour(X, Y, region2, levels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>], colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb1-18">plt.contourf(X, Y, region1, levels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>, hatches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'///'</span>])</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 凡例用パッチ作成</span></span>
<span id="cb1-21">patch_region_sup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpatches.Patch(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#B4D7FF'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">lim</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">sup A_n$'</span>)</span>
<span id="cb1-22">patch_region_inf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpatches.Patch(facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, hatch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'///'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">lim</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">inf A_n$'</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb1-23"></span>
<span id="cb1-24">plt.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[patch_region_sup, patch_region_inf])</span>
<span id="cb1-25"></span>
<span id="cb1-26">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)</span>
<span id="cb1-27">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>)</span>
<span id="cb1-28">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb1-29">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-30">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-ph-chart" class="quarto-float quarto-figure quarto-figure-center anchored" height="508" width="662">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-ph-chart-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-09-set-operation/index_files/figure-html/fig-ph-chart-output-1.png" id="fig-ph-chart" width="662" height="508" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-ph-chart-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<hr>
</section>
<section id="事象列の上極限集合と下極限集合" class="level2">
<h2 class="anchored" data-anchor-id="事象列の上極限集合と下極限集合">事象列の上極限集合と下極限集合</h2>
<p><img src="https://latex.codecogs.com/png.latex?(%5COmega,%20%5Cmathcal%7BF%7D,%20P)"> を確率空間とします．事象の列 <img src="https://latex.codecogs.com/png.latex?A_n%20%5Cin%20%5Cmathcal%7BF%7D"> があったとして，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%5Csup%20A_n%0A"></p>
<p>を考えてみます．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega%20%5Cin%20%5Clim_%7Bn%5Cto%5Cinfty%7D%5Csup%20A_n%20=%20%5Cbigcap_%7Bk=1%7D%5E%5Cinfty%5Cbigcup_%7Bn=k%7D%5E%5Cinfty%20A_n%0A"></p>
<p>とすれば，<img src="https://latex.codecogs.com/png.latex?%5Comega"> は どんなに大きな<img src="https://latex.codecogs.com/png.latex?k"> をとってもそれ以降の <img src="https://latex.codecogs.com/png.latex?A_n"> に必ず含まれることを意味しています．もし <img src="https://latex.codecogs.com/png.latex?%5Comega"> が有限個の <img src="https://latex.codecogs.com/png.latex?%5C%7BA_%7Bn_1%7D,%20%5Ccdots,%20A_%7Bn_m%7D%5C%7D"> にのみ属するならば矛盾してしまうので，無限個の <img src="https://latex.codecogs.com/png.latex?A_n"> に属していなくてはならないことになります．つまり，</p>
<ul>
<li><span class="regmonkey-bold"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20P(%5Clim%5Csup%20A_n)"> は「<img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A_k"> を満たすような事象が，たびたび，しかし何回でも起こる確率」と解釈できます</span></li>
</ul>
<p>次に，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%5Cinf%20A_n%0A"></p>
<p>これは，ある <img src="https://latex.codecogs.com/png.latex?n"> 以降全ての <img src="https://latex.codecogs.com/png.latex?k%5Cgeq%20n"> で <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A_k"> となっているので，</p>
<ul>
<li><span class="regmonkey-bold">「十分先では常に <img src="https://latex.codecogs.com/png.latex?A_k"> が起こっているという事象」を意味します．</span></li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
上極限集合の別表記
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20P(%5Clim%5Csup%20A_n)"> は「<img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A_k"> を満たすような事象が，たびたび，しかし何回でも起こる確率」と解釈できることから</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(A_k%5C%20,%20%5C%20%5Ctext%7Bi.o.%7D)%0A"></p>
<p>と表記する場合もあります．i.o. は infinitely oftenの略です．</p>
</div>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li><a href="https://www.rokakuho.co.jp/data/books/0125.html">統計学への確率論，その先へ: ゼロからの測度論的理解と漸近理論への架け橋</a></li>
</ul>


</section>

 ]]></description>
  <category>集合論</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-09-set-operation/</guid>
  <pubDate>Wed, 09 Jul 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Law of Large Numbers</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-08-WLLN-SLLN/</link>
  <description><![CDATA[ 






<section id="review-question" class="level2">
<h2 class="anchored" data-anchor-id="review-question">Review Question</h2>
<div id="exr-" class="custom_problem blog-custom-border theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> <span class="def-title">WLLN</span></p>
<p><img src="https://latex.codecogs.com/png.latex?%7Cm%7C%3C%20%5Cinfty,%20%7C%5Csigma%7C%20%3C%20%5Cinfty"> として <img src="https://latex.codecogs.com/png.latex?X_i%20%5Coverset%7B%5Cmathrm%7Biid%7D%7D%7B%5Csim%7D%20D(m,%20%5Csigma%5E2)"> とする．このとき任意の <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20%3E%200"> について，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20P%5Cleft%5B%5Cleft%7C%5Cfrac%7BX_1%20+%20%5Ccdots%20+%20X_n%7D%7Bn%7D%20-%20m%5Cright%7C%20%3E%20%5Cepsilon%5Cright%5D%20=%200%0A"></p>
<p>が成り立つ．</p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Proof
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?Z%20%5Cequiv%20%5Csum%20X_i"> とおくと，i.i.d の仮定より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmathbb%20E%5BZ%5D%20&amp;=%20nm%5C%5C%0A%5Coperatorname%7BVar%7D(Z)%20&amp;=%20n%5Csigma%5E2%0A%5Cend%7Balign%7D%0A"></p>
<p>よって，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AP%5Cbigg%5B%5Cbigg%7C%5Cfrac%7BZ%7D%7Bn%7D%20-%20m%5Cbigg%7C%20%3E%20%5Cepsilon%5Cbigg%5D%0A%20%20&amp;=%20P%5B%7CZ%20-%20nm%7C%20%3E%20n%5Cepsilon%5D%5C%5C%0A%20%20&amp;=%20P%5B(Z%20-%20nm)%5E2%20%3E%20n%5E2%5Cepsilon%5E2%5D%5C%5C%0A%20%20&amp;%5Cleq%20%5Cfrac%7B%5Cmathbb%20E%5B(Z%20-%20nm)%5E2%5D%7D%7Bn%5E2%5Cepsilon%5E2%7D%20%5C,%20%5C%20%5Cbecause%7B%5Ctext%7BMarkov%E4%B8%8D%E7%AD%89%E5%BC%8F%7D%7D%5C%5C%0A%20%20&amp;=%20%5Cfrac%7B%5Csigma%5E2%7D%7Bn%5Cepsilon%5E2%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>従って，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20P%5Cleft%5B%5Cleft%7C%5Cfrac%7BX_1%20+%20%5Ccdots%20+%20X_n%7D%7Bn%7D%20-%20m%5Cright%7C%20%3E%20%5Cepsilon%5Cright%5D%20=%200%0A"></p>
</div>
</div>
</div>
</section>
<section id="the-weak-law-of-large-numbers" class="level2">
<h2 class="anchored" data-anchor-id="the-weak-law-of-large-numbers">The Weak Law of Large Numbers</h2>
<div id="thm-" class="custom_problem blog-custom-border theorem">
<p><span class="theorem-title"><strong>Theorem 1</strong></span> <span class="def-title">The Weak Law of Large Numbers</span></p>
<p><img src="https://latex.codecogs.com/png.latex?X_i"> がi.i.d.にmean <img src="https://latex.codecogs.com/png.latex?%5Cmu"> の分布に従うとする．このとき，任意の <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20%3E0"> について</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%5Cto%5Cinfty%7D%20P%5Cleft%5B%5Cleft%7C%5Cfrac%7BX_1%20+%20%5Ccdots%20+%20X_n%7D%7Bn%7D%20-%20%5Cmu%5Cright%7C%20%3E%20%5Cepsilon%5Cright%5D%20=%200%0A"></p>
</div>
<ul>
<li>WLLNは，<img src="https://latex.codecogs.com/png.latex?n"> が十分大きいとき，標本平均の分布の大部分が母平均 <img src="https://latex.codecogs.com/png.latex?%5Cmu"> の近くに集中することを示しています</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmu"> を中心とした長さのある正の区間 <img src="https://latex.codecogs.com/png.latex?%5B%5Cmu%E2%88%92%5Cepsilon,%20%5Cmu+%5Cepsilon%5D"> を考えると、<img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Csum%20X_i%7D%7BN%7D"> がその区間内に入る確率は高い</li>
</ul>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> <span class="def-title">conservativeな出口調査推定</span></p>
<p>有権者の内，<img src="https://latex.codecogs.com/png.latex?p"> の割合がA党を支持しているとします．<img src="https://latex.codecogs.com/png.latex?n"> 人を”randomly selected”して，その結果 <img src="https://latex.codecogs.com/png.latex?M_n"> の割合の人がA等を支持していたとします．マルコフ不等式より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%7CM_n%20-%20p%7C%3E%5Cepsilon)%5Cleq%20%5Cfrac%7Bp(1-p)%7D%7Bn%5Cepsilon%5E2%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?p(1-p)%5Cleq%20%5Cfrac%7B1%7D%7B4%7D"> から保守的に見積もると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%7CM_n%20-%20p%7C%3E%5Cepsilon)%5Cleq%20%5Cfrac%7B1%7D%7B4n%5Cepsilon%5E2%7D%0A"></p>
<p>例として <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20=0.01,%20n=50,000"> の水準を考えると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%7CM_n%20-%20p%7C%3E%5Cepsilon)%5Cleq%20%5Cfrac%7B1%7D%7B4%5Ccdot%2010,000%5Ccdot%200.01%5E2%7D%20=%200.05%0A"></p>
<p>つまり，<img src="https://latex.codecogs.com/png.latex?n=50,000"> インタビューしてようやく誤差 <img src="https://latex.codecogs.com/png.latex?0.01"> 未満の水準となることがわかります．</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
REMARKS
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>CLTを用いるともっと少ないサンプルサイズ <img src="https://latex.codecogs.com/png.latex?n"> で誤差 <img src="https://latex.codecogs.com/png.latex?0.01"> 未満の水準を達成できます</li>
</ul>
</div>
</div>
</div>
<hr>
</section>
<section id="the-strong-law-of-large-numbers" class="level2">
<h2 class="anchored" data-anchor-id="the-strong-law-of-large-numbers">The Strong Law of Large Numbers</h2>
<div id="thm-" class="custom_problem blog-custom-border theorem">
<p><span class="theorem-title"><strong>Theorem 2</strong></span> <span class="def-title">The Strong Law of Large Numbers</span></p>
<p><img src="https://latex.codecogs.com/png.latex?X_i"> がi.i.d.にmean <img src="https://latex.codecogs.com/png.latex?%5Cmu"> の分布に従うとする．また，<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20E%5B%7CX_i%7C%5D%20%3C%20%5Cinfty"> であるとする．このとき，sample mean列</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AM_n%20=%20%5Cfrac%7BX_1%20+%20%5Ccdots%20+%20X_n%7D%7Bn%7D%0A"></p>
<p>について</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%5Cleft(%5Clim_%7Bn%5Cto%5Cinfty%7D%5Cfrac%7BX_1%20+%20%5Ccdots%20+%20X_n%7D%7Bn%7D%20=%20%5Cmu%5Cright)%20=%201%0A"></p>
<p>が成り立つことを強大数の法則という．これはつまり，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AM_n%20%5Coverset%7Ba.s.%7D%7B%5Cto%7D%20%5Cmu%0A"></p>
</div>
<section id="ボレルカンテリの補題" class="level3">
<h3 class="anchored" data-anchor-id="ボレルカンテリの補題">ボレル＝カンテリの補題</h3>
<div id="thm-borel-1st" class="custom_problem blog-custom-border theorem">
<p><span class="theorem-title"><strong>Theorem 3</strong></span> <span class="def-title">ボレル＝カンテリの補題 I</span></p>
<p><img src="https://latex.codecogs.com/png.latex?(%5COmega,%20%5Cmathcal%7BF%7D,%20P)"> を確率空間とするとき，<img src="https://latex.codecogs.com/png.latex?A_i%20%5Cin%20%5Cmathcal%7BF%7D"> に対して，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5E%5Cinfty%20P(A_i)%20%3C%20%5Cinfty%20%5CRightarrow%20P(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Csup%7D%20A_n)%20=%200%0A"></p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Proof
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p>上極限の定義と確率の劣加法性より，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AP(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Csup%7D%20A_n)%0A%20%20&amp;=%20P%5Cleft(%5Cbigcap_%7Bn=1%7D%5E%5Cinfty%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%5Cright)%5C%5C%0A%20%20&amp;=%20%5Clim_%7Bn%5Cto%5Cinfty%7D%20P%5Cleft(%5Cbigcup_%7Bk=n%7D%5E%5Cinfty%20A_k%5Cright)%5C%5C%0A%20%20&amp;%5Cleq%20%5Clim_%7Bn%7D%5Csum_%7Bk=n%7D%5E%5Cinfty%20P(A_k)%0A%5Cend%7Balign%7D%0A"></p>
<p>ここで，<img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%5Cinfty%20P(A_i)"> であるので，<img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%5Clim_%7Bn%7D%5Csum_%7Bk=n%7D%5E%5Cinfty%20P(A_k)%20=%200">. 従って，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5E%5Cinfty%20P(A_i)%20%3C%20%5Cinfty%20%5CRightarrow%20P(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Csup%7D%20A_n)%20=%200%0A"></p>
</div>
</div>
</div>
<p>Theorem&nbsp;3 は <img src="https://latex.codecogs.com/png.latex?(A_i)_%7Bi%5Cin%5Cmathbb%20N%7D"> のうち高々有限個の <img src="https://latex.codecogs.com/png.latex?A_i"> しか起こらないことを意味します．また，書き換えると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Csup%7D%20A_n)%20=%200%20%5CLeftrightarrow%20P(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Cinf%7D%20A%5Ec_n)=%201%0A"></p>
<div id="exm-" class="custom_problem theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> <span class="def-title">コイン投げ問題とボレル＝カンテリの補題 I</span></p>
<p>コインを何度も独立に投げる試行を考えます．ただし，毎回投げるコインは違いものとし，<img src="https://latex.codecogs.com/png.latex?n"> 回目に投げるコインの表の出る確率は</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_n%20%5Cin%20(0,%201)%0A"></p>
<p>とします．このとき，ボレル＝カンテリの補題 Iより</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bn=1%7D%5E%5Cinfty%20p_n%20%3C%20%5Cinfty%20%5CRightarrow%20P(%5Ctext%7B%E8%A1%A8%E3%81%8C%E5%87%BA%E3%82%8B%E5%9B%9E%E6%95%B0%E3%81%AF%E6%9C%89%E9%99%90%E5%9B%9E%7D)%20=%201%0A"></p>
<p>となります．（<img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bn=1%7D%5E%5Cinfty%20p_n%20%3C%20%5Cinfty"> の一例としてはバーゼル問題など参照）</p>
<p>例として，確率変数</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AX_n%20=%20%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bc%7D%0A1%20&amp;%20%5Ctext%7B$n$%E5%9B%9E%E7%9B%AE%E3%81%AB%E8%A1%A8%E3%81%8C%E5%87%BA%E3%82%8B%7D%5C%5C%0A0%20&amp;%20%5Ctext%7B$n$%E5%9B%9E%E7%9B%AE%E3%81%AB%E8%A3%8F%E3%81%8C%E5%87%BA%E3%82%8B%7D%0A%5Cend%7Barray%7D%5Cright.%0A"></p>
<p>として，<img src="https://latex.codecogs.com/png.latex?A_n%20=%20%5C%7BX_n%20=%201%5C%7D%20%5Cin%20%5Cmathcal%7BF%7D"> を考えると，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bn=1%7D%5E%5Cinfty%20P(A_n)%20=%20%5Csum_%7Bn=1%7D%5E%5Cinfty%20p_n%20%3C%20%5Cinfty%0A"></p>
<p>ボレル=カンテリの補題 I を用いると</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Cinf%7D%20A%5Ec_n)%20=%20P%5Cleft(%5Clim_%7Bn%5Cto%5Cinfty%7D%5Cbigcup_%7Bn=1%7D%5E%5Cinfty%5Cbigcap_%7Bk=n%7D%5E%5Cinfty%5C%7BX_n%20=%200%5C%7D%20%5Cright)%20=%20%201%0A"></p>
<p>これは，確率1で，ある <img src="https://latex.codecogs.com/png.latex?n%20=%20N"> が存在して <img src="https://latex.codecogs.com/png.latex?k%5Cgeq%20n"> に対して <img src="https://latex.codecogs.com/png.latex?%5C%7BX_n%20=%200%5C%7D">, つまり裏が出るということを意味します．これは，表が出る回数は有限回と同じ意味です．</p>
</div>
<hr>
<div id="thm-" class="custom_problem blog-custom-border theorem">
<p><span class="theorem-title"><strong>Theorem 4</strong></span> <span class="def-title">Almost surely convergence</span></p>
<p>確率変数列 <img src="https://latex.codecogs.com/png.latex?%5C%7BX_n%5C%7D"> について，任意の <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20%3E0"> に対して</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bn=1%7D%5E%5Cinfty%20P(%7CX_n%20-%20X%7C%20%3E%20%5Cepsilon)%20%3C%20%5Cinfty%0A"></p>
<p>を満たすとします．このとき，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AX_n%20%5Coverset%7B%5Ctext%7Ba.s.%7D%7D%7B%5Cto%7DX%0A"></p>
</div>
<div class="callout callout-style-default callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Proof
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p>任意の <img src="https://latex.codecogs.com/png.latex?p%20%5Cin%20%5Cmathbb%20N"> に対して，確率事象を</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA_n%5Ep%20=%20%5C%7B%7CX_n%20-%20X%7C%20%3E%20p%5E%7B-1%7D%5C%7D%0A"></p>
<p>とおきます．仮定より</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bn=1%7D%5E%5Cinfty%20P(A_n%5Ep)%20%3C%20%5Cinfty%0A"></p>
<p>であるので，ボレル=カンテリの補題 I を用いると，任意の <img src="https://latex.codecogs.com/png.latex?p%20%5Cin%20%5Cmathbb%20N"> に対して</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP%5Cleft(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Csup%7D%20A_n%5Ep%20%5Cright)%20=%200%20%5CLeftrightarrow%20P%5Cleft(%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Cinf%7D%20(A_n%5Ep)%5Ec%20%5Cright)%20=%201%0A"></p>
<p>任意の <img src="https://latex.codecogs.com/png.latex?p%5Cin%5Cmathbb%20N"> で成立することから</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A1%0A%20%20&amp;=%20P%5Cleft(%5Cbigcap_%7Bp=1%7D%5E%5Cinfty%20%5Cleft%5C%7B%5Cunderset%7Bn%5Cto%5Cinfty%7D%7B%5Clim%5Cinf%7D%20(A_n%5Ep)%5Ec%5Cright%5C%7D%20%5Cright)%5C%5C%0A%20%20&amp;=%20P%5Cleft(%5Cbigcap_%7Bp=1%7D%5E%5Cinfty%5Cbigcup_%7Bn=1%7D%5E%5Cinfty%5Cbigcap_%7Bk%5Cgeq%20n%7D%20(A_k%5Ep)%5Ec%5Cright)%5C%5C%0A%20%20&amp;=%20P%5Cleft(%5Cbigcap_%7Bp=1%7D%5E%5Cinfty%5Cbigcup_%7Bn=1%7D%5E%5Cinfty%5Cbigcap_%7Bk%5Cgeq%20n%7D%20%5C%7B%7CX_k%20-%20X%7C%20%5Cleq%20p%5E%7B-1%7D%5C%7D%5Cright)%0A%5Cend%7Balign%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20=%20p%5E%7B-1%7D"> と対応させると，任意の <img src="https://latex.codecogs.com/png.latex?%5Cepsilon%20%3E0"> にたいして，ある <img src="https://latex.codecogs.com/png.latex?n%5Cin%5Cmathbb%20N"> が存在して，<img src="https://latex.codecogs.com/png.latex?k%5Cgeq%20n"> となるすべての <img src="https://latex.codecogs.com/png.latex?k"> について，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%7CX_k%20-%20X%7C%20%5Cleq%20%5Cepsilon%0A"></p>
<p>となる確率が１である，ことを意味しており，これは概収束の定義と一致している．</p>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>統計</category>
  <guid>https://ryonakagami.github.io/regmonkey-datascience-blog/posts/2025-07-08-WLLN-SLLN/</guid>
  <pubDate>Tue, 08 Jul 2025 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
